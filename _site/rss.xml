<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
        <title>Fukas&#39;s blog!</title>
        <description>Fukas&#39;s blog! - fukas</description>
        <link>http://sunfuchang.github.io</link>
        <atom:link href="http://sunfuchang.github.io/rss.xml" rel="self" type="application/rss+xml" />
        <lastBuildDate>Fri, 22 Apr 2016 13:39:31 +0800</lastBuildDate>
        <pubDate>Fri, 22 Apr 2016 13:39:31 +0800</pubDate>
        <ttl>60</ttl>


        <item>
                <title>Maven Profile Properties</title>
                <description>
&lt;h2 id=&quot;section&quot;&gt;场景&lt;/h2&gt;
&lt;p&gt;最近开发一个web项目，用的&lt;code&gt;maven&lt;/code&gt;构建，建立多个&lt;code&gt;profile&lt;/code&gt;，对应不同环境，分别包含不同的配置，在打包的时候发现，xml和properties配置文件没有被替换为profile下定义的&lt;code&gt;property&lt;/code&gt;属性值。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;解决方案：&lt;/h2&gt;

&lt;p&gt;WEB工程需要&lt;code&gt;war&lt;/code&gt;插件，启用web资源目录的&lt;code&gt;filter&lt;/code&gt;功能，而普通jar不需要。步骤如下：&lt;/p&gt;

&lt;p&gt;1、定义profile和各个property属性值
2、定义maven-war插件，并确认webresource文件目录
3、开启filter功能
4、执行clean package -P(profile-id) 命令，可以正常替换web资源目录下的形如&lt;code&gt;${}&lt;/code&gt;的变量&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;示例&lt;/h2&gt;

&lt;h3 id=&quot;profile&quot;&gt;1、定义profile&lt;/h3&gt;

&lt;p&gt;定义dev和uat两个profile，分别对应开发环境和uat环境：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;profiles&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;profile&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;dev&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 数据库相关配置--&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;mysql.jdbc.url&amp;gt;&lt;/span&gt;192.168.1.224:3306/cd_pro&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mysql.jdbc.url&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;mysql.jdbc.username&amp;gt;&lt;/span&gt;root&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mysql.jdbc.username&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;mysql.jdbc.password&amp;gt;&lt;/span&gt;xxxxxx&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mysql.jdbc.password&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 环境配置 --&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;application.context.ip&amp;gt;&lt;/span&gt;http://192.168.1.224/&lt;span class=&quot;nt&quot;&gt;&amp;lt;/application.context.ip&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;site.id&amp;gt;&lt;/span&gt;510100&lt;span class=&quot;nt&quot;&gt;&amp;lt;/site.id&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 支付相关配置--&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;revisa.pay.service.id&amp;gt;&lt;/span&gt;123456&lt;span class=&quot;nt&quot;&gt;&amp;lt;/revisa.pay.service.id&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--LOG4J日志级别--&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;log4j.log.level&amp;gt;&lt;/span&gt;debug&lt;span class=&quot;nt&quot;&gt;&amp;lt;/log4j.log.level&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;log4j.logfile.path&amp;gt;&lt;/span&gt;D:/logs/cd_pro.log&lt;span class=&quot;nt&quot;&gt;&amp;lt;/log4j.logfile.path&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;memorycache.url&amp;gt;&lt;/span&gt;192.168.1.224:11211&lt;span class=&quot;nt&quot;&gt;&amp;lt;/memorycache.url&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;activation&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;activeByDefault&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/activeByDefault&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/activation&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/profile&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;profile&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;uat&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 数据库相关配置--&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;mysql.jdbc.url&amp;gt;&lt;/span&gt;10.150.39.21:3306/cd_pro&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mysql.jdbc.url&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;mysql.jdbc.username&amp;gt;&lt;/span&gt;root&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mysql.jdbc.username&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;mysql.jdbc.password&amp;gt;&lt;/span&gt;xxxxxx&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mysql.jdbc.password&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 环境配置 --&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;application.context.ip&amp;gt;&lt;/span&gt;http://uat.zaichengdu.com/&lt;span class=&quot;nt&quot;&gt;&amp;lt;/application.context.ip&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;revisa.pay.site.id&amp;gt;&lt;/span&gt;510100&lt;span class=&quot;nt&quot;&gt;&amp;lt;/revisa.pay.site.id&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 支付相关配置--&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;revisa.pay.service.id&amp;gt;&lt;/span&gt;123456&lt;span class=&quot;nt&quot;&gt;&amp;lt;/revisa.pay.service.id&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!--LOG4J日志级别--&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;log4j.log.level&amp;gt;&lt;/span&gt;info&lt;span class=&quot;nt&quot;&gt;&amp;lt;/log4j.log.level&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;log4j.logfile.path&amp;gt;&lt;/span&gt;/data/logs/cd_pro.log&lt;span class=&quot;nt&quot;&gt;&amp;lt;/log4j.logfile.path&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;memorycache.url&amp;gt;&lt;/span&gt;10.150.38.106:11211&lt;span class=&quot;nt&quot;&gt;&amp;lt;/memorycache.url&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/profile&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/profiles&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;warweb&quot;&gt;2、war插件配置和web资源目录定义&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-war-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;webResources&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;resource&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- this is relative to the pom.xml directory --&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;directory&amp;gt;&lt;/span&gt;src/main/resources&lt;span class=&quot;nt&quot;&gt;&amp;lt;/directory&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;targetPath&amp;gt;&lt;/span&gt;WEB-INF/classes/&lt;span class=&quot;nt&quot;&gt;&amp;lt;/targetPath&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;filtering&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/filtering&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/resource&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/webResources&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;关键是里边filtering配置，设置为true则开启资源过滤，能够将,&lt;code&gt;${}&lt;/code&gt;的配置替换为profile里边对应的property属性值。&lt;/p&gt;

&lt;h3 id=&quot;properties&quot;&gt;3、修改properties配置文件&lt;/h3&gt;

&lt;p&gt;我的mysql文件配置：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;mysql.jdbc.url=${mysql.jdbc.url}
mysql.jdbc.username=${mysql.jdbc.username}
mysql.jdbc.password=${mysql.jdbc.password}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;section-3&quot;&gt;4、执行命令&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;mvn clean package -Puat -maven.test.skip=true&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;执行如上命令，然后配置文件会被替换为profile中定义的值：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;mysql.jdbc.url=10.150.39.21:3306/cd_pro
mysql.jdbc.username=root
mysql.jdbc.password=xxxxxx&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-4&quot;&gt;总结&lt;/h2&gt;

&lt;p&gt;WEB工程一定要配置war插件，制定web资源目录，并开启过滤功能，文件夹下的文本文件(xml、property)就能够替换profile定义的值。&lt;/p&gt;
</description>
                <link>http://sunfuchang.github.io/%E7%A0%94%E5%8F%91%E7%AE%A1%E7%90%86/2016/04/22/maven-profile-properties</link>
                <guid>http://sunfuchang.github.io/%E7%A0%94%E5%8F%91%E7%AE%A1%E7%90%86/2016/04/22/maven-profile-properties</guid>
                <pubDate>Fri, 22 Apr 2016 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Weixin Jssdk Use</title>
                <description>
&lt;p&gt;最近开发微信活动的时候，发现分享到朋友圈和发送给朋友功能不稳定，时而有效时而无效，打开&lt;code class=&quot;highlighter-rouge&quot;&gt;debug&lt;/code&gt;模式查看，发现多数报的数签名错误，仔细看了官方文档，最终问题出在ticket的缓存上。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;1、签名：&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;：
需要根据不同的页面动态获取，&lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;不能进行&lt;code class=&quot;highlighter-rouge&quot;&gt;encodeURIComponent&lt;/code&gt;，否则验签会失败
&lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;不能包括微信添加的#后边的部分，所以应该处理为：&lt;code class=&quot;highlighter-rouge&quot;&gt;window.location.href.split(&#39;#&#39;)[0]&lt;/code&gt;
签名用的&lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;必须是调用JS接口页面的完整URL。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nonceStr&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;timestamp&lt;/code&gt;：应该动态生成，而不能hardcode
签名用的&lt;code class=&quot;highlighter-rouge&quot;&gt;noncestr&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;timestamp&lt;/code&gt;必须与&lt;code class=&quot;highlighter-rouge&quot;&gt;wx.config&lt;/code&gt;中的&lt;code class=&quot;highlighter-rouge&quot;&gt;nonceStr&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;timestamp&lt;/code&gt;相同&lt;/li&gt;
  &lt;li&gt;为安全考虑，签名必须在后台进行，其他调用js在前台进行。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ticketaccesstoken&quot;&gt;2、ticket和accesstoken：&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;accesstoken&lt;/code&gt;：同调用微信其他接口的&lt;code class=&quot;highlighter-rouge&quot;&gt;accesstoken&lt;/code&gt;，必须全局缓存，以免影响其他业务，即是说：微信所有业务应该用同一个&lt;code class=&quot;highlighter-rouge&quot;&gt;accesstoken&lt;/code&gt;去调用微信接口，而不能自己刷新&lt;code class=&quot;highlighter-rouge&quot;&gt;accesstoken&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ticket&lt;/code&gt;：同&lt;code class=&quot;highlighter-rouge&quot;&gt;accesstoken&lt;/code&gt;一样，必须全局缓存，方式很多，可以放到数据库，或者放到缓存。目前&lt;code class=&quot;highlighter-rouge&quot;&gt;ticket&lt;/code&gt;的有效时间为2小时，所以2小时内&lt;code class=&quot;highlighter-rouge&quot;&gt;ticket&lt;/code&gt;未过期时，不能重复获取，否则可能导致&lt;code class=&quot;highlighter-rouge&quot;&gt;ticket&lt;/code&gt;获取次数超过限额，导致&lt;code class=&quot;highlighter-rouge&quot;&gt;sign&lt;/code&gt;失败。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;3、注意代码执行顺序&lt;/h2&gt;
&lt;p&gt;首先应该获取签名，签名获取后在调用&lt;code class=&quot;highlighter-rouge&quot;&gt;wx.config&lt;/code&gt;方法，然后再执行&lt;code class=&quot;highlighter-rouge&quot;&gt;wx.ready&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;wx.error&lt;/code&gt;方法。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;4、其他&lt;/h2&gt;
&lt;p&gt;每个页面加载完成后都应该重新从后台获取签名信息，避免签名失败&lt;/p&gt;

&lt;p&gt;具体开发步骤详见&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/wiki/11/74ad127cc054f6b80759c40f77ec03db.html&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;5、官方常见问题及处理方法：&lt;/h2&gt;

&lt;p&gt;调用config 接口的时候传入参数 debug: true 可以开启debug模式，页面会alert出错误信息。以下为常见错误及解决方法：&lt;/p&gt;

&lt;h3 id=&quot;invalid-url-domain&quot;&gt;1、invalid url domain&lt;/h3&gt;
&lt;p&gt;当前页面所在域名与使用的appid没有绑定，请确认正确填写绑定的域名，如果使用了端口号，则配置的绑定域名也要加上端口号（一个appid可以绑定三个有效域名，见 目录1.1.1）。&lt;/p&gt;

&lt;h3 id=&quot;invalid-signature&quot;&gt;2、invalid signature签名错误。&lt;/h3&gt;
&lt;p&gt;建议按如下顺序检查：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;确认签名算法正确，可用 http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign 页面工具进行校验。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;确认config中nonceStr（js中驼峰标准大写S）, timestamp与用以签名中的对应noncestr, timestamp一致。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;确认url是页面完整的url(请在当前页面alert(location.href.split(‘#’)[0])确认)，包括’http(s)://’部分，以及’？’后面的GET参数部分,但不包括’#’hash后面的部分。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;确认 config 中的 appid 与用来获取 jsapi_ticket 的 appid 一致。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;确保一定缓存access_token和jsapi_ticket。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;确保你获取用来签名的url是动态获取的，动态页面可参见实例代码中php的实现方式。
如果是html的静态页面在前端通过ajax将url传到后台签名，前端需要用js获取当前页面除去’#’hash部分的链接（可用location.href.split(‘#’)[0]获取,而且需要encodeURIComponent），因为页面一旦分享，微信客户端会在你的链接末尾加入其它参数，如果不是动态获取当前链接，将导致分享后的页面签名失败。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;the-permission-value-is-offline-verifying&quot;&gt;3、the permission value is offline verifying&lt;/h3&gt;

&lt;p&gt;这个错误是因为config没有正确执行，或者是调用的JSAPI没有传入config的jsApiList参数中。建议按如下顺序检查：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;确认config正确通过。&lt;/li&gt;
  &lt;li&gt;如果是在页面加载好时就调用了JSAPI，则必须写在wx.ready的回调中。&lt;/li&gt;
  &lt;li&gt;确认config的jsApiList参数包含了这个JSAPI。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;permission-denied&quot;&gt;4、permission denied&lt;/h3&gt;

&lt;p&gt;该公众号没有权限使用这个JSAPI，或者是调用的JSAPI没有传入config的jsApiList参数中（部分接口需要认证之后才能使用）。&lt;/p&gt;

&lt;h3 id=&quot;function-not-exist&quot;&gt;5、function not exist&lt;/h3&gt;

&lt;p&gt;当前客户端版本不支持该接口，请升级到新版体验。&lt;/p&gt;

&lt;h3 id=&quot;configok602ok&quot;&gt;6、为什么6.0.1版本config:ok，但是6.0.2版本之后不ok&lt;/h3&gt;

&lt;p&gt;因为6.0.2版本之前没有做权限验证，所以config都是ok，但这并不意味着你config中的签名是OK的，请在6.0.2检验是否生成正确的签名以保证config在高版本中也ok。&lt;/p&gt;

&lt;h3 id=&quot;iosandroid&quot;&gt;7、在iOS和Android都无法分享&lt;/h3&gt;

&lt;p&gt;请确认公众号已经认证，只有认证的公众号才具有分享相关接口权限，如果确实已经认证，则要检查监听接口是否在wx.ready回调函数中触发&lt;/p&gt;

&lt;h3 id=&quot;jsapiticket&quot;&gt;8、服务上线之后无法获取jsapi_ticket，自己测试时没问题。&lt;/h3&gt;

&lt;p&gt;因为access_token和jsapi_ticket必须要在自己的服务器缓存，否则上线后会触发频率限制。请确保一定对token和ticket做缓存以减少2次服务器请求，不仅可以避免触发频率限制，还加快你们自己的服务速度。目前为了方便测试提供了1w的获取量，超过阀值后，服务将不再可用，请确保在服务上线前一定全局缓存access_token和jsapi_ticket，两者有效期均为7200秒，否则一旦上线触发频率限制，服务将不再可用。&lt;/p&gt;

&lt;h3 id=&quot;uploadimage&quot;&gt;9、uploadImage怎么传多图&lt;/h3&gt;

&lt;p&gt;目前只支持一次上传一张，多张图片需等前一张图片上传之后再调用该接口&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;10、没法对本地选择的图片进行预览&lt;/h3&gt;

&lt;p&gt;chooseImage接口本身就支持预览，不需要额外支持&lt;/p&gt;

&lt;h3 id=&quot;abinvalid-signature&quot;&gt;11、通过a链接(例如先通过微信授权登录)跳转到b链接，invalid signature签名失败&lt;/h3&gt;

&lt;p&gt;后台生成签名的链接为使用jssdk的当前链接，也就是跳转后的b链接，请不要用微信登录的授权链接进行签名计算，后台签名的url一定是使用jssdk的当前页面的完整url除去’#’部分&lt;/p&gt;

&lt;h3 id=&quot;configfail&quot;&gt;12、出现config:fail错误&lt;/h3&gt;

&lt;p&gt;这是由于传入的config参数不全导致，请确保传入正确的appId、timestamp、nonceStr、signature和需要使用的jsApiList&lt;/p&gt;

&lt;h3 id=&quot;jsapi&quot;&gt;13、如何把jsapi上传到微信的多媒体资源下载到自己的服务器&lt;/h3&gt;

&lt;p&gt;请参见文档中uploadVoice和uploadImage接口的备注说明&lt;/p&gt;

&lt;h3 id=&quot;androidjssdk&quot;&gt;14、Android通过jssdk上传到微信服务器，第三方再从微信下载到自己的服务器，会出现杂音&lt;/h3&gt;

&lt;p&gt;微信团队已经修复此问题，目前后台已优化上线&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;15、绑定父级域名，是否其子域名也是可用的&lt;/h3&gt;

&lt;p&gt;是的，合法的子域名在绑定父域名之后是完全支持的&lt;/p&gt;

&lt;h3 id=&quot;ios6162&quot;&gt;16、在iOS微信6.1版本中，分享的图片外链不显示，只能显示公众号页面内链的图片或者微信服务器的图片，已在6.2中修复&lt;/h3&gt;

&lt;h3 id=&quot;section-6&quot;&gt;17、是否需要对低版本自己做兼容&lt;/h3&gt;

&lt;p&gt;jssdk都是兼容低版本的，不需要第三方自己额外做更多工作，但有的接口是6.0.2新引入的，只有新版才可调用&lt;/p&gt;

&lt;h3 id=&quot;section-7&quot;&gt;18、该公众号支付签名无效，无法发起该笔交易&lt;/h3&gt;

&lt;p&gt;请确保你使用的jweixin.js是官方线上版本，不仅可以减少用户流量，还有可能对某些bug进行修复，拷贝到第三方服务器中使用，官方将不对其出现的任何问题提供保障，具体支付签名算法可参考 JSSDK微信支付一栏&lt;/p&gt;

&lt;h3 id=&quot;androidpushstateh5pushstateweb-appandroid62&quot;&gt;19、目前Android微信客户端不支持pushState的H5新特性，所以使用pushState来实现web app的页面会导致签名失败，此问题已在Android6.2中修复&lt;/h3&gt;

&lt;h3 id=&quot;uploadimagechooseimageandroid&quot;&gt;20、uploadImage在chooseImage的回调中有时候Android会不执行&lt;/h3&gt;

&lt;p&gt;Android6.2会解决此问题，若需支持低版本可以把调用uploadImage放在setTimeout中延迟100ms解决&lt;/p&gt;

&lt;h3 id=&quot;require-subscribe&quot;&gt;21、require subscribe错误说明你没有订阅该测试号，该错误仅测试号会出现&lt;/h3&gt;

&lt;h3 id=&quot;getlocationopenlocation&quot;&gt;22、getLocation返回的坐标在openLocation有偏差&lt;/h3&gt;

&lt;p&gt;因为getLocation返回的是gps坐标，openLocation打开的腾讯地图为火星坐标，需要第三方自己做转换，6.2版本开始已经支持直接获取火星坐标&lt;/p&gt;

&lt;h3 id=&quot;menuitemaddcontact&quot;&gt;23、查看公众号（未添加）: “menuItem:addContact”不显示&lt;/h3&gt;

&lt;p&gt;目前仅有从公众号传播出去的链接才能显示，来源必须是公众号&lt;/p&gt;

&lt;h3 id=&quot;icp&quot;&gt;24、ICP备案数据同步有一天延迟，所以请在第二日绑定&lt;/h3&gt;

&lt;h2 id=&quot;section-8&quot;&gt;6、示例：&lt;/h2&gt;

&lt;h3 id=&quot;ticket&quot;&gt;1、后台获取ticket方法：&lt;/h3&gt;
&lt;pre&gt;
/**
 * 缓存微信jssdk调用的ticket。
 *
 * @param appid
 * @return
 * @throws IOException
 */
public String cacheJsSDKTicket(String appid) throws IOException {
    Assert.hasLength(appid);
    String cachedTicket = spyMemcachedClient.get(WechatConst.Cache.CACHE_KEY + &quot;TICKET&quot;);
    if (cachedTicket != null &amp;amp;&amp;amp; !&quot;&quot;.equals(cachedTicket)) {
        LOG.info(&quot;Ticket exists, return directly ...&quot;);
        return cachedTicket;
    }
    LOG.info(&quot;Ticket not exists, get from weixin ...&quot;);
    String accessToken = weChatApi.getAccessToken(appid);
    String ticket = weChatApi.getJsApiTicket(accessToken);
    // 7200秒过期
    int timeOut = 7200;
    spyMemcachedClient.safeSet(WechatConst.Cache.CACHE_KEY + &quot;TICKET&quot;, timeOut, ticket);
    return ticket;
}
&lt;/pre&gt;

&lt;p&gt;这里我将ticket全局缓存到memorycache中。&lt;/p&gt;

&lt;h3 id=&quot;section-9&quot;&gt;2、后台签名方法：&lt;/h3&gt;

&lt;pre&gt;
@Override
    public String signJsSDK(String ticket, String url, String timestamp, String nonceStr) throws NoSuchAlgorithmException {
    Map&amp;lt;String, Object&amp;gt; map = new HashMap&amp;lt;String, Object&amp;gt;();
    map.put(&quot;noncestr&quot;, nonceStr);
    map.put(&quot;jsapi_ticket&quot;, ticket);
    map.put(&quot;timestamp&quot;, timestamp);
    map.put(&quot;url&quot;, url);
    String[] ss = {&quot;noncestr&quot;, &quot;jsapi_ticket&quot;, &quot;timestamp&quot;, &quot;url&quot;};
    Arrays.sort(ss);
    String signStr = &quot;&quot;;
    for (String s : ss) {
        signStr += s + &quot;=&quot; + map.get(s) + &quot;&amp;amp;&quot;;
    }
    signStr = signStr.substring(0, signStr.length() - 1);
    return new SHA1().getDigestOfString(signStr.getBytes());
}
&lt;/pre&gt;

&lt;h3 id=&quot;section-10&quot;&gt;3、获取签名方法：&lt;/h3&gt;
&lt;pre&gt;
public void getJsSdkInfo(CspServiceContext serviceContext) throws IOException, NoSuchAlgorithmException {
    MessageObject mo = serviceContext.getRequestData();
    String url = (String) mo.getValue(&quot;url&quot;);
    String appid = (String) mo.getValue(&quot;appid&quot;);
    String timestamp = Long.toString(System.currentTimeMillis() / 1000);
    String nonceStr = UUID.randomUUID().toString(); 
    // 缓存ticket
    String ticket = memoryCacheManager.cacheJsSDKTicket(appid);
    // 签名
    String sign = weChatApi.signJsSDK(ticket, url, timestamp, nonceStr); 
    Map&amp;lt;String, Object&amp;gt; resMap = new HashMap&amp;lt;String, Object&amp;gt;();
    resMap.put(&quot;appid&quot;, appid);
    resMap.put(&quot;ticket&quot;, ticket);
    resMap.put(&quot;sign&quot;, sign);
    resMap.put(&quot;nonceStr&quot;, nonceStr);
    resMap.put(&quot;timestamp&quot;, timestamp);

    Response resp = new Response(resMap);
    serviceContext.setResponseData(resp);
    serviceContext.setResult(Result.FAULT_RESULT);
}
&lt;/pre&gt;

&lt;h3 id=&quot;jssdk&quot;&gt;4、前台获取jssdk：&lt;/h3&gt;

&lt;pre&gt;
function _wechatConfig(o) {
        wx.config({
            debug: debug, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
            appId: o.appid, // 必填，公众号的唯一标识
            timestamp: o.timestamp, // 必填，生成签名的时间戳
            nonceStr: o.nonceStr, // 必填，生成签名的随机串
            signature: o.sign,// 必填，签名，见附录1
            jsApiList: [
                &#39;onMenuShareTimeline&#39;,
                &#39;onMenuShareAppMessage&#39;
            ] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
        });
    }
 
    function _getWechatJsSdkInfo(callback) {
        var s = W.Storage.get(W.location.href + &quot;_&quot; + area);
            var appid =&#39;wx7e80e8f93543a5c8&#39;;
            ajaxJsonCall(&#39;/wechat/service/WeChat.getJsSdkInfo.json&#39;, {
                url: W.location.href.split(&#39;#&#39;)[0],
                appid: appid
            }, function (data) {
                if (data.rtnCode === &quot;000000&quot;) {
                    var o = data.responseData;
                    W.Storage.set(W.location.href + &quot;_&quot; + area, o, jsSdkTimeout);
                    callback(o);
                } else {
                    W.Storage.remove(W.location.href + &quot;_&quot; + area);
                }
            }, false);
    }

_getWechatJsSdkInfo(_wechatConfig);

wx.checkJsApi({
    jsApiList: [
        &#39;getLocation&#39;,
        &#39;onMenuShareTimeline&#39;,
        &#39;onMenuShareAppMessage&#39;
    ],
    success: function (res) {
        //alert(JSON.stringify(res));
    }
});
 
//var url = &quot;www.zaichengdu.com&quot; + app_path;
var url = curDomain;
function _shareAppMessage() {
    // 页面加载后设置微信分享给朋友的内容
    wx.onMenuShareAppMessage({
        title: &#39;圣诞老人送礼啦，现金红包人人领！&#39;, // 分享标题
        desc: &#39;“圣诞夺包”35000份礼包等你拆！&#39;, // 分享描述
        link: encodeURI(curDomain + &#39;/christmas/service/ChristmasSockOnline.home.do?area=cd&#39;),//encodeURI(window.location.href.replace(&#39;&amp;amp;from=ad&#39;, &#39;&#39;)), // 分享链接
        imgUrl: url + &#39;/public/christmas/img/shorejoin.jpg&#39;, // 分享图标
        type: &#39;&#39;, // 分享类型,music、video或link，不填默认为link
        dataUrl: &#39;&#39;, // 如果type是music或video，则要提供数据链接，默认为空
        success: function () {
            // 用户确认分享后执行的回调函数
            //Message.toast.success(&quot;分享成功！&quot;).appear();
        },
        cancel: function () {
            // 用户取消分享后执行的回调函数
            //alert(&#39;cancel&#39;);
        }
    });
}
 
function _shareTimeline() {
    // 设置分享到朋友圈的内容
    wx.onMenuShareTimeline({
        title: &#39;圣诞老人送礼啦，现金红包人人领！&#39;, // 分享标题
        link: encodeURI(curDomain + &#39;/christmas/service/ChristmasSockOnline.home.do?area=cd&#39;),//encodeURI(window.location.href.replace(&#39;&amp;amp;from=ad&#39;, &#39;&#39;)), // 分享链接
        imgUrl: url + &#39;/public/christmas/img/shorejoin.jpg&#39;, // 分享图标
        success: function () {
            // 用户确认分享后执行的回调函数
            Message.toast.success(&quot;分享成功！&quot;).appear();
        },
        cancel: function () {
            // 用户取消分享后执行的回调函数
            //alert(&#39;cancel&#39;);
        }
    });
}
 
wx.ready(function () {
    // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。
    //alert(&#39;success&#39;);
    _shareAppMessage();
    _shareTimeline();
});
 
wx.error(function (res) {
    // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。
    //alert(&#39;error&#39;);
});
&lt;/pre&gt;
</description>
                <link>http://sunfuchang.github.io/%E6%8A%80%E6%9C%AF%E6%91%98%E5%BD%95/2015/12/29/weixin-jssdk-use</link>
                <guid>http://sunfuchang.github.io/%E6%8A%80%E6%9C%AF%E6%91%98%E5%BD%95/2015/12/29/weixin-jssdk-use</guid>
                <pubDate>Tue, 29 Dec 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Install Nexus On Windows For Maven</title>
                <description>
&lt;p&gt;maven如今已经是非常流行的项目构建工具，开发人员不仅需要使用maven，还需要认识、使用甚至自己搭建maven私服，以便管理jar包、开发、发布jar包等等，甚至实现自动化部署、持续集成都需要用到maven和私服。&lt;/p&gt;

&lt;p&gt;maven私服有很多开源软件，最常用的就是本文需要介绍的nexus。&lt;/p&gt;

&lt;h2 id=&quot;nexus&quot;&gt;1、下载nexus：&lt;/h2&gt;

&lt;p&gt;没什么难的，下载一个oss版本，即open source开源版。下载地址：http://www.sonatype.org/nexus/go&lt;/p&gt;

&lt;p&gt;如下图所示：
&lt;img src=&quot;/assets/images/article_imgs/technology/2015/12/24/2463997d-c06d-46e5-84f8-69ea9d70757c.jpg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ziptgz&quot;&gt;2、将下载的zip包或者tgz包解压出来：&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/technology/2015/12/24/861b0cb9-8f70-4235-aa0f-bf8cfcd394e4.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如图所示，nexus默认的工作目录为统计目录下的sonatype-work目录，可以在&lt;code class=&quot;highlighter-rouge&quot;&gt;%nexus_home%/conf/nexus.properties&lt;/code&gt;中进行修改。
工作目录的作用：最主要是存储，所有的仓库索引文件、插件索引文件都存在工作目录中(storage、plugin-repository目录)；另外就是存储系统日志（log文件夹）。因此，工作目录应该设置为磁盘空间较大的目录。&lt;/p&gt;

&lt;h2 id=&quot;nexus-1&quot;&gt;3、启动nexus：&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/technology/2015/12/24/b9351649-b0e3-4bb0-a953-7c4980393208.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%nexus_home%/bin/js/&lt;/code&gt;下找到操作系统对应的脚本&lt;code class=&quot;highlighter-rouge&quot;&gt;console-nexus.bat&lt;/code&gt;，运行即可。&lt;/p&gt;

&lt;p&gt;nexus默认使用内置的jetty服务器，文件夹中其他的脚本，根据名称很容易理解，无非是安装成windows服务，其他服务、停止服务、卸载服务等。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;4、登录并修改密码：&lt;/h2&gt;

&lt;p&gt;nexus默认的管理员账号为&lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt;，密码&lt;code class=&quot;highlighter-rouge&quot;&gt;admin123&lt;/code&gt;，可以通过左侧菜单&lt;code class=&quot;highlighter-rouge&quot;&gt;security-user&lt;/code&gt;来修改密码。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;5、仓库管理：&lt;/h2&gt;

&lt;p&gt;点击菜单栏的view/repostories-repostories菜单，进入仓库界面：
&lt;img src=&quot;/assets/images/article_imgs/technology/2015/12/24/469f9086-9013-4a2f-a62b-ec34fbbad560.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;（1）仓库类型：&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;hosted&lt;/strong&gt;：宿主仓库，其实就是本地的仓库&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;proxy&lt;/strong&gt;：代理仓库，就是当前私服代理了其他的第三方仓库或Apache的中央仓库&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;virtual&lt;/strong&gt;：虚拟仓库&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;group&lt;/strong&gt;：多个仓库可以组成一个组，使用组就相当于在使用组内的仓库成员的资源&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;section-3&quot;&gt;（2）说明：&lt;/h3&gt;

&lt;p&gt;如图的界面所示，nexus默认有一个仓库组（&lt;code class=&quot;highlighter-rouge&quot;&gt;public repositories&lt;/code&gt;），其配置可以通过它的&lt;code class=&quot;highlighter-rouge&quot;&gt;configuration&lt;/code&gt;子标签页查看：
&lt;img src=&quot;/assets/images/article_imgs/technology/2015/12/24/a1d832cd-782a-4314-9105-66ea4ef51936.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以看到，这个组里边默认有本地的&lt;code class=&quot;highlighter-rouge&quot;&gt;releases&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;snapsots&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;3rd party&lt;/code&gt;库，同时还有&lt;code class=&quot;highlighter-rouge&quot;&gt;central&lt;/code&gt;库，这些仓库的顺序决定了查找资源的顺序，所以最好将本地的放在前边。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;releases&lt;/strong&gt;库，系统默认的库，存放本地部署的release版包；&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;snapshots&lt;/strong&gt;库，系统默认库，存放本地的snapshot版包；&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;3rd party&lt;/strong&gt;库，系统默认库，存放第三方包；&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;central&lt;/strong&gt;库，代理Apache中间仓库。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;到这里，我们的私服已经可以使用了。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;6、使用仓库：&lt;/h2&gt;

&lt;h3 id=&quot;maven&quot;&gt;（1）修改&lt;code class=&quot;highlighter-rouge&quot;&gt;maven&lt;/code&gt;的配置文件：&lt;/h3&gt;

&lt;p&gt;找到maven的配置文件（这里我直接修改&lt;code class=&quot;highlighter-rouge&quot;&gt;%M2_HOME%/conf/setting.xml&lt;/code&gt;文件），找到&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;mirrors&amp;gt;&lt;/code&gt;节点，添加一个镜像节点：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;mirror&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;nexus&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;mirrorOf&amp;gt;&lt;/span&gt;*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mirrorOf&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;http://localhost:8081/nexus/content/groups/public&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mirror&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;：镜像的位唯一标示&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;mirrorOf&lt;/strong&gt;：代理哪些仓库，*为所有的资源都从本&lt;code class=&quot;highlighter-rouge&quot;&gt;maven&lt;/code&gt;私服获取&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt;：及新搭建的私服的默认仓库组的url地址（通过页面可以查看）
同样，在&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;profile&amp;gt;&lt;/code&gt;节点配置一个&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;repository&amp;gt;&lt;/code&gt;节点和&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;pluginRepostory&amp;gt;&lt;/code&gt;节点。&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;repository&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;dc-chengdu&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dc-chengdu&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;http://192.168.1.223:8081/nexus/content/repositories/central&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;releases&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;enabled&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/enabled&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/releases&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;snapshots&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;enabled&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/enabled&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/snapshots&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/repository&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;ok，配置完成，接下来，我们可以在项目的&lt;code class=&quot;highlighter-rouge&quot;&gt;pom.xml&lt;/code&gt;中配置需要的jar包，如果本地没有，则会到我们搭建的私服中找其索引文件，并并下载到本地，如果私服没有，则会去仓库组中找（确切的说是仓库组配置的Apache中央仓库去找），找到并将索引文件保存到私服中，将jar包下载到本地仓库中。&lt;/p&gt;

&lt;p&gt;因此，我们没必要将中央仓库的所有索引下下来，而是使用到的时候会自动下载。&lt;/p&gt;

&lt;h2 id=&quot;jar&quot;&gt;7、如何发布本地的jar包到私服中？&lt;/h2&gt;
&lt;p&gt;###（1）配置授权：
在&lt;code class=&quot;highlighter-rouge&quot;&gt;maven&lt;/code&gt;的配置文件（这里我直接修改&lt;code class=&quot;highlighter-rouge&quot;&gt;%M2_HOME%/conf/setting.xml&lt;/code&gt;文件）中，找到&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;servers&amp;gt;&lt;/code&gt;节点，添加两个&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;server&amp;gt;&lt;/code&gt;配置：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;server&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;releases&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;username&amp;gt;&lt;/span&gt;deployment&lt;span class=&quot;nt&quot;&gt;&amp;lt;/username&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;password&amp;gt;&lt;/span&gt;123456&lt;span class=&quot;nt&quot;&gt;&amp;lt;/password&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/server&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;server&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;snapshots&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;username&amp;gt;&lt;/span&gt;deployment&lt;span class=&quot;nt&quot;&gt;&amp;lt;/username&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;password&amp;gt;&lt;/span&gt;123456&lt;span class=&quot;nt&quot;&gt;&amp;lt;/password&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/server&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;：必须与项目的&lt;code class=&quot;highlighter-rouge&quot;&gt;pom&lt;/code&gt;中配置&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;distributionManagement&amp;gt;&lt;/code&gt;的中的id相同，唯一标示，这里的&lt;code class=&quot;highlighter-rouge&quot;&gt;release&lt;/code&gt;表示发布&lt;code class=&quot;highlighter-rouge&quot;&gt;release&lt;/code&gt;版本的包到&lt;code class=&quot;highlighter-rouge&quot;&gt;release&lt;/code&gt;仓库，而&lt;code class=&quot;highlighter-rouge&quot;&gt;snapshot&lt;/code&gt;表示发布&lt;code class=&quot;highlighter-rouge&quot;&gt;snapshot&lt;/code&gt;版本的包到&lt;code class=&quot;highlighter-rouge&quot;&gt;snapshot&lt;/code&gt;仓库；&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;username&lt;/strong&gt;：具有私服发布包权限的用户的&lt;code class=&quot;highlighter-rouge&quot;&gt;User ID&lt;/code&gt;，具体见私服的权限和用户说明&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;password&lt;/strong&gt;：当然是用户的密码。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/technology/2015/12/24/a545c31b-39b3-4f7a-90f9-272b8830040d.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;（2）配置发布的地址信息&lt;/h3&gt;
&lt;p&gt;在项目的&lt;code class=&quot;highlighter-rouge&quot;&gt;pom.xml&lt;/code&gt;配置文件中，配置发布的地址信息：
&lt;img src=&quot;/assets/images/article_imgs/technology/2015/12/24/d9a6c058-9ca7-4306-95a7-0f38601b8660.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;：与（1）中配置授权时的id一致；&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;url&lt;/strong&gt;：私服对应的仓库的url地址。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其实，这部分信息在私服仓库子标签页&lt;code class=&quot;highlighter-rouge&quot;&gt;summary&lt;/code&gt;可以查看：
&lt;img src=&quot;/assets/images/article_imgs/technology/2015/12/24/ae52277c-0c53-492b-a5bf-6cb5f22b823a.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-6&quot;&gt;（3）配置完成:&lt;/h3&gt;

&lt;p&gt;可以发布你的jar包到私服中了，如果项目的pom.xml中，&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;version&amp;gt;&lt;/code&gt;属性有SNAPSHOT表示为快照版，则会发布到snapshot仓库中，否则，发布到release仓库中。&lt;/p&gt;

&lt;h2 id=&quot;section-7&quot;&gt;注意事项总结：&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;私服不会下载中央仓库的所有jar包，而是下载其索引文件，最终的jar包还是来自中央仓库或第三方仓库；&lt;/li&gt;
  &lt;li&gt;不需要一开始就下载中央仓库的索引文件，该文件很大，而是使用过程中逐渐下载；&lt;/li&gt;
  &lt;li&gt;注意仓库组的概念，一般来说默认的组已经完全够用了，按照需要，可以自己建立需要的仓库。&lt;/li&gt;
&lt;/ol&gt;
</description>
                <link>http://sunfuchang.github.io/%E6%8A%80%E6%9C%AF%E6%91%98%E5%BD%95/2015/12/24/install-nexus-on-windows-for-maven</link>
                <guid>http://sunfuchang.github.io/%E6%8A%80%E6%9C%AF%E6%91%98%E5%BD%95/2015/12/24/install-nexus-on-windows-for-maven</guid>
                <pubDate>Thu, 24 Dec 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Query Performance Analysis In Mysql</title>
                <description>
&lt;p&gt;最近开发微信红包活动，并发量大概在100左右，数据库存储数据几十万条。活动上线后，遇到一个问题，服务启动起来后，在几分钟之内，服务变得很慢，通过分析tcp状态（ss -s）发现，处于timewait状态的TCP达到一千多个，然后从应用前台、后台到数据库逐步分析，最后发现，由于某一张表的数据量达到几十万，而某一个逻辑需要连接该表进行数据查询，导致SQL执行非常缓慢。于是整理下SQL慢查询分析的相关方法，以便查阅。&lt;/p&gt;

&lt;h2 id=&quot;codeexplaincode&quot;&gt;一、&lt;code&gt;explain&lt;/code&gt;语句&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;explain&lt;/code&gt;命令在解决数据库性能上是第一推荐使用命令，大部分的性能问题可以通过此命令来简单的解决，&lt;code&gt;explain&lt;/code&gt;可以用来查看 SQL 语句的执行效 果，可以帮助选择更好的索引和优化查询语句，写出更好的优化语句。&lt;/p&gt;

&lt;p&gt;Explain语法：&lt;/p&gt;
&lt;pre&gt;explain select … from … [where ...]&lt;/pre&gt;

&lt;p&gt;例如：explain select * from news;
输出：&lt;/p&gt;
&lt;pre&gt;
---- ------------- ------- ------- ------------------- --------- --------- ------- ------ -------
| id | select_type | table | type | possible_keys | key | key_len | ref | rows | Extra |
---- ------------- ------- ------- ------------------- --------- --------- ------- ------ -------
&lt;/pre&gt;

&lt;p&gt;下面对各个属性进行了解：&lt;/p&gt;

&lt;p&gt;1、&lt;strong&gt;id&lt;/strong&gt;：这是SELECT的查询序列号&lt;/p&gt;

&lt;p&gt;2、&lt;strong&gt;select_type&lt;/strong&gt;：select_type就是select的类型，可以有以下几种：&lt;/p&gt;
&lt;pre&gt;
SIMPLE：简单SELECT(不使用UNION或子查询等)
PRIMARY：最外面的SELECT
UNION：UNION中的第二个或后面的SELECT语句
DEPENDENT UNION：UNION中的第二个或后面的SELECT语句，取决于外面的查询
UNION RESULT：UNION的结果。
SUBQUERY：子查询中的第一个SELECT
DEPENDENT SUBQUERY：子查询中的第一个SELECT，取决于外面的查询
DERIVED：导出表的SELECT(FROM子句的子查询)
&lt;/pre&gt;

&lt;p&gt;3、&lt;strong&gt;table&lt;/strong&gt;：显示这一行的数据是关于哪张表的&lt;/p&gt;

&lt;p&gt;4、&lt;strong&gt;type&lt;/strong&gt;：这列最重要，显示了连接使用了哪种类别,有无使用索引，是使用Explain命令分析性能瓶颈的关键项之一。&lt;/p&gt;

&lt;pre&gt;
结果值从好到坏依次是：
system &amp;gt; const &amp;gt; eq_ref &amp;gt; ref &amp;gt; fulltext &amp;gt; ref_or_null &amp;gt; index_merge &amp;gt; unique_subquery &amp;gt; index_subquery &amp;gt; range &amp;gt; index &amp;gt; ALL&amp;lt;
一般来说，得保证查询至少达到range级别，最好能达到ref，否则就可能会出现性能问题。

const
表中的一个记录的最大值能够匹配这个查询（索引可以是主键或惟一索引）。因为只有一行，这个值实际就是常数，因为MYSQL先读这个值然后把它当做常数来对待

eq_ref
在连接中，MYSQL在查询时，从前面的表中，对每一个记录的联合都从表中读取一个记录，它在查询使用了索引为主键或惟一键的全部时使用

ref
这个连接类型只有在查询使用了不是惟一或主键的键或者是这些类型的部分（比如，利用最左边前缀）时发生。对于之前的表的每一个行联合，全部记录都将从表中读出。这个类型严重依赖于根据索引匹配的记录多少—越少越好

range
这个连接类型使用索引返回一个范围中的行，比如使用&amp;gt;或&amp;lt;查找东西时发生的情况

index
这个连接类型对前面的表中的每一个记录联合进行完全扫描（比ALL更好，因为索引一般小于表数据）

ALL
这个连接类型对于前面的每一个记录联合进行完全扫描，这一般比较糟糕，应该尽量避免
&lt;/pre&gt;

&lt;p&gt;5、&lt;strong&gt;possible_keys&lt;/strong&gt;：列指出MySQL能使用哪个索引在该表中找到行&lt;/p&gt;

&lt;p&gt;6、&lt;strong&gt;key&lt;/strong&gt;：显示MySQL实际决定使用的键（索引）。如果没有选择索引，键是NULL&lt;/p&gt;

&lt;p&gt;7、&lt;strong&gt;key_len&lt;/strong&gt;：显示MySQL决定使用的键长度。如果键是NULL，则长度为NULL。使用的索引的长度。在不损失精确性的情况下，长度越短越好&lt;/p&gt;

&lt;p&gt;8、&lt;strong&gt;ref&lt;/strong&gt;：显示使用哪个列或常数与key一起从表中选择行。&lt;/p&gt;

&lt;p&gt;9、&lt;strong&gt;rows&lt;/strong&gt;：显示MySQL认为它执行查询时必须检查的行数。&lt;/p&gt;

&lt;p&gt;10、&lt;strong&gt;Extra&lt;/strong&gt;：包含MySQL解决查询的详细信息，也是关键参考项之一。&lt;/p&gt;

&lt;pre&gt;
Distinct
一旦MYSQL找到了与行相联合匹配的行，就不再搜索了

Not exists
MYSQL 优化了LEFT JOIN，一旦它找到了匹配LEFT JOIN标准的行，就不再搜索了
Range checked for each

Record（index map:#）
没有找到理想的索引，因此对于从前面表中来的每一 个行组合，MYSQL检查使用哪个索引，并用它来从表中返回行。这是使用索引的最慢的连接之一

Using filesort
看 到这个的时候，查询就需要优化了。MYSQL需要进行额外的步骤来发现如何对返回的行排序。它根据连接类型以及存储排序键值和匹配条件的全部行的行指针来 排序全部行

Using index
列数据是从仅仅使用了索引中的信息而没有读取实际的行动的表返回的，这发生在对表 的全部的请求列都是同一个索引的部分的时候

Using temporary
看到这个的时候，查询需要优化了。这 里，MYSQL需要创建一个临时表来存储结果，这通常发生在对不同的列集进行ORDER BY上，而不是GROUP BY上

Using where
使用了WHERE从句来限制哪些行将与下一张表匹配或者是返回给用户。如果不想返回表中的全部行，并且连接类型ALL或index， 这就会发生，或者是查询有问题
&lt;/pre&gt;

&lt;p&gt;其他一些Tip：&lt;/p&gt;

&lt;p&gt;当type 显示为 “index” 时，并且Extra显示为“Using Index”， 表明使用了覆盖索引。&lt;/p&gt;

&lt;h2 id=&quot;sql&quot;&gt;二、查询低效率sql语句&lt;/h2&gt;

&lt;h3 id=&quot;sql-1&quot;&gt;（一）、捕获低效率SQL&lt;/h3&gt;

&lt;p&gt;MySQL数据库有几个配置选项可以帮助我们及时捕获低效SQL语句&lt;/p&gt;

&lt;p&gt;1，slow_query_log&lt;/p&gt;

&lt;p&gt;这个参数设置为ON，可以捕获执行时间超过一定数值的SQL语句。&lt;/p&gt;

&lt;p&gt;2，long_query_time&lt;/p&gt;

&lt;p&gt;当SQL语句执行时间超过此数值时，就会被记录到日志中，建议设置为1或者更短。&lt;/p&gt;

&lt;p&gt;3，slow_query_log_file&lt;/p&gt;

&lt;p&gt;记录日志的文件名。&lt;/p&gt;

&lt;p&gt;4，log_queries_not_using_indexes&lt;/p&gt;

&lt;p&gt;这个参数设置为ON，可以捕获到所有未使用索引的SQL语句，尽管这个SQL语句有可能执行得挺快。&lt;/p&gt;

&lt;h3 id=&quot;mysqlsql&quot;&gt;（二）、检测mysql中sql语句的效率的方法&lt;/h3&gt;

&lt;h4 id=&quot;section&quot;&gt;1、通过查询日志&lt;/h4&gt;

&lt;h5 id=&quot;windowsmysql&quot;&gt;（1）、Windows下开启MySQL慢查询&lt;/h5&gt;

&lt;p&gt;MySQL在Windows系统中的配置文件一般是是my.ini找到[mysqld]下面加上&lt;/p&gt;

&lt;pre&gt;
log-slow-queries = F:/MySQL/log/mysqlslowquery。log
long_query_time = 2
&lt;/pre&gt;

&lt;h5 id=&quot;linuxmysql&quot;&gt;（2）、Linux下启用MySQL慢查询&lt;/h5&gt;

&lt;p&gt;MySQL在Windows系统中的配置文件一般是是my.cnf找到[mysqld]下面加上&lt;/p&gt;
&lt;pre&gt;
log-slow-queries=/data/mysqldata/slowquery。log
long_query_time=2
&lt;/pre&gt;

&lt;p&gt;说明&lt;/p&gt;
&lt;pre&gt;
log-slow-queries = F:/MySQL/log/mysqlslowquery。
&lt;/pre&gt;
&lt;p&gt;为慢查询日志存放的位置，一般这个目录要有MySQL的运行帐号的可写权限，一般都将这个目录设置为MySQL的数据存放目录；&lt;/p&gt;

&lt;pre&gt;
long_query_time=2中的2表示查询超过两秒才记录；
&lt;/pre&gt;

&lt;h4 id=&quot;show-processlist-&quot;&gt;2、show processlist 命令&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;SHOW PROCESSLIST&lt;/code&gt;显示哪些线程正在运行。您也可以使用&lt;code&gt;mysqladmin processlist&lt;/code&gt;语句得到此信息。&lt;/p&gt;

&lt;p&gt;各列的含义和用途：&lt;/p&gt;
&lt;pre&gt;
ID列
一个标识，你要kill一个语句的时候很有用，用命令杀掉此查询 /*/mysqladmin kill 进程号。
user列
显示单前用户，如果不是root，这个命令就只显示你权限范围内的sql语句。
host列
显示这个语句是从哪个ip的哪个端口上发出的。用于追踪出问题语句的用户。
db列
显示这个进程目前连接的是哪个数据库。
command列
显示当前连接的执行的命令，一般就是休眠（sleep），查询（query），连接（connect）。
time列
此这个状态持续的时间，单位是秒。
state列
显示使用当前连接的sql语句的状态，很重要的列，后续会有所有的状态的描述，请注意，state只是语句执行中的某一个状态，一个 sql语句，以查询为例，可能需要经过copying to tmp table，Sorting result，Sending data等状态才可以完成
info列
显示这个sql语句，因为长度有限，所以长的sql语句就显示不全，但是一个判断问题语句的重要依据。
&lt;/pre&gt;

&lt;p&gt;这个命令中最关键的就是state列，mysql列出的状态主要有以下几种：&lt;/p&gt;

&lt;pre&gt;
Checking table
正在检查数据表（这是自动的）。
Closing tables
正在将表中修改的数据刷新到磁盘中，同时正在关闭已经用完的表。这是一个很快的操作，如果不是这样的话，就应该确认磁盘空间是否已经满了或者磁盘是否正处于重负中。
Connect Out
复制从服务器正在连接主服务器。

Copying to tmp table on disk
由于临时结果集大于tmp_table_size，正在将临时表从内存存储转为磁盘存储以此节省内存。
Creating tmp table
正在创建临时表以存放部分查询结果。
deleting from main table
服务器正在执行多表删除中的第一部分，刚删除第一个表。
deleting from reference tables
服务器正在执行多表删除中的第二部分，正在删除其他表的记录。

Flushing tables
正在执行FLUSH TABLES，等待其他线程关闭数据表。
Killed
发送了一个kill请求给某线程，那么这个线程将会检查kill标志位，同时会放弃下一个kill请求。MySQL会在每次的主循环中检查kill标志位，不过有些情况下该线程可能会过一小段才能死掉。如果该线程程被其他线程锁住了，那么kill请求会在锁释放时马上生效。
Locked
被其他查询锁住了。
Sending data
正在处理SELECT查询的记录，同时正在把结果发送给客户端。
Sorting for group
正在为GROUP BY做排序。
Sorting for order
正在为ORDER BY做排序。
Opening tables
这个过程应该会很快，除非受到其他因素的干扰。例如，在执ALTER TABLE或LOCK TABLE语句行完以前，数据表无法被其他线程打开。正尝试打开一个表。
Removing duplicates
正在执行一个SELECT DISTINCT方式的查询，但是MySQL无法在前一个阶段优化掉那些重复的记录。因此，MySQL需要再次去掉重复的记录，然后再把结果发送给客户端。
Reopen table
获得了对一个表的锁，但是必须在表结构修改之后才能获得这个锁。已经释放锁，关闭数据表，正尝试重新打开数据表。
Repair by sorting
修复指令正在排序以创建索引。
Repair with keycache
修复指令正在利用索引缓存一个一个地创建新索引。它会比Repair by sorting慢些。
Searching rows for update
正在讲符合条件的记录找出来以备更新。它必须在UPDATE要修改相关的记录之前就完成了。
Sleeping
正在等待客户端发送新请求.
System lock
正在等待取得一个外部的系统锁。如果当前没有运行多个mysqld服务器同时请求同一个表，那么可以通过增加--skip-external-locking参数来禁止外部系统锁。
Upgrading lock
INSERT DELAYED正在尝试取得一个锁表以插入新记录。
Updating
正在搜索匹配的记录，并且修改它们。
User Lock
 正在等待GET_LOCK()。
Waiting for tables
 该线程得到通知，数据表结构已经被修改了，需要重新打开数据表以取得新的结构。然后，为了能的重新打开数据表，必须等到所有其他线程关闭这个表。以下几种情况下会产生这个通知：FLUSH TABLES tbl_name, ALTER TABLE, RENAME TABLE, REPAIR TABLE, ANALYZE TABLE,或OPTIMIZE TABLE。
waiting for handler insert
 INSERT DELAYED已经处理完了所有待处理的插入操作，正在等待新的请求。
 大部分状态对应很快的操作，只要有一个线程保持同一个状态好几秒钟，那么可能是有问题发生了，需要检查一下。
 还有其他的状态没在上面中列出来，不过它们大部分只是在查看服务器是否有存在错误是才用得着。
&lt;/pre&gt;

&lt;h4 id=&quot;profiling&quot;&gt;3、开启profiling功能&lt;/h4&gt;

&lt;p&gt;MySQL 的 SQL 語法調整主要都是使用 EXPLAIN , 但是這個並沒辦法知道詳細的 Ram(Memory)/CPU 等使用量.於 MySQL 5.0.37 以上開始支援 MySQL Query Profiler, 可以查詢到此 SQL 會執行多少時間, 並看出 CPU/Memory 使用量, 執行過程中 System lock, Table lock 花多少時間等等.
啟動&lt;/p&gt;
&lt;pre&gt;
mysql&amp;gt; set profiling=1; # 此命令於 MySQL 會於 information_schema 的 database 建立一個 PROFILING 的 table 來紀錄.
SQL profiles show
mysql&amp;gt; show profiles; # 從啟動之後所有語法及使用時間, 含錯誤語法都會紀錄.
ex: (root@localhost) [test]&amp;gt; show profiles; # 注意 Query_ID, 下面執行時間統計等, 都是依 Query_ID 在紀錄
 +----------+------------+---------------------------+
 | Query_ID | Duration   | Query                     |
 +----------+------------+---------------------------+
 |        1 | 0.00090400 | show profile for query 1  |
 |        2 | 0.00008700 | select * from users       |
 |        3 | 0.00183800 | show tables               |
 |        4 | 0.00027600 | mysql&amp;gt; show profiles      |
 +----------+------------+---------------------------+
 &lt;/pre&gt;

&lt;p&gt;查詢所有花費時間加總&lt;/p&gt;
&lt;pre&gt;
mysql&amp;gt; select sum(duration) from information_schema.profiling where query_id=1; # Query ID = 1
 +---------------+
 | sum(duration) |
 +---------------+
 |      0.000447 |
 +---------------+

 &lt;/pre&gt;

&lt;p&gt;查詢各執行階段花費多少時間&lt;/p&gt;
&lt;pre&gt;
mysql&amp;gt; show profile for query 1; # Query ID = 1
 +--------------------+------------+
 | Status             | Duration   |
 +--------------------+------------+
 | (initialization)   | 0.00006300 |
 | Opening tables     | 0.00001400 |
 | System lock        | 0.00000600 |
 | Table lock         | 0.00001000 |
 | init               | 0.00002200 |
 | optimizing         | 0.00001100 |
 | statistics         | 0.00009300 |
 | preparing          | 0.00001700 |
 | executing          | 0.00000700 |
 | Sending data       | 0.00016800 |
 | end                | 0.00000700 |
 | query end          | 0.00000500 |
 | freeing items      | 0.00001200 |
 | closing tables     | 0.00000800 |
 | logging slow query | 0.00000400 |
 +--------------------+------------+
 &lt;/pre&gt;

&lt;p&gt;查詢各執行階段花費的各種資源列表&lt;/p&gt;
&lt;pre&gt;
mysql&amp;gt; show profile cpu for query 1; # Query ID = 1
 +--------------------------------+----------+----------+------------+
 | Status                         | Duration | CPU_user | CPU_system |
 +--------------------------------+----------+----------+------------+
 | (initialization)               | 0.000007 | 0        | 0          |
 | checking query cache for query | 0.000071 | 0        | 0          |
 | Opening tables                 | 0.000024 | 0        | 0          |
 | System lock                    | 0.000014 | 0        | 0          |
 | Table lock                     | 0.000055 | 0.001    | 0          |
 | init                           | 0.000036 | 0        | 0          |
 | optimizing                     | 0.000013 | 0        | 0          |
 | statistics                     | 0.000021 | 0        | 0          |
 | preparing                      | 0.00002  | 0        | 0          |
 | executing                      | 0.00001  | 0        | 0          |
 | Sending data                   | 0.015072 | 0.011998 | 0          |
 | end                            | 0.000021 | 0        | 0          |
 | query end                      | 0.000011 | 0        | 0          |
 | storing result in query cache  | 0.00001  | 0        | 0          |
 | freeing items                  | 0.000018 | 0        | 0          |
 | closing tables                 | 0.000019 | 0        | 0          |
 | logging slow query             | 0.000009 | 0        | 0          |
 +--------------------------------+----------+----------+------------+
 mysql&amp;gt; show profile IPC for query 1;
 +--------------------------------+----------+---------------+-------------------+
 | Status                         | Duration | Messages_sent | Messages_received |
 +--------------------------------+----------+---------------+-------------------+
 | (initialization)               | 0.000007 |             0 |                 0 |
 | checking query cache for query | 0.000071 |             0 |                 0 |
 | Opening tables                 | 0.000024 |             0 |                 0 |
 | System lock                    | 0.000014 |             0 |                 0 |
 | Table lock                     | 0.000055 |             0 |                 0 |
 | init                           | 0.000036 |             0 |                 0 |
 | optimizing                     | 0.000013 |             0 |                 0 |
 | statistics                     | 0.000021 |             0 |                 0 |
 | preparing                      | 0.00002  |             0 |                 0 |
 | executing                      | 0.00001  |             0 |                 0 |
 | Sending data                   | 0.015072 |             0 |                 0 |
 | end                            | 0.000021 |             0 |                 0 |
 | query end                      | 0.000011 |             0 |                 0 |
 | storing result in query cache  | 0.00001  |             0 |                 0 |
 | freeing items                  | 0.000018 |             0 |                 0 |
 | closing tables                 | 0.000019 |             0 |                 0 |
 | logging slow query             | 0.000009 |             0 |                 0 |
 +--------------------------------+----------+---------------+-------------------+
 &lt;/pre&gt;

&lt;p&gt;其它屬性列表&lt;/p&gt;

&lt;pre&gt;
ALL - displays all information
BLOCK IO - displays counts for block input and output operations
CONTEXT SWITCHES - displays counts for voluntary and involuntary context switches
IPC - displays counts for messages sent and received
MEMORY - is not currently implemented
PAGE FAULTS - displays counts for major and minor page faults
SOURCE - displays the names of functions from the source code, together with the name and line number of the file in which the function occurs
SWAPS - displays swap counts
&lt;/pre&gt;

&lt;p&gt;設定 Profiling 存的 Size&lt;/p&gt;
&lt;pre&gt;
mysql&amp;gt; show variables where variable_name=&#39;profiling_history_size&#39;; # 預設是 15筆
&lt;/pre&gt;

&lt;p&gt;關閉&lt;/p&gt;
&lt;pre&gt;
mysql&amp;gt; set profiling=0;
&lt;/pre&gt;
</description>
                <link>http://sunfuchang.github.io/%E6%95%B0%E6%8D%AE%E5%BA%93/2015/12/22/query-performance-analysis-in-mysql</link>
                <guid>http://sunfuchang.github.io/%E6%95%B0%E6%8D%AE%E5%BA%93/2015/12/22/query-performance-analysis-in-mysql</guid>
                <pubDate>Tue, 22 Dec 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Eventemitter Of Nodejs</title>
                <description>
&lt;h2 id=&quot;events&quot;&gt;一、核心事件模块&lt;code class=&quot;highlighter-rouge&quot;&gt;events&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;我们说&lt;code class=&quot;highlighter-rouge&quot;&gt;node&lt;/code&gt;是基于事件驱动的、异步的、单线程的平台，因此，事件驱动在&lt;code class=&quot;highlighter-rouge&quot;&gt;node&lt;/code&gt;中处于非常核心的位置。在&lt;code class=&quot;highlighter-rouge&quot;&gt;node&lt;/code&gt;中，有一个核心的模块叫做&lt;code class=&quot;highlighter-rouge&quot;&gt;events&lt;/code&gt;，该模块提供了一个核心的类：&lt;code class=&quot;highlighter-rouge&quot;&gt;EventEmiiter&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;引入该模块：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;events&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;eventemitter&quot;&gt;二、事件发射器&lt;code class=&quot;highlighter-rouge&quot;&gt;EventEmitter&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;EventEmitter&lt;/code&gt;（事件发射器）是&lt;code class=&quot;highlighter-rouge&quot;&gt;node&lt;/code&gt;的核心部分，所有能够发射事件的类都继承于它，同时，也可以通过继承&lt;code class=&quot;highlighter-rouge&quot;&gt;EventEmitter&lt;/code&gt;开发自己的事件发射器。&lt;/p&gt;

&lt;p&gt;创建&lt;code class=&quot;highlighter-rouge&quot;&gt;EventMitter&lt;/code&gt;：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EventEmitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;events&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;channel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;或者：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;events&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;channel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;listeners&quot;&gt;1、监听器&lt;code class=&quot;highlighter-rouge&quot;&gt;listeners&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;绑定到对象上的方法，在事件发射时执行，那么这种方法被称为做监听器(&lt;code class=&quot;highlighter-rouge&quot;&gt;listeners&lt;/code&gt;)。在监听器方法内部，&lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;关键字指向的对象为该监听器关联的&lt;code class=&quot;highlighter-rouge&quot;&gt;EventListener&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;2、监听器的添加&lt;/h3&gt;

&lt;h4 id=&quot;section-1&quot;&gt;2.1 重复性事件&lt;/h4&gt;

&lt;p&gt;每次触发事件，监听都重复执行，这样的事件称为“重复性事件”。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;emitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;或者更简单的方式：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;emitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;例如，以下代码给&lt;code class=&quot;highlighter-rouge&quot;&gt;server&lt;/code&gt;对象添加一个&lt;code class=&quot;highlighter-rouge&quot;&gt;connection&lt;/code&gt;事件的监听器，仅仅打印了一句话：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;connection&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;someone connected!&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;但是，这种方式添加的监听函数，在每次事件被触发的时候都会执行一次，这种事件称为“重复性事件”，接下来我们看看一次性事件监听。&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;2.2 一次性事件&lt;/h4&gt;

&lt;p&gt;当第一次触发事件时，事件监听执行一次，然后立即被移出，再次触发事件时不会在被执行，这种事件成为“一次性事件”。&lt;/p&gt;

&lt;p&gt;添加一次性事件监听的api：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;emitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;once&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;例如，下边的代码，仅在第一次&lt;code class=&quot;highlighter-rouge&quot;&gt;connect&lt;/code&gt;事件触发时执行一次监听函数：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;once&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;connection&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Ah, we have our first user!&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;section-3&quot;&gt;3、监听器的移除&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;emitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;section-4&quot;&gt;4、写自己的监听器&lt;/h3&gt;

&lt;p&gt;在node中，可以通过继承&lt;code class=&quot;highlighter-rouge&quot;&gt;EventEmitter&lt;/code&gt;类来定义自己的监听器。&lt;/p&gt;

&lt;p&gt;例如，定义一个文件监听器：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 定义文件监听器&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Watcher&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;srcDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;destDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;srcDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;srcDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;destDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;destDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inherits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Watcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// watch方法，文件监听&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Watcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;watcher&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;watcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;srcDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Reading file : &#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;// 发射process事件&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;watcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;process&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 启动文件监听方法&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Watcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;watcher&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 监听文件&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;watchFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;watcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;srcDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;watcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 讲源文件移动到目标文件，且文件名改为小写&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;watcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;process&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 源文件&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;srcDirFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;srcDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;/&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 目标文件，名称转为小写&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;destDirFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;destDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;/&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 重命名并移动文件&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;srcDirFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;destDirFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Coping and renaming file : &#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;srcDirFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39; -&amp;gt; &#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;destDirFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这里定义了一个文件监听器，用于监听源目录文件的变化，讲源目录文件移动到目标文件夹并将文件名改为小写。主要用到&lt;code class=&quot;highlighter-rouge&quot;&gt;fs.readdir&lt;/code&gt;方法和&lt;code class=&quot;highlighter-rouge&quot;&gt;fs.watchFile&lt;/code&gt;，读取文件时触发&lt;code class=&quot;highlighter-rouge&quot;&gt;process&lt;/code&gt;事件，来处理业务逻辑。&lt;/p&gt;

&lt;h3 id=&quot;api&quot;&gt;5、其他api：&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;移除全部listner：&lt;code class=&quot;highlighter-rouge&quot;&gt;emitter.removeAllListeners([event])&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;设置最大监听器数量：&lt;code class=&quot;highlighter-rouge&quot;&gt;emitter.setMaxListeners(n)&lt;/code&gt;
默认不超过10个，否则会警告，设置为0表示无限制。&lt;/li&gt;
  &lt;li&gt;查看某一个对象在某一个事件的监听器：&lt;code class=&quot;highlighter-rouge&quot;&gt;emitter.listeners(event)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;触发事件，执行监听器：&lt;code class=&quot;highlighter-rouge&quot;&gt;emitter.emit(event[, arg1][, arg2][, ...])&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;获取对象的给定事件的监听数量：&lt;code class=&quot;highlighter-rouge&quot;&gt;Class Method: EventEmitter.listenerCount(emitter, event)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Event: &#39;newListener&#39;&lt;/code&gt;：当添加监听器时触发该事件，当该事件触发时，监听器可能还没有添加完成&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Event: &#39;removeListener&#39;&lt;/code&gt;：当移除监听器时触发该事件，当该事件触发时，监听器可能还没有移除完成&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;示例代码：&lt;/p&gt;

&lt;p&gt;基于telnet的简单聊天室——&lt;a href=&quot;https://github.com/sunfuchang/nodeJs-study/blob/master/lesson4-asynProgramming/chatServer.js&quot;&gt;https://github.com/sunfuchang/nodeJs-study/blob/master/lesson4-asynProgramming/chatServer.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;文件监听器-&lt;a href=&quot;https://github.com/sunfuchang/nodeJs-study/blob/master/lesson4-asynProgramming/fileWatcher/fileWatcher.js&quot;&gt;https://github.com/sunfuchang/nodeJs-study/blob/master/lesson4-asynProgramming/fileWatcher/fileWatcher.js&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sunfuchang.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2015/08/18/EventEmitter-of-nodeJs</link>
                <guid>http://sunfuchang.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2015/08/18/EventEmitter-of-nodeJs</guid>
                <pubDate>Tue, 18 Aug 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Web Module Of Nodejs</title>
                <description>
&lt;p&gt;Node模块打包代码是为了重用，但它们不会改变全局作用域，避免了对全局作用域的污染，从而也就避免了命名冲突，并简化了代码的重用。Node模块允许你从被引入文件中选择要暴露给程序的函数和变量。如果模块返回的函数或变量不止一个，那它可以通过设定&lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt;对象的属性来指明它们。但如果模块只返回一个函数或变量，则可以设定&lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;属性。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;一、创建模块&lt;/h2&gt;

&lt;p&gt;可以是文件或包含文件的目录，如果为后者，默认以&lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt;文件作为模块入口，该文件可以在模块目录下的&lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;文件的&lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt;键中定义以取代默认值。模块文件是包含&lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt;对象属性定义的文件，例如：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 加元转美元&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canadian2US&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canadian&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;roundTwoDecimal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canadian&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canadianDollar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-1&quot;&gt;二、引入模块&lt;/h2&gt;

&lt;p&gt;node使用&lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt;函数引入模块，该函数为同步函数，一般在文件顶端调用来引入模块，应该避免在I/O密集的地方使用该函数，以避免性能问题。模块调用例子如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 引入自定义模块，路径相对于当前文件&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currency&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;./lib/currency&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Canadian2Us - 100 -&amp;gt; us : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canadian2US&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canadian2US&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;91&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;注意，模块引入的路径应该为相对当前文件的相对路径。&lt;/p&gt;

&lt;h2 id=&quot;moduleexports&quot;&gt;三、使用&lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;创建模块&lt;/h2&gt;

&lt;p&gt;有时候，&lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt;创建模块不能完全满足需求，例如创建一个根据参数变化的动态模块，此时需要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;函数。例如，创建一个模块，返回一个对象，而node不允许重写exports函数，如果将对象赋值给exports函数，node会提示错误：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Currency&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canadianDollar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canadianDollar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canadianDollar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 错误，node不允许重写exports函数&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// exports = Currency;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 正确&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Currency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;调用时：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Currency&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;./lib/currency&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canadianDollar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.91&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currency&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Currency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canadianDollar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Canadian2Us - 100 -&amp;gt; us : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canadian2US&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canadian2US&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;91&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Us2Canadian - 91 -&amp;gt; canadian : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;us2Canadian&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;91&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;us2Canadian&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;91&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;为什么要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports = exports&lt;/code&gt;？&lt;/strong&gt;原来，&lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt;只是对&lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;的一个全局引用，如果写成这样：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Currency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;那么，&lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt;与&lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;的引用关系被打破，那么这个模块的&lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt;函数会失效，例如，在这个模块在定义一个&lt;code class=&quot;highlighter-rouge&quot;&gt;plus&lt;/code&gt;函数：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Currency&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canadianDollar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canadianDollar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canadianDollar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Currency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;调用：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Currency&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;./lib/currency&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Currency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;程序会抛出异常：&lt;code class=&quot;highlighter-rouge&quot;&gt;Currency.plus&lt;/code&gt;方法未定义。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;因此，最好采用&lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports = exports = Currency&lt;/code&gt;这种方式，保持&lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt;对&lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;的全局引用，以避免其他问题。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;nodemodules&quot;&gt;四、使用node_modules重用模块&lt;/h2&gt;

&lt;p&gt;不需要知道相对路径的模块（大多为第三方开发好的程序直接使用的模块，例如&lt;code class=&quot;highlighter-rouge&quot;&gt;socket.io&lt;/code&gt;模块），放在&lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;目录中，引入时无须关心模块的相对路径。例如&lt;code class=&quot;highlighter-rouge&quot;&gt;var socketIo = require(&#39;socket.io&#39;)&lt;/code&gt;，node在查找模块时，按照以下流程：
* node的核心模块直接使用，如&lt;code class=&quot;highlighter-rouge&quot;&gt;var http = require(&#39;http&#39;)&lt;/code&gt;；
* 非核心模块，先在&lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;目录中查找，没有则在父级目录的&lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;中查找，没有父级目录则在系统环境变量&lt;code class=&quot;highlighter-rouge&quot;&gt;NODE_PATH&lt;/code&gt;定义的目录中查找。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;下的模块，如果模块为一个目录，那么模块默认的入口为模块根目录下的&lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt;文件，然而，可以在模块根目录下配置&lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;文件的main值来覆盖默认模块入口，例如，&lt;code class=&quot;highlighter-rouge&quot;&gt;mime&lt;/code&gt;模块的默认入口为&lt;code class=&quot;highlighter-rouge&quot;&gt;mime.js&lt;/code&gt;，其&lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;文件定义如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Robert Kieffer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;robert@broofa.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://github.com/broofa&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mime.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 定义模块的入口为mime.js，而非默认的index.js&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;repository&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/broofa/node-mime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;git&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;源码地址：&lt;a href=&quot;https://github.com/sunfuchang/nodeJs-study/tree/master/lesson3&quot;&gt;https://github.com/sunfuchang/nodeJs-study/tree/master/lesson3&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sunfuchang.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2015/08/16/web-module-of-nodeJs</link>
                <guid>http://sunfuchang.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2015/08/16/web-module-of-nodeJs</guid>
                <pubDate>Sun, 16 Aug 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Web Chat Room Based On Nodejs</title>
                <description>
&lt;h2 id=&quot;section&quot;&gt;源码地址&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sunfuchang/nodeJs-study/tree/master/lesson2/chat&quot;&gt;https://github.com/sunfuchang/nodeJs-study/tree/master/lesson2/chat&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;一、所需组建&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;socket.io组件库(&lt;a href=&quot;http://en.wikipedia.org/wiki/WebSocket&quot;&gt;http://en.wikipedia.org/wiki/WebSocket&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为实时通讯而设计的轻量的双向通讯协议。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;mime组件库(&lt;a href=&quot;http://en.wikipedia.org/wiki/MIME&quot;&gt;http://en.wikipedia.org/wiki/MIME&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用于根据文件扩展名获取文件的MIME类型。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;二、文件定义&lt;/h2&gt;

&lt;p&gt;该文件为项目的包描述文件，定义了项目的名称、版本、描述、依赖组建等内容，例如：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;chatrooms&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;0.0.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;聊天程序&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;socket.io&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;0.9.6&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;mime&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.2.7&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;dependencies定义了项目所需要的第三方依赖库，包括依赖库得每次和需要的版本号，定义完成后，可以使用node的包管理器npm来安装这些依赖。&lt;/p&gt;

&lt;h2 id=&quot;npm-install&quot;&gt;三、使用&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt;安装依赖&lt;/h2&gt;

&lt;p&gt;进入项目的根目录，执行&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt;命令，node会自动下载dependencies定义的库对应的版本，下载完成后的依赖库会放到项目根目录的node_modules文件夹中。&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;四、模块的引入：&lt;/h2&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt;方法将模块引入，例如：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 加载socket.io模块&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;socketIo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;socket.io&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-4&quot;&gt;五、模块方法的导出&lt;/h2&gt;

&lt;p&gt;模块放到项目根目录下的lib文件夹中，模块定义的方法不能被外部访问，可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt;对象将模块的方法到处到外部，例如：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// some code here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;那么外部在引入模块后就可以使用该模块的listen方法。&lt;/p&gt;

&lt;h2 id=&quot;node&quot;&gt;六、node的事件驱动&lt;/h2&gt;

&lt;p&gt;node采用的是单线程的，而其非阻塞I/O依赖于它的事件驱动机制。事件驱动编程底层依赖于事件循环（event loop），事件循环基本上是事件检测和事件处理器触发这两种函数不断循环调用的一个结构。在每次循环里，事件循环机制需要检测发生了哪些事件，当事件发生时，它找到对应的回调函数并调用它。例如：&lt;/p&gt;

&lt;p&gt;传统的数据库查询执行：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;SELECT * FROM posts WHERE id = 1&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;do_something_with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 必须等到result结果返回才能继续执行，此时I/O被阻塞&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;而如果采用事件驱动：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;query_finished&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 查询结束后回调执行&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;do_something_with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;SELECT * FROM posts WHERE id = 1&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query_finished&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 不必等到query完成，而代码可以继续，非阻塞I/O&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;do_something_other&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-5&quot;&gt;七、连接的建立&lt;/h2&gt;

&lt;p&gt;通过自定义模块的&lt;code class=&quot;highlighter-rouge&quot;&gt;listen&lt;/code&gt;方法，传入http server来对其进行监听：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 将listen方法倒出以供外部调用&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 启动socket.io服务器，搭载在server服务器上&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;socketIo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;log level&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 处理每个用户连接到聊天室的逻辑&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sockets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;connection&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * 创建服务器
 */&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Server is running on port 3000.&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 启动socket.io服务器&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;chatServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;客户端连接，需要引入&lt;code class=&quot;highlighter-rouge&quot;&gt;socket.io.js&lt;/code&gt;文件：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/socket.io/socket.io.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;然后连接到服务器上：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;http://127.0.0.1:3000&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这样就拿到了客户端的socket，我们根据注册事件，供服务端触发，同时也可以触发服务端的事件。&lt;/p&gt;

&lt;h2 id=&quot;section-6&quot;&gt;八、事件触发&lt;/h2&gt;

&lt;p&gt;在socket.io中，通过&lt;code class=&quot;highlighter-rouge&quot;&gt;on&lt;/code&gt;方法来注册事件，而通过&lt;code class=&quot;highlighter-rouge&quot;&gt;emit&lt;/code&gt;方法来发射事件：&lt;/p&gt;

&lt;p&gt;服务端注册一个&lt;code class=&quot;highlighter-rouge&quot;&gt;message&lt;/code&gt;事件：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 注册服务端message事件，广播服务器响应的消息&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;message&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 触发客户端socket的message事件，广播msg&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;broadcast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;room&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;message&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nickNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39; : &#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;客户端的&lt;code class=&quot;highlighter-rouge&quot;&gt;socket&lt;/code&gt;通过&lt;code class=&quot;highlighter-rouge&quot;&gt;emit&lt;/code&gt;方法调用：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 消息发送方法&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Chat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sendMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;room&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;room&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;room&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 触发客户端message事件&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;message&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;socket-api&quot;&gt;九、用到的socket api&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;建立socket.io服务器&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;socketIo.listen(server);&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;注册事件&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;socket.on&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;触发事件&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;socket.emit&lt;/code&gt;&lt;br /&gt;
socket.emit信息传输对象为当前socket对应的client，各个client socket相互不影响。&lt;/li&gt;
  &lt;li&gt;加入房间，分组&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;socket.join&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;发送广播&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;socket.broadcast.to&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;不知道是什么对象？&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;io.sockets.manager&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;建立连接&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;io.connect&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;socket.broadcast.emit&lt;/code&gt;&lt;br /&gt;
socket.broadcast.emit信息传输对象为所有client，排除当前socket对应的client。&lt;/li&gt;
  &lt;li&gt;io.sockets.emit&lt;br /&gt;
信息传输对象为所有client。&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;key为房间名，value为房间名对应的socket ID数组&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;io.sockets.manager.rooms&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;获取particular room中的客户端，返回所有在此房间的socket实例&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;io.sockets.clients(&#39;particular room&#39;)&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;通过socket.id来获取此socket进入的房间信息&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;io.sockets.manager.roomClients[socket.id]&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;详见：&lt;a href=&quot;https://github.com/sunfuchang/nodeJs-study/wiki&quot;&gt;https://github.com/sunfuchang/nodeJs-study/wiki&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sunfuchang.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2015/08/16/web-chat-room-based-on-nodeJs</link>
                <guid>http://sunfuchang.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2015/08/16/web-chat-room-based-on-nodeJs</guid>
                <pubDate>Sun, 16 Aug 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Jquery Validator Api</title>
                <description>
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jquery.validate.js&lt;/code&gt;是&lt;code class=&quot;highlighter-rouge&quot;&gt;jquery&lt;/code&gt;旗下的一个验证框架，借助&lt;code class=&quot;highlighter-rouge&quot;&gt;jquery&lt;/code&gt;的优势，我们可以迅速验证一些常见的输入,并且可以自己扩充自己的验证方法，并且对国际化也有很好的支持，本文介绍了该框架的基本使用及常见API。&lt;/p&gt;

&lt;p&gt;官网地址：&lt;a href=&quot;http://jqueryvalidation.org/&quot;&gt;http://jqueryvalidation.org/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;js&quot;&gt;一、导入js库&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script src=&#39;../js/jquery.js&#39; type=&#39;text/javascript&#39;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&#39;../js/jquery.validate.js&#39; type=&#39;text/javascript&#39;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section&quot;&gt;二、默认校验规则&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;required:true 必输字段&lt;/li&gt;
  &lt;li&gt;remote:”check.php” 使用ajax方法调用check.php验证输入值&lt;/li&gt;
  &lt;li&gt;email:true 必须输入正确格式的电子邮件&lt;/li&gt;
  &lt;li&gt;url:true 必须输入正确格式的网址&lt;/li&gt;
  &lt;li&gt;date:true 必须输入正确格式的日期 日期校验ie6出错，慎用&lt;/li&gt;
  &lt;li&gt;dateISO:true 必须输入正确格式的日期(ISO)，例如：2009-06-23，1998/01/22 只验证格式，不验证有效性&lt;/li&gt;
  &lt;li&gt;number:true 必须输入合法的数字(负数，小数)&lt;/li&gt;
  &lt;li&gt;digits:true 必须输入整数&lt;/li&gt;
  &lt;li&gt;creditcard: 必须输入合法的信用卡号&lt;/li&gt;
  &lt;li&gt;equalTo:”#field” 输入值必须和#field相同&lt;/li&gt;
  &lt;li&gt;accept: 输入拥有合法后缀名的字符串（上传文件的后缀）&lt;/li&gt;
  &lt;li&gt;maxlength:5 输入长度最多是5的字符串(汉字算一个字符)&lt;/li&gt;
  &lt;li&gt;minlength:10 输入长度最小是10的字符串(汉字算一个字符)&lt;/li&gt;
  &lt;li&gt;rangelength:[5,10] 输入长度必须介于 5 和 10 之间的字符串”)(汉字算一个字符)&lt;/li&gt;
  &lt;li&gt;range:[5,10] 输入值必须介于 5 和 10 之间&lt;/li&gt;
  &lt;li&gt;max:5 输入值不能大于5&lt;/li&gt;
  &lt;li&gt;min:10  输入值不能小于10&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;三、默认的提示&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;This field is required.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;remote&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Please fix this field.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Please enter a valid email address.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Please enter a valid URL.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Please enter a valid date.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dateISO&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Please enter a valid date (ISO).&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dateDE&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Bitte geben Sie ein g眉ltiges Datum ein.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Please enter a valid number.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;numberDE&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Bitte geben Sie eine Nummer ein.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;digits&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Please enter only digits&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;creditcard&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Please enter a valid credit card number.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Please enter the same value again.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Please enter a value with a valid extension.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;maxlength&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Please enter no more than {0} characters.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;minlength&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Please enter at least {0} characters.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;rangelength&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Please enter a value between {0} and {1} characters long.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Please enter a value between {0} and {1}.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Please enter a value less than or equal to {0}.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Please enter a value greater than or equal to {0}.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如需要修改，可在js代码中加入：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;必选字段&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;remote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请修正该字段&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入正确格式的电子邮件&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入合法的网址&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入合法的日期&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;dateISO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入合法的日期 (ISO).&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入合法的数字&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;digits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;只能输入整数&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;creditcard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入合法的信用卡号&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请再次输入相同的值&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入拥有合法后缀名的字符串&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;maxlength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;请输入一个 长度最多是 {0} 的字符串&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;minlength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;请输入一个 长度最少是 {0} 的字符串&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;rangelength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;请输入 一个长度介于 {0} 和 {1} 之间的字符串&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;请输入一个介于 {0} 和 {1} 之间的值&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;请输入一个最大为{0} 的值&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;请输入一个最小为{0} 的值&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;推荐做法，将此文件放入&lt;code class=&quot;highlighter-rouge&quot;&gt;messages_cn.js&lt;/code&gt;中，在页面中引入&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;../js/messages_cn.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-2&quot;&gt;四、使用方式&lt;/h2&gt;

&lt;h3 id=&quot;section-3&quot;&gt;1、将校验规则写到控件中&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;../js/jquery.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;../js/jquery.validate.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./js/jquery.metadata.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
$().ready(function() {$(&quot;#signupForm&quot;).validate();});
&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;signupForm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;get&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;firstname&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Firstname&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;firstname&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;firstname&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;required&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;E-Mail&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;required email&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Password&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{required:true,minlength:5}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;confirm_password&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;确认密码&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;confirm_password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;confirm_password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{required:true,minlength:5,equalTo:&#39;#password&#39;}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Submit&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;class=&quot;{}&quot;&lt;/code&gt;的方式，必须引入包：&lt;code class=&quot;highlighter-rouge&quot;&gt;jquery.metadata.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;可以使用如下的方法，修改提示内容：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class=&quot;{required:true,minlength:5,messages:{required:&#39;请输入内容&#39;}}&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在使用&lt;code class=&quot;highlighter-rouge&quot;&gt;equalTo&lt;/code&gt;关键字时，后面的内容必须加上引号，如下代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class=&quot;{required:true,minlength:5,equalTo:&#39;#password&#39;}&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;js-1&quot;&gt;2、将校验规则写到js代码中&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#signupForm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;required&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;minlength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;confirm_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;minlength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#password&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入姓名&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入Email地址&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入正确的email地址&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入密码&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;minlength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;密码不能小于{0}个字 符&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;confirm_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入确认密码&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;minlength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;确认密码不能小于5个字符&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;两次输入密码不一致不一致&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;//messages处，如果某个控件没有message，将调用默认的信息
&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;signupForm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;get&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;firstname&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Firstname&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;firstname&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;firstname&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;E-Mail&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Password&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;confirm_password&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;确认密码&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;confirm_password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;confirm_password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Submit&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;required:true 必须有值&lt;/li&gt;
  &lt;li&gt;required:”#aa:checked”表达式的值为真，则需要验证&lt;/li&gt;
  &lt;li&gt;required:function(){}返回为真，表时需要验证&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;后边两种常用于，表单中需要同时填或不填的元素&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;五、常用方法及注意问题&lt;/h2&gt;

&lt;h3 id=&quot;submit&quot;&gt;1、用其他方式替代默认的SUBMIT&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#signupForm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#signupForm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;submitHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;submitted&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;使用ajax方式&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.selector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;submitHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajaxSubmit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;可以设置&lt;code class=&quot;highlighter-rouge&quot;&gt;validate&lt;/code&gt;的默认值，写法如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setDefaults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;submitHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;submitted!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果想提交表单, 需要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;form.submit()&lt;/code&gt;而不要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;$(form).submit()&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;debug&quot;&gt;2、&lt;code class=&quot;highlighter-rouge&quot;&gt;debug&lt;/code&gt;，只验证不提交表单&lt;/h3&gt;

&lt;p&gt;如果这个参数为&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;，那么表单不会提交，只进行检查，调试时十分方便&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#signupForm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果一个页面中有多个表单都想设置成为&lt;code class=&quot;highlighter-rouge&quot;&gt;debug&lt;/code&gt;，用&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setDefaults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;ignore&quot;&gt;3、&lt;code class=&quot;highlighter-rouge&quot;&gt;ignore&lt;/code&gt;：忽略某些元素不验证&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ignore: &quot;.ignore&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-5&quot;&gt;4、更改错误信息显示的位置&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;errorPlacement：Callback&lt;/li&gt;
  &lt;li&gt;Default: 把错误信息放在验证的元素后面，指明错误放置的位置，默认情况是：&lt;code class=&quot;highlighter-rouge&quot;&gt;error.appendTo(element.parent())&lt;/code&gt;;即把错误信息放在验证的元素后面&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;errorPlacement&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;//示例：
&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;label&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lfirstname&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;firstname&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;First Name&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;field&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;firstname&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;firstname&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;maxlength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;padding-right: 5px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dateformat_eu&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dateformat&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;radio&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ldateformat_eu&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dateformat_eu&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;14/02/07&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;padding-left: 5px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dateformat_am&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dateformat&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;radio&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ldateformat_am&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dateformat_am&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;02/14/07&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;label&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;field&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;colspan=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;termswrap&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;terms&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;terms&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lterms&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;terms&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;I have read and accept the Terms of Use.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;errorPlacement&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;:radio&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;:checkbox&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendTo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;代码的作用是：一般情况下把错误信息显示在中，如果是&lt;code class=&quot;highlighter-rouge&quot;&gt;radio&lt;/code&gt;显示在中，如果是 &lt;code class=&quot;highlighter-rouge&quot;&gt;checkbox&lt;/code&gt;显示在内容的后面&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;errorClass：String Default: &quot;error&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;指定错误提示的&lt;code class=&quot;highlighter-rouge&quot;&gt;css&lt;/code&gt;类名，可以自定义错误提示的样式&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;errorElement：String Default: &quot;label&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;用什么标签标记错误，默认的是&lt;code class=&quot;highlighter-rouge&quot;&gt;label&lt;/code&gt;你可以改成&lt;code class=&quot;highlighter-rouge&quot;&gt;em&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;errorContainer：Selector
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;显示或者隐藏验证信息，可以自动实现有错误信息出现时把容器属性变为显示，无错误时隐藏，用处不大&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;errorContainer: &quot;#messageBox1, #messageBox2&quot;
errorLabelContainer：Selector
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;把错误信息统一放在一个容器里面。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wrapper：String
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;用什么标签再把上边的&lt;code class=&quot;highlighter-rouge&quot;&gt;errorELement&lt;/code&gt;包起来
一般这三个属性同时使用，实现在一个容器内显示所有错误提示的功能，并且没有信息时自动隐藏&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;errorContainer: &quot;div.error&quot;,
errorLabelContainer: $(&quot;#signupForm div.error&quot;),
wrapper: &quot;li&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-6&quot;&gt;5、更改错误信息显示的样式&lt;/h3&gt;

&lt;p&gt;设置错误提示的样式，可以增加图标显示，在该系统中已经建立了一个&lt;code class=&quot;highlighter-rouge&quot;&gt;validation.css&lt;/code&gt;专门用于维护校验文件的样式&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;input.error { border: 1px solid red; }
label.error {
    background:url(&quot;./demo/images/unchecked.gif&quot;) no-repeat 0px 0px;
    padding-left: 16px;
    padding-bottom: 2px;
    font-weight: bold;
    color: #EA5200;
}
label.checked {
    background:url(&quot;./demo/images/checked.gif&quot;) no-repeat 0px 0px;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-7&quot;&gt;6、每个字段验证通过执行函数&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;success：String,Callback
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;要验证的元素通过验证后的动作，如果跟一个字符串，会当做一个&lt;code class=&quot;highlighter-rouge&quot;&gt;css&lt;/code&gt;类，也可跟一个函数&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;success: function(label) {
    // set   as text for IE
    label.html(&quot; &quot;).addClass(&quot;checked&quot;);
    //label.addClass(&quot;valid&quot;).text(&quot;Ok!&quot;)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;添加”&lt;code class=&quot;highlighter-rouge&quot;&gt;valid&lt;/code&gt;” 到验证元素, 在&lt;code class=&quot;highlighter-rouge&quot;&gt;CSS&lt;/code&gt;中定义的样式&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;success: &quot;valid&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-8&quot;&gt;7、验证的触发方式修改&lt;/h3&gt;

&lt;p&gt;下面的虽然是&lt;code class=&quot;highlighter-rouge&quot;&gt;boolean&lt;/code&gt;型的，但建议除非要改为&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;,否则别乱添加。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;onsubmit：Boolean Default: true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;提交时验证. 设置为&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;就用其他方法去验证&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;onfocusout：Boolean Default: true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;失去焦点是验证(不包括&lt;code class=&quot;highlighter-rouge&quot;&gt;checkboxes/radio buttons&lt;/code&gt;)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;onkeyup：Boolean Default: true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;keyup&lt;/code&gt;时验证.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;onclick：Boolean Default: true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;checkboxes&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;radio&lt;/code&gt; 点击时验证&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;focusInvalid：Boolean Default: true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;提交表单后，未通过验证的表单(第一个或提交之前获得焦点的未通过验证的表单)会获得焦点&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;focusCleanup：Boolean Default: false
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果是&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;那么当未通过验证的元素获得焦点时，移除错误提示。避免和 &lt;code class=&quot;highlighter-rouge&quot;&gt;focusInvalid&lt;/code&gt; 一起用&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 重置表单&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#signupForm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;submitHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;submitted&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#reset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resetForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;section-9&quot;&gt;8、异步验证&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;remote：URL
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;ajax&lt;/code&gt;方式进行验证，默认会提交当前验证的值到远程地址，如果需要提交其他的值，可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt;选项&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;remote: &quot;check-email.php&quot;
remote: {
    url: &quot;check-email.php&quot;, //后台处理程序
    type: &quot;post&quot;, //数据发送方式
    dataType: &quot;json&quot;, //接受数据格式
    data: { //要传递的数据
        username: function() {
            return $(&quot;#username&quot;).val();
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;远程地址只能输出 “&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;” 或 “&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;“，不能有其它输出&lt;/p&gt;

&lt;h3 id=&quot;section-10&quot;&gt;9、添加自定义校验&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;addMethod：name, method, message
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;自定义验证方法&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 中文字两个字节&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;byteRangeLength&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charCodeAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;optional&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;请确保输入的值在{0}-{1}个字节之间(一个中文字算2个字节)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 邮政编码验证&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;isZipCode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;0-9&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]{6}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;optional&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请正确填写您的邮政编码&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;(1)、要在&lt;code class=&quot;highlighter-rouge&quot;&gt;additional-methods.js&lt;/code&gt;文件中添加或者在&lt;code class=&quot;highlighter-rouge&quot;&gt;jquery.validate.js&lt;/code&gt;添加，建议一般写在&lt;code class=&quot;highlighter-rouge&quot;&gt;additional-methods.js&lt;/code&gt;文件中&lt;/p&gt;

&lt;p&gt;(2)、在&lt;code class=&quot;highlighter-rouge&quot;&gt;messages_cn.js&lt;/code&gt;文件添加：isZipCode: “只能包括中文字、英文字母、数字和下划线”,
调用前要添加对&lt;code class=&quot;highlighter-rouge&quot;&gt;additional-methods.js&lt;/code&gt;文件的引用。&lt;/p&gt;

&lt;h3 id=&quot;radiocheckboxselect&quot;&gt;10、&lt;code class=&quot;highlighter-rouge&quot;&gt;radio&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;checkbox&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;select&lt;/code&gt;的验证&lt;/h3&gt;

&lt;p&gt;(1)、radio的required表示必须选中一个&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;radio&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gender_male&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;m&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gender&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{required:true}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;radio&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gender_female&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;f&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gender&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;(2)、&lt;code class=&quot;highlighter-rouge&quot;&gt;checkbox&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;required&lt;/code&gt;表示必须选中&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;agree&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;agree&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{required:true}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
checkbox的minlength表示必须选中的最小个数,maxlength表示最大的选中个数,rangelength:[2,3]表 示选中个数区间
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;spam_email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;spam[]&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{required:true, minlength:2}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;spam_phone&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;phone&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;spam[]&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;spam_mail&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mail&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;spam[]&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;(3)、&lt;code class=&quot;highlighter-rouge&quot;&gt;select&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;required&lt;/code&gt;表示选中的&lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;不能为空&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;jungle&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;jungle&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Please select something!&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{required:true}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;option&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;option&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Buga&lt;span class=&quot;nt&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;option&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Baga&lt;span class=&quot;nt&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;option&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Oi&lt;span class=&quot;nt&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;select&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;minlength&lt;/code&gt;表示选中的最小个数（可多选的&lt;code class=&quot;highlighter-rouge&quot;&gt;select&lt;/code&gt;）,&lt;code class=&quot;highlighter-rouge&quot;&gt;maxlength&lt;/code&gt;表示最大的选中个 数,&lt;code class=&quot;highlighter-rouge&quot;&gt;rangelength:[2,3]&lt;/code&gt;表示选中个数区间&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fruit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fruit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Please select at least two fruits&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{required:true, minlength:2}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;multiple=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;multiple&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;option&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Banana&lt;span class=&quot;nt&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;option&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Apple&lt;span class=&quot;nt&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;option&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;p&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Peach&lt;span class=&quot;nt&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;option&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;t&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Turtle&lt;span class=&quot;nt&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;jqueryvalidate-api&quot;&gt;六、 jQuery.validate 中文API&lt;/h2&gt;

&lt;table class=&quot;table table-responsive table-striped&quot;&gt;
    &lt;tr&gt;
        &lt;th&gt;名称&lt;/th&gt;
        &lt;th&gt;返回类型&lt;/th&gt;
        &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;validate(options)&lt;/td&gt;
        &lt;td&gt;返回:Validator&lt;/td&gt;
        &lt;td&gt;验证所选的FORM&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;valid()&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;检查是否验证通过&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;validate(options)&lt;/td&gt;
        &lt;td&gt;返回:Validator&lt;/td&gt;
        &lt;td&gt;验证所选的FORM&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;rules()&lt;/td&gt;
        &lt;td&gt;返回:Options&lt;/td&gt;
        &lt;td&gt;返回元素的验证规则&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;validate(options)&lt;/td&gt;
        &lt;td&gt;返回:Validator&lt;/td&gt;
        &lt;td&gt;验证所选的FORM&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;rules(&quot;add&quot;,rules)&lt;/td&gt;
        &lt;td&gt;返回:Options&lt;/td&gt;
        &lt;td&gt;增加验证规则&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;rules(&quot;remove&quot;,rules)&lt;/td&gt;
        &lt;td&gt;返回:Options&lt;/td&gt;
        &lt;td&gt;删除验证规则&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;removeAttrs(attributes)&lt;/td&gt;
        &lt;td&gt;返回:Options&lt;/td&gt;
        &lt;td&gt;删除特殊属性并且返回他们&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;th colspan=&quot;3&quot;&gt;Custom selectors&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;:blank&lt;/td&gt;
        &lt;td&gt;返回:Validator&lt;/td&gt;
        &lt;td&gt;没有值的筛选器&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;:filled&lt;/td&gt;
        &lt;td&gt;返回:Array &amp;lt;Element &amp;gt;&lt;/td&gt;
        &lt;td&gt;有值的筛选器&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;:unchecked&lt;/td&gt;
        &lt;td&gt;返回:Array &amp;lt;Element &amp;gt;&lt;/td&gt;
        &lt;td&gt;没选择的元素的筛选器&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td colspan=&quot;3&quot;&gt;Utilities&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;jQuery.format&lt;/td&gt;
        &lt;td&gt;(template,argument ,argumentN...)&lt;/td&gt;
        &lt;td&gt;返回:String&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;th colspan=&quot;3&quot;&gt;Validator:&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td colspan=&quot;3&quot;&gt;validate方法返回一个Validator对象,它有很多方法, 让你能使用引发校验程序或者改变form的内容. validator对象有很多方法,但下面只是列出常用的。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;form()&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;验证form返回成功还是失败&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;element(element)&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;验证单个元素是成功还是失败&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;resetForm()&lt;/td&gt;
        &lt;td&gt;返回:undefined&lt;/td&gt;
        &lt;td&gt;把前面验证的FORM恢复到验证前原来的状态&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;showErrors(errors)&lt;/td&gt;
        &lt;td&gt;返回:undefined&lt;/td&gt;
        &lt;td&gt;显示特定的错误信息&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;th colspan=&quot;3&quot;&gt;Validator functions:&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;setDefaults(defaults)&lt;/td&gt;
        &lt;td&gt;返回:undefined&lt;/td&gt;
        &lt;td&gt;改变默认的设置&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;addMethod(name,method,message)&lt;/td&gt;
        &lt;td&gt;返回:undefined&lt;/td&gt;
        &lt;td&gt;添加一个新的验证方法. 必须包括一个独一无二的名字,一个JAVASCRIPT的方法和一个默认的信息&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;addClassRules(name,rules)&lt;/td&gt;
        &lt;td&gt;返回:undefined&lt;/td&gt;
        &lt;td&gt;增加组合验证类型 在一个类里面用多种验证方法里比较有用&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;addClassRules(rules)&lt;/td&gt;
        &lt;td&gt;返回:undefined&lt;/td&gt;
        &lt;td&gt;增加组合验证类型，在一个类里面用多种验证方法里比较有用,这个是一下子加多个&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;th colspan=&quot;3&quot;&gt;内置验证方式：&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;required()&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;必填验证元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;required(dependency-expression)&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;必填元素依赖于表达式的结果&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;required(dependency-callback)&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;必填元素依赖于回调函数的结果&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;remote(url)&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;请求远程校验。url通常是一个远程调用方法&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;minlength(length)&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;设置最小长度&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;maxlength(length)&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;设置最大长度&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;rangelength(range)&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;设置一个长度范围[min,max]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;min(value)&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;设置最大值&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;max(value)&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;设置最小值&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;email()&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;验证电子邮箱格式&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;range(range)&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;设置值的范围&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;url()&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;验证URL格式&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;date()&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;验证日期格式(类似30/30/2008的格式,不验证日期准确性只验证格式)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;dateISO()&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;验证ISO类型的日期格式&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;dateDE()&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;验证德式的日期格式（29.04.1994 or 1.1.2006）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;number()&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;验证十进制数字（包括小数的）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;digits()&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;验证整数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;creditcard()&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;验证信用卡号&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;accept(extension)&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;验证相同后缀名的字符串&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;equalTo(other)&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;验证两个输入框的内容是否相同&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;phoneUS()&lt;/td&gt;
        &lt;td&gt;返回:Boolean&lt;/td&gt;
        &lt;td&gt;验证美式的电话号码&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;table class=&quot;table table-responsive table-striped&quot;&gt;
    &lt;tr&gt;
        &lt;th colspan=&quot;2&quot;&gt;validate ()的可选项：&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;th&gt;参数名称&lt;/th&gt;
        &lt;th&gt;用法示例&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;debug:&lt;br /&gt;进行调试模式（表单不提交）&lt;/td&gt;
        &lt;td&gt;
            
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.selector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;setDefaults:&lt;br /&gt;设置默认&lt;/td&gt;
        &lt;td&gt;
        
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setDefaults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
            submitHandler:&lt;br /&gt;
            通过验证后运行的函数,里面要加上表单提交的函数,否则表单不会提交
        &lt;/td&gt;
        &lt;td&gt;
        
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.selector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;submitHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajaxSubmit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
        ignore:&lt;br /&gt;
        对某些元素不进行验证
        &lt;/td&gt;
        &lt;td&gt;
            
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#myform&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;ignore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.ignore&quot;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
            rules:&lt;br /&gt;
            自定义规则,key:value的形式,key是要验证的元素,value可以是字符串或对象
        &lt;/td&gt;
        &lt;td&gt;
            
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.selector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
                 &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;required&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
                   &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
                 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
               &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
            messages:&lt;br /&gt;
            自定义的提示信息key:value的形式key是要验证的元素,值是字符串或函数
        &lt;/td&gt;
        &lt;td&gt;
        
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.selector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
             &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;required&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
             &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Name不能为空&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;E-mail不能为空&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;E-mail地址不正确&quot;&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
            groups:&lt;br /&gt;
            对一组元素的验证,用一个错误提示,用error Placement控制把出错信息放在哪里
        &lt;/td&gt;
        &lt;td&gt;
        
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#myform&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fname lname&quot;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;errorPlacement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;fname&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;lname&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
               &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertAfter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#lastname&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
               &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertAfter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
        Onubmit Boolean 默认:true&lt;br /&gt;
        是否提交时验证
        &lt;/td&gt;
        &lt;td&gt;
        
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.selector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;onsubmit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
            onfocusout Boolean 默认:true&lt;br /&gt;
            是否在获取焦点时验证
        &lt;/td&gt;
        &lt;td&gt;
        
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.selector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;onfocusout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
            onkeyup Boolean 默认:true &lt;br /&gt;
            是否在敲击键盘时验证
        &lt;/td&gt;
        &lt;td&gt;
        
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.selector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;onkeyup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
            onclick Boolean 默认:true&lt;br /&gt;
            是否在鼠标点击时验证（一般验证checkbox,radiobox）
        &lt;/td&gt;
        &lt;td&gt;
            
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;                &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.selector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                   &lt;span class=&quot;na&quot;&gt;onclick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
            focusInvalid Boolean 默认:true&lt;br /&gt;
            提交表单后,未通过验证的表单(第一个或提交之前获得焦点的未通过验证的表单)会获得焦点
        &lt;/td&gt;
        &lt;td&gt;
        
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.selector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;focusInvalid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
            focusCleanup Boolean 默认:false&lt;br /&gt;
            当未通过验证的元素获得焦点时,并移除错误提示（避免和 focusInvalid.一起使用）
        &lt;/td&gt;
        &lt;td&gt;
            
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.selector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;focusCleanup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
            errorClass String 默认:&quot;error&quot;&lt;br /&gt;
            指定错误提示的css类名,可以自定义错误提示的样式
        &lt;/td&gt;
        &lt;td&gt;
            
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.selector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;errorClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;invalid&quot;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
        errorElement String 默认:&quot;label&quot;&lt;br /&gt;
        使用什么标签标记错误
        &lt;/td&gt;
        &lt;td&gt;
        
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.selector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;
           &lt;span class=&quot;nl&quot;&gt;errorElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;em&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
        wrapper String&lt;br /&gt;
        使用什么标签再把上边的errorELement包起来
        &lt;/td&gt;
        &lt;td&gt;
        
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.selector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;wrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;li&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
            errorLabelContainer Selector&lt;br /&gt;
            把错误信息统一放在一个容器里面
        &lt;/td&gt;
        &lt;td&gt;
            
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#myform&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;errorLabelContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#messageBox&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;wrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;li&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;submitHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Submitted!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
        showErrors:&lt;br /&gt;
        跟一个函数,可以显示总共有多少个未通过验证的元素
        &lt;/td&gt;
        &lt;td&gt;
        
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.selector&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;showErrors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;errorMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;errorList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#summary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Your form contains &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numberOfInvalids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; errors,see details below.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defaultShowErrors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
        errorPlacement:&lt;br /&gt;
        跟一个函数,可以自定义错误放到哪里
        &lt;/td&gt;
        &lt;td&gt;
        
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#myform&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;rrorPlacement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;td&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;td&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
        success:&lt;br /&gt;
        要验证的元素通过验证后的动作,如果跟一个字符串,会当做一个css类,也可跟一个函数
        &lt;/td&gt;
        &lt;td&gt;
        
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#myform&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;valid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;submitHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Submitted!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;
        highlight:&lt;br /&gt;
        可以给未通过验证的元素加效果,闪烁等
        &lt;/td&gt;
        &lt;td&gt;

        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id=&quot;addmethodnamemethodmessage&quot;&gt;addMethod(name,method,message)方法：&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;参数name是添加的方法的名字&lt;/li&gt;
  &lt;li&gt;参数method是一个函数,接收三个参数&lt;code class=&quot;highlighter-rouge&quot;&gt;(value,element,param)&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;是元素的值,&lt;code class=&quot;highlighter-rouge&quot;&gt;element&lt;/code&gt;是元素本身 &lt;code class=&quot;highlighter-rouge&quot;&gt;param&lt;/code&gt;是参数,我们可以用&lt;code class=&quot;highlighter-rouge&quot;&gt;addMethod&lt;/code&gt;来添加除&lt;code class=&quot;highlighter-rouge&quot;&gt;built-in Validation methods&lt;/code&gt;之外的验证方法 比如有一个字段,只能输一个字母,范围是a-f,写法如下:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;af&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;必须是一个字母,且a-f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;用的时候,比如有个表单字段的&lt;code class=&quot;highlighter-rouge&quot;&gt;id=&quot;username&quot;&lt;/code&gt;,则在&lt;code class=&quot;highlighter-rouge&quot;&gt;rules&lt;/code&gt;中写&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;af&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;addMethod的第一个参数,就是添加的验证方法的名子,这时是af&lt;/li&gt;
  &lt;li&gt;addMethod的第三个参数,就是自定义的错误提示,这里的提示为:”必须是一个字母,且a-f”&lt;/li&gt;
  &lt;li&gt;addMethod的第二个参数,是一个函数,这个比较重要,决定了用这个验证方法时的写法&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果只有一个参数,直接写,如果af:”a”,那么a就是这个唯一的参数,如果多个参数,用在[]里,用逗号分开&lt;/p&gt;

&lt;h2 id=&quot;meta-string&quot;&gt;meta String方式：&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#myform&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;validate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;submitHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Submitted!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;js/jquery.metadata.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;js/jquery.validate.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myform&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{validate:{ required:true,email:true }}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Submit&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;点此下载&lt;a href=&quot;/assets/downloads/web_front/jQuery.validate.js+API_cn.pdf&quot;&gt;jQuery-validator中文api&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sunfuchang.github.io/%E7%BD%91%E7%BB%9C%E5%89%8D%E7%AB%AF/2015/06/12/jquery-validator-api</link>
                <guid>http://sunfuchang.github.io/%E7%BD%91%E7%BB%9C%E5%89%8D%E7%AB%AF/2015/06/12/jquery-validator-api</guid>
                <pubDate>Fri, 12 Jun 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Jvm Gc</title>
                <description>
&lt;p&gt;本文首先介绍了JVM各类垃圾回收器及其工作原理，接着通过实例演示它们的使用方式及需注意事项，最后总结了垃圾回收器的配置方式及参数意义。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;垃圾收集基础&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Java&lt;/code&gt;语言的一大特点就是可以进行自动垃圾回收处理，而无需开发人员过于关注系统资源，例如内存资源的释放情况。自动垃圾收集虽然大大减轻了开发人员的工作量，但是也增加了软件系统的负担。&lt;/p&gt;

&lt;p&gt;拥有垃圾收集器可以说是&lt;code&gt;Java&lt;/code&gt;语言与C++语言的一项显著区别。在 C++语言中，程序员必须小心谨慎地处理每一项内存分配，且内存使用完后必须手工释放曾经占用的内存空间。当内存释放不够完全时，即存在分配但永不释放的内存块，就会引起内存泄漏，严重时甚至导致程序瘫痪。&lt;/p&gt;

&lt;p&gt;以下列举了垃圾回收器常用的算法及实验原理：&lt;/p&gt;

&lt;h3 id=&quot;reference-counting&quot;&gt;1、引用计数法 (Reference Counting)&lt;/h3&gt;

&lt;p&gt;引用计数器在微软的 COM 组件技术中、Adobe 的 ActionScript3 种都有使用。&lt;/p&gt;

&lt;p&gt;引用计数器的实现很简单，对于一个对象 A，只要有任何一个对象引用了 A，则 A 的引用计数器就加 1，当引用失效时，引用计数器就减 1。只要对象 A 的引用计数器的值为 0，则对象 A 就不可能再被使用。&lt;/p&gt;

&lt;p&gt;引用计数器的实现也非常简单，只需要为每个对象配置一个整形的计数器即可。但是引用计数器有一个严重的问题，即无法处理循环引用的情况。因此，在 &lt;code&gt;Java&lt;/code&gt; 的垃圾回收器中没有使用这种算法。&lt;/p&gt;

&lt;p&gt;一个简单的循环引用问题描述如下：有对象 A 和对象 B，对象 A 中含有对象 B 的引用，对象 B 中含有对象 A 的引用。此时，对象 A 和对象 B 的引用计数器都不为 0。但是在系统中却不存在任何第 3 个对象引用了 A 或 B。也就是说，A 和 B 是应该被回收的垃圾对象，但由于垃圾对象间相互引用，从而使垃圾回收器无法识别，引起内存泄漏。&lt;/p&gt;

&lt;h3 id=&quot;mark-sweep&quot;&gt;2、标记-清除算法 (Mark-Sweep)&lt;/h3&gt;

&lt;p&gt;标记-清除算法将垃圾回收分为两个阶段：标记阶段和清除阶段。一种可行的实现是，在标记阶段首先通过根节点，标记所有从根节点开始的较大对象。因此，未被标记的对象就是未被引用的垃圾对象。然后，在清除阶段，清除所有未被标记的对象。该算法最大的问题是存在大量的空间碎片，因为回收后的空间是不连续的。在对象的堆空间分配过程中，尤其是大对象的内存分配，不连续的内存空间的工作效率要低于连续的空间。&lt;/p&gt;

&lt;h3 id=&quot;copying&quot;&gt;3、复制算法 (Copying)&lt;/h3&gt;

&lt;p&gt;将现有的内存空间分为两快，每次只使用其中一块，在垃圾回收时将正在使用的内存中的存活对象复制到未被使用的内存块中，之后，清除正在使用的内存块中的所有对象，交换两个内存的角色，完成垃圾回收。&lt;/p&gt;

&lt;p&gt;如果系统中的垃圾对象很多，复制算法需要复制的存活对象数量并不会太大。因此在真正需要垃圾回收的时刻，复制算法的效率是很高的。又由于对象在垃圾回收过程中统一被复制到新的内存空间中，因此，可确保回收后的内存空间是没有碎片的。该算法的缺点是将系统内存折半。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Java&lt;/code&gt; 的新生代串行垃圾回收器中使用了复制算法的思想。新生代分为 eden 空间、from 空间、to 空间 3 个部分。其中 from 空间和 to 空间可以视为用于复制的两块大小相同、地位相等，且可进行角色互换的空间块。from 和 to 空间也称为 survivor 空间，即幸存者空间，用于存放未被回收的对象。&lt;/p&gt;

&lt;p&gt;在垃圾回收时，eden 空间中的存活对象会被复制到未使用的 survivor 空间中 (假设是 to)，正在使用的 survivor 空间 (假设是 from) 中的年轻对象也会被复制到 to 空间中 (大对象，或者老年对象会直接进入老年带，如果 to 空间已满，则对象也会直接进入老年代)。此时，eden 空间和 from 空间中的剩余对象就是垃圾对象，可以直接清空，to 空间则存放此次回收后的存活对象。这种改进的复制算法既保证了空间的连续性，又避免了大量的内存空间浪费。&lt;/p&gt;

&lt;h3 id=&quot;mark-compact&quot;&gt;4、标记-压缩算法 (Mark-Compact)&lt;/h3&gt;

&lt;p&gt;复制算法的高效性是建立在存活对象少、垃圾对象多的前提下的。这种情况在年轻代经常发生，但是在老年代更常见的情况是大部分对象都是存活对象。如果依然使用复制算法，由于存活的对象较多，复制的成本也将很高。&lt;/p&gt;

&lt;p&gt;标记-压缩算法是一种老年代的回收算法，它在标记-清除算法的基础上做了一些优化。也首先需要从根节点开始对所有可达对象做一次标记，但之后，它并不简单地清理未标记的对象，而是将所有的存活对象压缩到内存的一端。之后，清理边界外所有的空间。这种方法既避免了碎片的产生，又不需要两块相同的内存空间，因此，其性价比比较高。&lt;/p&gt;

&lt;h3 id=&quot;incremental-collecting&quot;&gt;5、增量算法 (Incremental Collecting)&lt;/h3&gt;

&lt;p&gt;在垃圾回收过程中，应用软件将处于一种 CPU 消耗很高的状态。在这种 CPU 消耗很高的状态下，应用程序所有的线程都会挂起，暂停一切正常的工作，等待垃圾回收的完成。如果垃圾回收时间过长，应用程序会被挂起很久，将严重影响用户体验或者系统的稳定性。&lt;/p&gt;

&lt;p&gt;增量算法的基本思想是，如果一次性将所有的垃圾进行处理，需要造成系统长时间的停顿，那么就可以让垃圾收集线程和应用程序线程交替执行。每次，垃圾收集线程只收集一小片区域的内存空间，接着切换到应用程序线程。依次反复，直到垃圾收集完成。使用这种方式，由于在垃圾回收过程中，间断性地还执行了应用程序代码，所以能减少系统的停顿时间。但是，因为线程切换和上下文转换的消耗，会使得垃圾回收的总体成本上升，造成系统吞吐量的下降。&lt;/p&gt;

&lt;h3 id=&quot;generational-collecting&quot;&gt;6、分代 (Generational Collecting)&lt;/h3&gt;

&lt;p&gt;根据垃圾回收对象的特性，不同阶段最优的方式是使用合适的算法用于本阶段的垃圾回收，分代算法即是基于这种思想，它将内存区间根据对象的特点分成几块，根据每块内存区间的特点，使用不同的回收算法，以提高垃圾回收的效率。以 Hot Spot 虚拟机为例，它将所有的新建对象都放入称为年轻代的内存区域，年轻代的特点是对象会很快回收，因此，在年轻代就选择效率较高的复制算法。当一个对象经过几次回收后依然存活，对象就会被放入称为老生代的内存空间。在老生代中，几乎所有的对象都是经过几次垃圾回收后依然得以幸存的。因此，可以认为这些对象在一段时期内，甚至在应用程序的整个生命周期中，将是常驻内存的。如果依然使用复制算法回收老生代，将需要复制大量对象。再加上老生代的回收性价比也要低于新生代，因此这种做法也是不可取的。根据分代的思想，可以对老年代的回收使用与新生代不同的标记-压缩算法，以提高垃圾回收效率。&lt;/p&gt;

&lt;p&gt;从不同角度分析垃圾收集器，可以将其分为不同的类型。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;按线程数分，可以分为串行垃圾回收器和并行垃圾回收器。串行垃圾回收器一次只使用一个线程进行垃圾回收；并行垃圾回收器一次将开启多个线程同时进行垃圾回收。在并行能力较强的 CPU 上，使用并行垃圾回收器可以缩短 GC 的停顿时间。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;按照工作模式分，可以分为并发式垃圾回收器和独占式垃圾回收器。并发式垃圾回收器与应用程序线程交替工作，以尽可能减少应用程序的停顿时间；独占式垃圾回收器 (Stop the world) 一旦运行，就停止应用程序中的其他所有线程，直到垃圾回收过程完全结束。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;按碎片处理方式可分为压缩式垃圾回收器和非压缩式垃圾回收器。压缩式垃圾回收器会在回收完成后，对存活对象进行压缩整理，消除回收后的碎片；非压缩式的垃圾回收器不进行这步操作。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;按工作的内存区间，又可分为新生代垃圾回收器和老年代垃圾回收器。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;可以用以下指标评价一个垃圾处理器的好坏。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;吞吐量：指在应用程序的生命周期内，应用程序所花费的时间和系统总运行时间的比值。系统总运行时间=应用程序耗时+GC 耗时。如果系统运行了 100min，GC 耗时 1min，那么系统的吞吐量就是 (100-1)/100=99%。&lt;/li&gt;
  &lt;li&gt;垃圾回收器负载：和吞吐量相反，垃圾回收器负载指来记回收器耗时与系统运行总时间的比值。&lt;/li&gt;
  &lt;li&gt;停顿时间：指垃圾回收器正在运行时，应用程序的暂停时间。对于独占回收器而言，停顿时间可能会比较长。使用并发的回收器时，由于垃圾回收器和应用程序交替运行，程序的停顿时间会变短，但是，由于其效率很可能不如独占垃圾回收器，故系统的吞吐量可能会较低。&lt;/li&gt;
  &lt;li&gt;垃圾回收频率：指垃圾回收器多长时间会运行一次。一般来说，对于固定的应用而言，垃圾回收器的频率应该是越低越好。通常增大堆空间可以有效降低垃圾回收发生的频率，但是可能会增加回收产生的停顿时间。&lt;/li&gt;
  &lt;li&gt;反应时间：指当一个对象被称为垃圾后多长时间内，它所占据的内存空间会被释放。&lt;/li&gt;
  &lt;li&gt;堆分配：不同的垃圾回收器对堆内存的分配方式可能是不同的。一个良好的垃圾收集器应该有一个合理的堆内存区间划分。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;jvm-&quot;&gt;JVM 垃圾回收器分类&lt;/h1&gt;

&lt;h3 id=&quot;section-1&quot;&gt;新生代串行收集器&lt;/h3&gt;

&lt;p&gt;串行收集器主要有两个特点：第一，它仅仅使用单线程进行垃圾回收；第二，它独占式的垃圾回收。&lt;/p&gt;

&lt;p&gt;在串行收集器进行垃圾回收时，&lt;code&gt;Java&lt;/code&gt; 应用程序中的线程都需要暂停，等待垃圾回收的完成，这样给用户体验造成较差效果。虽然如此，串行收集器却是一个成熟、经过长时间生产环境考验的极为高效的收集器。新生代串行处理器使用复制算法，实现相对简单，逻辑处理特别高效，且没有线程切换的开销。在诸如单 CPU 处理器或者较小的应用内存等硬件平台不是特别优越的场合，它的性能表现可以超过并行回收器和并发回收器。在 HotSpot 虚拟机中，使用&lt;code&gt;-XX：+UseSerialGC&lt;/code&gt; 参数可以指定使用新生代串行收集器和老年代串行收集器。当 JVM 在 Client 模式下运行时，它是默认的垃圾收集器。一次新生代串行收集器的工作输出日志类似如清单 1 信息 (使用&lt;code&gt;-XX:+PrintGCDetails&lt;/code&gt; 开关) 所示。&lt;/p&gt;

&lt;p&gt;清单 1. 一次新生代串行收集器的工作输出日志&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[GC [DefNew: 3468K-&amp;gt;150K(9216K), 0.0028638 secs][Tenured:
  1562K-&amp;gt;1712K(10240K), 0.0084220 secs] 3468K-&amp;gt;1712K(19456K),
  [Perm : 377K-&amp;gt;377K(12288K)],
  0.0113816 secs] [Times: user=0.02 sys=0.00, real=0.01 secs]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;它显示了一次垃圾回收前的新生代的内存占用量和垃圾回收后的新生代内存占用量，以及垃圾回收所消耗的时间。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;老年代串行收集器&lt;/h3&gt;

&lt;p&gt;老年代串行收集器使用的是标记-压缩算法。和新生代串行收集器一样，它也是一个串行的、独占式的垃圾回收器。由于老年代垃圾回收通常会使用比新生代垃圾回收更长的时间，因此，在堆空间较大的应用程序中，一旦老年代串行收集器启动，应用程序很可能会因此停顿几秒甚至更长时间。虽然如此，老年代串行回收器可以和多种新生代回收器配合使用，同时它也可以作为 CMS 回收器的备用回收器。若要启用老年代串行回收器，可以尝试使用以下参数：&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+UseSerialGC&lt;/code&gt;: 新生代、老年代都使用串行回收器。&lt;/p&gt;

&lt;p&gt;清单 2. 一次老年代串行收集器的工作输出日志&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Heap
 def new generation total 4928K, used 1373K [0x27010000, 0x27560000, 0x2c560000)
 eden space 4416K, 31% used [0x27010000, 0x27167628, 0x27460000)
 from space 512K, 0% used [0x27460000, 0x27460000, 0x274e0000)
 to space 512K, 0% used [0x274e0000, 0x274e0000, 0x27560000)
 tenured generation total 10944K, used 0K [0x2c560000, 0x2d010000, 0x37010000)
 the space 10944K, 0% used [0x2c560000, 0x2c560000, 0x2c560200, 0x2d010000)
 compacting perm gen total 12288K, used 376K [0x37010000, 0x37c10000, 0x3b010000)
 the space 12288K, 3% used [0x37010000, 0x3706e0b8, 0x3706e200, 0x37c10000)
 ro space 10240K, 51% used [0x3b010000, 0x3b543000, 0x3b543000, 0x3ba10000)
 rw space 12288K, 55% used [0x3ba10000, 0x3c0ae4f8, 0x3c0ae600, 0x3c610000)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果使用&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+UseParNewGC&lt;/code&gt; 参数设置，表示新生代使用并行收集器，老年代使用串行收集器，如清单 3 所示。&lt;/p&gt;

&lt;p&gt;清单 3. 一次串并行收集器混合使用的工作输出日志&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Heap
 par new generation total 4928K, used 1373K [0x0f010000, 0x0f560000, 0x14560000)
 eden space 4416K, 31% used [0x0f010000, 0x0f167620, 0x0f460000)
 from space 512K, 0% used [0x0f460000, 0x0f460000, 0x0f4e0000)
 to space 512K, 0% used [0x0f4e0000, 0x0f4e0000, 0x0f560000)
 tenured generation total 10944K, used 0K [0x14560000, 0x15010000, 0x1f010000)
 the space 10944K, 0% used [0x14560000, 0x14560000, 0x14560200, 0x15010000)
 compacting perm gen total 12288K, used 2056K [0x1f010000, 0x1fc10000, 0x23010000)
 the space 12288K, 16% used [0x1f010000, 0x1f2121d0, 0x1f212200, 0x1fc10000)
No shared spaces configured.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果使用&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+UseParallelGC&lt;/code&gt; 参数设置，表示新生代和老年代均使用并行回收收集器。如清单 4 所示。&lt;/p&gt;

&lt;p&gt;清单 4. 一次老年代并行回收器的工作输出日志&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Full GC [Tenured: 1712K-&amp;gt;1699K(10240K), 0.0071963 secs] 1712K-&amp;gt;1699K(19456K),
      [Perm : 377K-&amp;gt;372K(12288K)], 0.0072393 secs] [Times: user=0.00 sys=0.00,
      real=0.01 secs]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;它显示了垃圾回收前老年代和永久区的内存占用量，以及垃圾回收后老年代和永久区的内存使用量。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;并行收集器&lt;/h3&gt;

&lt;p&gt;并行收集器是工作在新生代的垃圾收集器，它只简单地将串行回收器多线程化。它的回收策略、算法以及参数和串行回收器一样。&lt;/p&gt;

&lt;p&gt;并行回收器也是独占式的回收器，在收集过程中，应用程序会全部暂停。但由于并行回收器使用多线程进行垃圾回收，因此，在并发能力比较强的 CPU 上，它产生的停顿时间要短于串行回收器，而在单 CPU 或者并发能力较弱的系统中，并行回收器的效果不会比串行回收器好，由于多线程的压力，它的实际表现很可能比串行回收器差。&lt;/p&gt;

&lt;p&gt;开启并行回收器可以使用参数&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+UseParNewGC&lt;/code&gt;，该参数设置新生代使用并行收集器，老年代使用串行收集器。&lt;/p&gt;

&lt;p&gt;清单 5. 设置参数&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+UseParNewGC&lt;/code&gt; 的输出日志&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; [GC [ParNew: 825K-&amp;gt;161K(4928K), 0.0155258 secs][Tenured: 8704K-&amp;gt;661K(10944K), 
  0.0071964 secs] 9017K-&amp;gt;661K(15872K), 
  [Perm : 2049K-&amp;gt;2049K(12288K)], 0.0228090 secs] [Times: user=0.01 sys=0.00, real=0.01 secs] 
Heap
 par new generation total 4992K, used 179K [0x0f010000, 0x0f570000, 0x14560000)
 eden space 4480K, 4% used [0x0f010000, 0x0f03cda8, 0x0f470000)
 from space 512K, 0% used [0x0f470000, 0x0f470000, 0x0f4f0000)
 to space 512K, 0% used [0x0f4f0000, 0x0f4f0000, 0x0f570000)
 tenured generation total 10944K, used 8853K [0x14560000, 0x15010000, 0x1f010000)
 the space 10944K, 80% used [0x14560000, 0x14e057c0, 0x14e05800, 0x15010000)
 compacting perm gen total 12288K, used 2060K [0x1f010000, 0x1fc10000, 0x23010000)
 the space 12288K, 16% used [0x1f010000, 0x1f213228, 0x1f213400, 0x1fc10000)
No shared spaces configured.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;设置参数&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+UseConcMarkSweepGC&lt;/code&gt; 可以要求新生代使用并行收集器，老年代使用 CMS。&lt;/p&gt;

&lt;p&gt;清单 6. 设置参数-XX:+UseConcMarkSweepGC 的输出日志&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[GC [ParNew: 8967K-&amp;gt;669K(14784K), 0.0040895 secs] 8967K-&amp;gt;669K(63936K),
  0.0043255 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] 
Heap
 par new generation total 14784K, used 9389K [0x03f50000, 0x04f50000, 0x04f50000)
 eden space 13184K, 66% used [0x03f50000, 0x047d3e58, 0x04c30000)
 from space 1600K, 41% used [0x04dc0000, 0x04e67738, 0x04f50000)
 to space 1600K, 0% used [0x04c30000, 0x04c30000, 0x04dc0000)
 concurrent mark-sweep generation total 49152K, used 0K [0x04f50000, 0x07f50000, 0x09f50000)
 concurrent-mark-sweep perm gen total 12288K, used 2060K [0x09f50000, 0x0ab50000, 0x0df50000)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;并行收集器工作时的线程数量可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:ParallelGCThreads&lt;/code&gt; 参数指定。一般，最好与 CPU 数量相当，避免过多的线程数影响垃圾收集性能。在默认情况下，当 CPU 数量小于 8 个，&lt;code class=&quot;highlighter-rouge&quot;&gt;ParallelGCThreads&lt;/code&gt; 的值等于 CPU 数量，大于 8 个，&lt;code class=&quot;highlighter-rouge&quot;&gt;ParallelGCThreads&lt;/code&gt; 的值等于 3+[5*CPU_Count]/8]。以下测试显示了笔者笔记本上运行 8 个线程时耗时最短，本人笔记本是 8 核 IntelCPU。&lt;/p&gt;

&lt;p&gt;清单 7. 设置为 8 个线程后 GC 输出&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[GC [ParNew: 8967K-&amp;gt;676K(14784K), 0.0036983 secs] 8967K-&amp;gt;676K(63936K),
  0.0037662 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] 
Heap
 par new generation total 14784K, used 9395K [0x040e0000, 0x050e0000, 0x050e0000)
 eden space 13184K, 66% used [0x040e0000, 0x04963e58, 0x04dc0000)
 from space 1600K, 42% used [0x04f50000, 0x04ff9100, 0x050e0000)
 to space 1600K, 0% used [0x04dc0000, 0x04dc0000, 0x04f50000)
 concurrent mark-sweep generation total 49152K, used 0K [0x050e0000, 0x080e0000, 0x0a0e0000)
 concurrent-mark-sweep perm gen total 12288K, used 2060K [0x0a0e0000, 0x0ace0000, 0x0e0e0000)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;清单 8. 设置为 128 个线程后 GC 输出&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[GC [ParNew: 8967K-&amp;gt;664K(14784K), 0.0207327 secs] 8967K-&amp;gt;664K(63936K),
  0.0208077 secs] [Times: user=0.03 sys=0.00, real=0.02 secs]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;清单 9. 设置为 640 个线程后 GC 输出&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[GC [ParNew: 8967K-&amp;gt;667K(14784K), 0.2323704 secs] 8967K-&amp;gt;667K(63936K),
  0.2324778 secs] [Times: user=0.34 sys=0.02, real=0.23 secs]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;清单 10. 设置为 1280 个线程后 GC 输出&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error occurred during initialization of VM Too small new size specified
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;parallel-scavenge-&quot;&gt;新生代并行回收 (Parallel Scavenge) 收集器&lt;/h3&gt;

&lt;p&gt;新生代并行回收收集器也是使用复制算法的收集器。从表面上看，它和并行收集器一样都是多线程、独占式的收集器。但是，并行回收收集器有一个重要的特点：它非常关注系统的吞吐量。&lt;/p&gt;

&lt;p&gt;新生代并行回收收集器可以使用以下参数启用：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-XX:+UseParallelGC:新生代使用并行回收收集器，老年代使用串行收集器。&lt;/li&gt;
  &lt;li&gt;-XX:+UseParallelOldGC:新生代和老年代都是用并行回收收集器。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;清单 11. 设置为 24 个线程后 GC 输出&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Heap
 PSYoungGen total 4800K, used 893K [0x1dac0000, 0x1e010000, 0x23010000)
 eden space 4160K, 21% used [0x1dac0000,0x1db9f570,0x1ded0000)
 from space 640K, 0% used [0x1df70000,0x1df70000,0x1e010000)
 to space 640K, 0% used [0x1ded0000,0x1ded0000,0x1df70000)
 ParOldGen total 19200K, used 16384K [0x13010000, 0x142d0000, 0x1dac0000)
 object space 19200K, 85% used [0x13010000,0x14010020,0x142d0000)
 PSPermGen total 12288K, used 2054K [0x0f010000, 0x0fc10000, 0x13010000)
 object space 12288K, 16% used [0x0f010000,0x0f2119c0,0x0fc10000)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;新生代并行回收收集器可以使用以下参数启用：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+MaxGCPauseMills&lt;/code&gt;:设置最大垃圾收集停顿时间，它的值是一个大于 0 的整数。收集器在工作时会调整 &lt;code&gt;Java&lt;/code&gt; 堆大小或者其他一些参数，尽可能地把停顿时间控制在 &lt;code class=&quot;highlighter-rouge&quot;&gt;MaxGCPauseMills&lt;/code&gt; 以内。如果希望减少停顿时间，而把这个值设置得很小，为了达到预期的停顿时间，JVM 可能会使用一个较小的堆 (一个小堆比一个大堆回收快)，而这将导致垃圾回收变得很频繁，从而增加了垃圾回收总时间，降低了吞吐量。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+GCTimeRatio&lt;/code&gt;：设置吞吐量大小，它的值是一个 0-100 之间的整数。假设 GCTimeRatio 的值为 n，那么系统将花费不超过 1/(1+n) 的时间用于垃圾收集。比如 GCTimeRatio 等于 19，则系统用于垃圾收集的时间不超过 1/(1+19)=5%。默认情况下，它的取值是 99，即不超过 1%的时间用于垃圾收集。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;除此之外，并行回收收集器与并行收集器另一个不同之处在于，它支持一种自适应的 GC 调节策略，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+UseAdaptiveSizePolicy&lt;/code&gt; 可以打开自适应 GC 策略。在这种模式下，新生代的大小、eden 和 survivor 的比例、晋升老年代的对象年龄等参数会被自动调整，以达到在堆大小、吞吐量和停顿时间之间的平衡点。在手工调优比较困难的场合，可以直接使用这种自适应的方式，仅指定虚拟机的最大堆、目标的吞吐量 (GCTimeRatio) 和停顿时间 (MaxGCPauseMills)，让虚拟机自己完成调优工作。&lt;/p&gt;

&lt;p&gt;清单 12. 新生代并行回收收集器 GC 输出&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Heap
 PSYoungGen total 4800K, used 893K [0x1dac0000, 0x1e010000, 0x23010000)
 eden space 4160K, 21% used [0x1dac0000,0x1db9f570,0x1ded0000)
 from space 640K, 0% used [0x1df70000,0x1df70000,0x1e010000)
 to space 640K, 0% used [0x1ded0000,0x1ded0000,0x1df70000)
 PSOldGen total 19200K, used 16384K [0x13010000, 0x142d0000, 0x1dac0000)
 object space 19200K, 85% used [0x13010000,0x14010020,0x142d0000)
 PSPermGen total 12288K, used 2054K [0x0f010000, 0x0fc10000, 0x13010000)
 object space 12288K, 16% used [0x0f010000,0x0f2119c0,0x0fc10000)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;它也显示了收集器的工作成果，也就是回收前的内存大小和回收后的内存大小，以及花费的时间。&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;老年代并行回收收集器&lt;/h3&gt;

&lt;p&gt;老年代的并行回收收集器也是一种多线程并发的收集器。和新生代并行回收收集器一样，它也是一种关注吞吐量的收集器。老年代并行回收收集器使用标记-压缩算法，JDK1.6 之后开始启用。&lt;/p&gt;

&lt;p&gt;使用-XX:+UseParallelOldGC&lt;/p&gt;

&lt;p&gt;可以在新生代和老生代都使用并行回收收集器，这是一对非常关注吞吐量的垃圾收集器组合，在对吞吐量敏感的系统中，可以考虑使用。参数&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:ParallelGCThreads&lt;/code&gt; 也可以用于设置垃圾回收时的线程数量。&lt;/p&gt;

&lt;p&gt;清单 13 是设置线程数量为 100 时老年代并行回收收集器输出日志：&lt;/p&gt;

&lt;p&gt;清单 13. 老年代并行回收收集器设置 100 线程时 GC 输出&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Heap
 PSYoungGen total 4800K, used 893K [0x1dac0000, 0x1e010000, 0x23010000)
 eden space 4160K, 21% used [0x1dac0000,0x1db9f570,0x1ded0000)
 from space 640K, 0% used [0x1df70000,0x1df70000,0x1e010000)
 to space 640K, 0% used [0x1ded0000,0x1ded0000,0x1df70000)
 ParOldGen total 19200K, used 16384K [0x13010000, 0x142d0000, 0x1dac0000)
 object space 19200K, 85% used [0x13010000,0x14010020,0x142d0000)
 PSPermGen total 12288K, used 2054K [0x0f010000, 0x0fc10000, 0x13010000)
 object space 12288K, 16% used [0x0f010000,0x0f2119c0,0x0fc10000)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;cms-&quot;&gt;CMS 收集器&lt;/h3&gt;

&lt;p&gt;与并行回收收集器不同，CMS 收集器主要关注于系统停顿时间。CMS 是 Concurrent Mark Sweep 的缩写，意为并发标记清除，从名称上可以得知，它使用的是标记-清除算法，同时它又是一个使用多线程并发回收的垃圾收集器。&lt;/p&gt;

&lt;p&gt;CMS 工作时，主要步骤有：初始标记、并发标记、重新标记、并发清除和并发重置。其中初始标记和重新标记是独占系统资源的，而并发标记、并发清除和并发重置是可以和用户线程一起执行的。因此，从整体上来说，CMS 收集不是独占式的，它可以在应用程序运行过程中进行垃圾回收。&lt;/p&gt;

&lt;p&gt;根据标记-清除算法，初始标记、并发标记和重新标记都是为了标记出需要回收的对象。并发清理则是在标记完成后，正式回收垃圾对象；并发重置是指在垃圾回收完成后，重新初始化 CMS 数据结构和数据，为下一次垃圾回收做好准备。并发标记、并发清理和并发重置都是可以和应用程序线程一起执行的。&lt;/p&gt;

&lt;p&gt;CMS 收集器在其主要的工作阶段虽然没有暴力地彻底暂停应用程序线程，但是由于它和应用程序线程并发执行，相互抢占 CPU，所以在 CMS 执行期内对应用程序吞吐量造成一定影响。CMS 默认启动的线程数是 (ParallelGCThreads+3)/4),ParallelGCThreads 是新生代并行收集器的线程数，也可以通过-XX:ParallelCMSThreads 参数手工设定 CMS 的线程数量。当 CPU 资源比较紧张时，受到 CMS 收集器线程的影响，应用程序的性能在垃圾回收阶段可能会非常糟糕。&lt;/p&gt;

&lt;p&gt;由于 CMS 收集器不是独占式的回收器，在 CMS 回收过程中，应用程序仍然在不停地工作。在应用程序工作过程中，又会不断地产生垃圾。这些新生成的垃圾在当前 CMS 回收过程中是无法清除的。同时，因为应用程序没有中断，所以在 CMS 回收过程中，还应该确保应用程序有足够的内存可用。因此，CMS 收集器不会等待堆内存饱和时才进行垃圾回收，而是当前堆内存使用率达到某一阈值时，便开始进行回收，以确保应用程序在 CMS 工作过程中依然有足够的空间支持应用程序运行。&lt;/p&gt;

&lt;p&gt;这个回收阈值可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:CMSInitiatingOccupancyFraction&lt;/code&gt; 来指定，默认是 68。即当老年代的空间使用率达到 68%时，会执行一次 CMS 回收。如果应用程序的内存使用率增长很快，在 CMS 的执行过程中，已经出现了内存不足的情况，此时，CMS 回收将会失败，JVM 将启动老年代串行收集器进行垃圾回收。如果这样，应用程序将完全中断，直到垃圾收集完成，这时，应用程序的停顿时间可能很长。因此，根据应用程序的特点，可以对&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:CMSInitiatingOccupancyFraction&lt;/code&gt; 进行调优。如果内存增长缓慢，则可以设置一个稍大的值，大的阈值可以有效降低 CMS 的触发频率，减少老年代回收的次数可以较为明显地改善应用程序性能。反之，如果应用程序内存使用率增长很快，则应该降低这个阈值，以避免频繁触发老年代串行收集器。&lt;/p&gt;

&lt;p&gt;标记-清除算法将会造成大量内存碎片，离散的可用空间无法分配较大的对象。在这种情况下，即使堆内存仍然有较大的剩余空间，也可能会被迫进行一次垃圾回收，以换取一块可用的连续内存，这种现象对系统性能是相当不利的，为了解决这个问题，CMS 收集器还提供了几个用于内存压缩整理的算法。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+UseCMSCompactAtFullCollection&lt;/code&gt; 参数可以使 CMS 在垃圾收集完成后，进行一次内存碎片整理。内存碎片的整理并不是并发进行的。&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:CMSFullGCsBeforeCompaction&lt;/code&gt; 参数可以用于设定进行多少次 CMS 回收后，进行一次内存压缩。
&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:CMSInitiatingOccupancyFraction&lt;/code&gt; 设置为 100，同时设置&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+UseCMSCompactAtFullCollection&lt;/code&gt; 和&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:CMSFullGCsBeforeCompaction&lt;/code&gt;，日志输出如下：&lt;/p&gt;

&lt;p&gt;清单 14.CMS 垃圾回收器 GC 输出&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[GC [DefNew: 825K-&amp;gt;149K(4928K), 0.0023384 secs][Tenured: 8704K-&amp;gt;661K(10944K),
  0.0587725 secs] 9017K-&amp;gt;661K(15872K), 
  [Perm : 374K-&amp;gt;374K(12288K)], 0.0612037 secs] [Times: user=0.01 sys=0.02, real=0.06 secs] 
Heap
 def new generation total 4992K, used 179K [0x27010000, 0x27570000, 0x2c560000)
 eden space 4480K, 4% used [0x27010000, 0x2703cda8, 0x27470000)
 from space 512K, 0% used [0x27470000, 0x27470000, 0x274f0000)
 to space 512K, 0% used [0x274f0000, 0x274f0000, 0x27570000)
 tenured generation total 10944K, used 8853K [0x2c560000, 0x2d010000, 0x37010000)
 the space 10944K, 80% used [0x2c560000, 0x2ce057c8, 0x2ce05800, 0x2d010000)
 compacting perm gen total 12288K, used 374K [0x37010000, 0x37c10000, 0x3b010000)
 the space 12288K, 3% used [0x37010000, 0x3706db10, 0x3706dc00, 0x37c10000)
 ro space 10240K, 51% used [0x3b010000, 0x3b543000, 0x3b543000, 0x3ba10000)
 rw space 12288K, 55% used [0x3ba10000, 0x3c0ae4f8, 0x3c0ae600, 0x3c610000)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;g1--garbage-first&quot;&gt;G1 收集器 (Garbage First)&lt;/h3&gt;

&lt;p&gt;G1 收集器的目标是作为一款服务器的垃圾收集器，因此，它在吞吐量和停顿控制上，预期要优于 CMS 收集器。
与 CMS 收集器相比，G1 收集器是基于标记-压缩算法的。因此，它不会产生空间碎片，也没有必要在收集完成后，进行一次独占式的碎片整理工作。G1 收集器还可以进行非常精确的停顿控制。它可以让开发人员指定当停顿时长为 M 时，垃圾回收时间不超过 N。使用参数&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+UnlockExperimentalVMOptions –XX:+UseG1GC&lt;/code&gt; 来启用 G1 回收器，设置 G1 回收器的目标停顿时间：&lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:MaxGCPauseMills=20,-XX:GCPauseIntervalMills=200&lt;/code&gt;。&lt;/p&gt;

&lt;h1 id=&quot;section-5&quot;&gt;收集器对系统性能的影响&lt;/h1&gt;

&lt;p&gt;通过清单 15 所示代码运行 1 万次循环，每次分配 512*100B 空间，采用不同的垃圾回收器，输出程序运行所消耗的时间。&lt;/p&gt;

&lt;p&gt;清单 15. 性能测试代码&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GCTimeTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
 
 &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;begintime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++){&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//保护内存不溢出&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;clean map&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++){&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nanoTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//不断消耗内存&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endtime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endtime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begintime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;使用参数&lt;code class=&quot;highlighter-rouge&quot;&gt;-Xmx512M -Xms512M -XX:+UseParNewGC&lt;/code&gt; 运行代码，输出如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;clean map 8565
cost time=1655
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;使用参数&lt;code class=&quot;highlighter-rouge&quot;&gt;-Xmx512M -Xms512M -XX:+UseParallelOldGC –XX:ParallelGCThreads=8&lt;/code&gt; 运行代码，输出如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;clean map 8798
cost time=1998
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;使用参数&lt;code class=&quot;highlighter-rouge&quot;&gt;-Xmx512M -Xms512M -XX:+UseSerialGC&lt;/code&gt; 运行代码，输出如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;clean map 8864
cost time=1717
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;使用参数&lt;code class=&quot;highlighter-rouge&quot;&gt;-Xmx512M -Xms512M -XX:+UseConcMarkSweepGC&lt;/code&gt; 运行代码，输出如下：
    clean map 8862
    cost time=1530&lt;/p&gt;

&lt;p&gt;上面例子的 GC 输出可以看出，采用不同的垃圾回收机制及设定不同的线程数，对于代码段的整体执行时间有较大的影响。需要读者有针对性地选用适合自己代码段的垃圾回收机制。&lt;/p&gt;

&lt;h2 id=&quot;gc-&quot;&gt;GC 相关参数总结&lt;/h2&gt;

&lt;p&gt;1、 与串行回收器相关的参数&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-XX:+UseSerialGC:在新生代和老年代使用串行回收器。&lt;/li&gt;
  &lt;li&gt;-XX:+SuivivorRatio:设置 eden 区大小和 survivor 区大小的比例。&lt;/li&gt;
  &lt;li&gt;-XX:+PretenureSizeThreshold:设置大对象直接进入老年代的阈值。当对象的大小超过这个值时，将直接在老年代分配。&lt;/li&gt;
  &lt;li&gt;-XX:MaxTenuringThreshold:设置对象进入老年代的年龄的最大值。每一次 Minor GC 后，对象年龄就加&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;任何大于这个年龄的对象，一定会进入老年代。&lt;/p&gt;

&lt;p&gt;2、 与并行 GC 相关的参数&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-XX:+UseParNewGC: 在新生代使用并行收集器。&lt;/li&gt;
  &lt;li&gt;-XX:+UseParallelOldGC: 老年代使用并行回收收集器。&lt;/li&gt;
  &lt;li&gt;-XX:ParallelGCThreads：设置用于垃圾回收的线程数。通常情况下可以和 CPU 数量相等。但在 CPU 数量比较多的情况下，设置相对较小的数值也是合理的。&lt;/li&gt;
  &lt;li&gt;-XX:MaxGCPauseMills：设置最大垃圾收集停顿时间。它的值是一个大于 0 的整数。收集器在工作时，会调整 &lt;code&gt;Java&lt;/code&gt; 堆大小或者其他一些参数，尽可能地把停顿时间控制在 MaxGCPauseMills 以内。&lt;/li&gt;
  &lt;li&gt;-XX:GCTimeRatio:设置吞吐量大小，它的值是一个 0-100 之间的整数。假设 GCTimeRatio 的值为 n，那么系统将花费不超过 1/(1+n) 的时间用于垃圾收集。&lt;/li&gt;
  &lt;li&gt;-XX:+UseAdaptiveSizePolicy:打开自适应 GC 策略。在这种模式下，新生代的大小，eden 和 survivor 的比例、晋升老年代的对象年龄等参数会被自动调整，以达到在堆大小、吞吐量和停顿时间之间的平衡点。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3、 与 CMS 回收器相关的参数&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-XX:+UseConcMarkSweepGC: 新生代使用并行收集器，老年代使用 CMS+串行收集器。&lt;/li&gt;
  &lt;li&gt;-XX:+ParallelCMSThreads: 设定 CMS 的线程数量。&lt;/li&gt;
  &lt;li&gt;-XX:+CMSInitiatingOccupancyFraction:设置 CMS 收集器在老年代空间被使用多少后触发，默认为 68%。&lt;/li&gt;
  &lt;li&gt;-XX:+UseFullGCsBeforeCompaction:设定进行多少次 CMS 垃圾回收后，进行一次内存压缩。&lt;/li&gt;
  &lt;li&gt;-XX:+CMSClassUnloadingEnabled:允许对类元数据进行回收。&lt;/li&gt;
  &lt;li&gt;-XX:+CMSParallelRemarkEndable:启用并行重标记。&lt;/li&gt;
  &lt;li&gt;-XX:CMSInitatingPermOccupancyFraction:当永久区占用率达到这一百分比后，启动 CMS 回收 (前提是-XX:+CMSClassUnloadingEnabled 激活了)* 。&lt;/li&gt;
  &lt;li&gt;-XX:UseCMSInitatingOccupancyOnly:表示只在到达阈值的时候，才进行 CMS 回收。&lt;/li&gt;
  &lt;li&gt;-XX:+CMSIncrementalMode:使用增量模式，比较适合单 CPU。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;4、 与 G1 回收器相关的参数&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-XX:+UseG1GC：使用 G1 回收器。&lt;/li&gt;
  &lt;li&gt;-XX:+UnlockExperimentalVMOptions:允许使用实验性参数。&lt;/li&gt;
  &lt;li&gt;-XX:+MaxGCPauseMills:设置最大垃圾收集停顿时间。&lt;/li&gt;
  &lt;li&gt;-XX:+GCPauseIntervalMills:设置停顿间隔时间。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;5、 其他参数&lt;/p&gt;

&lt;p&gt;-XX:+DisableExplicitGC: 禁用显示 GC。&lt;/p&gt;

&lt;h2 id=&quot;section-6&quot;&gt;结束语&lt;/h2&gt;

&lt;p&gt;通过本文的学习，读者可以掌握基本的 JVM 垃圾回收器设计原理及使用规范。基于笔者多年的工作经验，没有哪一条优化是可以照本宣科的，它一定是基于您对 JVM 垃圾回收器工作原理及自身程序设计有一定了解前提下，通过大量的实验来找出最适合自己的优化方案。&lt;/p&gt;
</description>
                <link>http://sunfuchang.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2015/06/10/jvm-gc</link>
                <guid>http://sunfuchang.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2015/06/10/jvm-gc</guid>
                <pubDate>Wed, 10 Jun 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Spring Architecture And Design</title>
                <description>
&lt;p&gt;&lt;code&gt;Spring&lt;/code&gt; 作为现在最优秀的框架之一，已被广泛的使用，并且有很多对其分析的文章。本文将从另外一个视角试图剖析出&lt;code&gt;Spring&lt;/code&gt;框架的作者设计 &lt;code&gt;Spring&lt;/code&gt; 框架的骨骼架构的设计理念，有那几个核心组件？为什么需要这些组件？它们又是如何结合在一起构成&lt;code&gt;Spring&lt;/code&gt;的骨骼架构？&lt;code&gt;Spring&lt;/code&gt;的AOP特性又是如何利用这些基础的骨骼架构来工作的？&lt;code&gt;Spring&lt;/code&gt;中又使用了那些设计模式来完成它的这种设计的？它的这种设计理念对对我们以后的软件设计有何启示？本文将详细解答这些问题。&lt;/p&gt;

&lt;h2 id=&quot;spring&quot;&gt;&lt;strong&gt;一、Spring的骨骼架构&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Spring&lt;/code&gt;总共有十几个组件，但是真正核心的组件只有几个，下面是&lt;code&gt;Spring&lt;/code&gt;框架的总体架构图：&lt;/p&gt;

&lt;p&gt;图 1 .&lt;code&gt;Spring&lt;/code&gt; 框架的总体架构图&lt;br /&gt;
&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/1.gif&quot; alt=&quot;Spring框架的总体架构图&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从上图中可以看出&lt;code&gt;Spring&lt;/code&gt;框架中的核心组件只有三个：&lt;code&gt;Core&lt;/code&gt;、&lt;code&gt;Context&lt;/code&gt;和&lt;code&gt;Beans&lt;/code&gt;。它们构建起了整个&lt;code&gt;Spring&lt;/code&gt; 的骨骼架构。没有它们就不可能有&lt;code&gt;AOP&lt;/code&gt;、&lt;code&gt;Web&lt;/code&gt;等上层的特性功能。下面也将主要从这三个组件入手分析&lt;code&gt;Spring&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&quot;spring-&quot;&gt;&lt;strong&gt;二、Spring 的设计理念&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;前面介绍了&lt;code&gt;Spring&lt;/code&gt;的三个核心组件，如果再在它们三个中选出核心的话，那就非&lt;code&gt;Beans&lt;/code&gt;组件莫属了，为何这样说，其实&lt;code&gt;Spring&lt;/code&gt;就是面向&lt;code&gt;Bean&lt;/code&gt;的编程（BOP,Bean Oriented Programming），Bean在&lt;code&gt;Spring&lt;/code&gt;中才是真正的主角。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Bean&lt;/code&gt;在&lt;code&gt;Spring&lt;/code&gt;中作用就像&lt;code&gt;Object&lt;/code&gt;对&lt;code&gt;OOP&lt;/code&gt;的意义一样，没有对象的概念就像没有面向对象编程，&lt;code&gt;Spring&lt;/code&gt;中没有&lt;code&gt;Bean&lt;/code&gt;也就没有&lt;code&gt;Spring&lt;/code&gt;存在的意义。就像一次演出舞台都准备好了但是却没有演员一样。为什么要&lt;code&gt;Bean&lt;/code&gt;这种角色&lt;code&gt;Bean&lt;/code&gt;或者为何在 &lt;code&gt;Spring&lt;/code&gt; 如此重要，这由&lt;code&gt;Spring&lt;/code&gt; 框架的设计目标决定，&lt;code&gt;Spring&lt;/code&gt;为何如此流行，我们用&lt;code&gt;Spring&lt;/code&gt; 的原因是什么，想想你会发现原来&lt;code&gt;Spring&lt;/code&gt; 解决了一个非常关键的问题他可以让你把对象之间的依赖关系转而用配置文件来管理，也就是他的依赖注入机制。而这个注入关系在一个叫 &lt;code&gt;Ioc&lt;/code&gt; 容器中管理，那 &lt;code&gt;Ioc&lt;/code&gt; 容器中有又是什么就是被 &lt;code&gt;Bean&lt;/code&gt; 包裹的对象。&lt;code&gt;Spring&lt;/code&gt; 正是通过把对象包装在 Bean 中而达到对这些对象管理以及一些列额外操作的目的。
它这种设计策略完全类似于 &lt;code&gt;Java&lt;/code&gt; 实现 &lt;code&gt;OOP&lt;/code&gt; 的设计理念，当然了 &lt;code&gt;Java&lt;/code&gt; 本身的设计要比 &lt;code&gt;Spring&lt;/code&gt; 复杂太多太多，但是都是构建一个数据结构，然后根据这个数据结构设计他的生存环境，并让它在这个环境中按照一定的规律在不停的运动，在它们的不停运动中设计一系列与环境或者与其他个体完成信息交换。这样想来回过头想想我们用到的其他框架都是大慨类似的设计理念。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;&lt;strong&gt;三、核心组件如何协同工作&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;前面说 &lt;code&gt;Bean&lt;/code&gt; 是 &lt;code&gt;Spring&lt;/code&gt; 中关键因素，那 &lt;code&gt;Context&lt;/code&gt; 和 &lt;code&gt;Core&lt;/code&gt; 又有何作用呢？前面把 &lt;code&gt;Bean&lt;/code&gt;比作一场演出中的演员的话，那 &lt;code&gt;Context&lt;/code&gt; 就是这场演出的舞台背景，而 &lt;code&gt;Core&lt;/code&gt; 应该就是演出的道具了。只有他们在一起才能具备能演出一场好戏的最基本的条件。当然有最基本的条件还不能使这场演出脱颖而出，还要他表演的节目足够的精彩，这些节目就是 &lt;code&gt;Spring&lt;/code&gt; 能提供的特色功能了。&lt;/p&gt;

&lt;p&gt;我们知道 &lt;code&gt;Bean&lt;/code&gt; 包装的是 &lt;code&gt;Object&lt;/code&gt;，而 &lt;code&gt;Object&lt;/code&gt;必然有数据，如何给这些数据提供生存环境就是&lt;code&gt;Context&lt;/code&gt;要解决的问题，对&lt;code&gt;Context&lt;/code&gt;来说他就是要发现每个&lt;code&gt;Bean&lt;/code&gt;之间的关系，为它们建立这种关系并且要维护好这种关系。所以&lt;code&gt;Context&lt;/code&gt;就是一个 &lt;code&gt;Bean&lt;/code&gt; 关系的集合，这个关系集合又叫 &lt;code&gt;Ioc&lt;/code&gt;容器，一旦建立起这个 &lt;code&gt;Ioc&lt;/code&gt; 容器后 &lt;code&gt;Spring&lt;/code&gt; 就可以为你工作了。那 &lt;code&gt;Core&lt;/code&gt; 组件又有什么用武之地呢？其实 &lt;code&gt;Core&lt;/code&gt; 就是发现、建立和维护每个 &lt;code&gt;Bean&lt;/code&gt; 之间的关系所需要的一些列的工具，从这个角度看来，&lt;code&gt;Core&lt;/code&gt; 这个组件叫 &lt;code&gt;Util&lt;/code&gt; 更能让你理解。&lt;/p&gt;

&lt;p&gt;它们之间可以用下图来表示：&lt;/p&gt;

&lt;p&gt;图 2. 三个组件关系&lt;br /&gt;
&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/2.gif&quot; alt=&quot;三个组件关系&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;&lt;strong&gt;1、核心组件详解&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;这里将详细介绍每个组件内部类的层次关系，以及它们在运行时的时序顺序。我们在使用 &lt;code&gt;Spring&lt;/code&gt; 是应该注意的地方。&lt;/p&gt;

&lt;h4 id=&quot;bean-&quot;&gt;&lt;strong&gt;1.1 Bean 组件&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;前面已经说明了 &lt;code&gt;Bean&lt;/code&gt; 组件对 &lt;code&gt;Spring&lt;/code&gt; 的重要性，下面看看 &lt;code&gt;Bean&lt;/code&gt; 这个组件式怎么设计的。&lt;code&gt;Bean&lt;/code&gt; 组件在 &lt;code&gt;Spring&lt;/code&gt; 的 &lt;code&gt;org.springframework.beans&lt;/code&gt; 包下。这个包下的所有类主要解决了三件事：&lt;code&gt;Bean&lt;/code&gt; 的定义、&lt;code&gt;Bean&lt;/code&gt; 的创建以及对 &lt;code&gt;Bean&lt;/code&gt; 的解析。对 &lt;code&gt;Spring&lt;/code&gt; 的使用者来说唯一需要关心的就是 &lt;code&gt;Bean&lt;/code&gt; 的创建，其他两个由 &lt;code&gt;Spring&lt;/code&gt; 在内部帮你完成了，对你来说是透明的。
&lt;code&gt;Spring Bean&lt;/code&gt; 的创建是典型的工厂模式，他的顶级接口是 &lt;code&gt;BeanFactory&lt;/code&gt;，下图是这个工厂的继承层次关系：&lt;/p&gt;

&lt;p&gt;图 3. &lt;code&gt;Bean&lt;/code&gt; 工厂的继承关系&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/3.png&quot; alt=&quot;Bean 工厂的继承关系&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;BeanFactory&lt;/code&gt; 有三个子类：&lt;code&gt;ListableBeanFactory&lt;/code&gt;、&lt;code&gt;HierarchicalBeanFactory&lt;/code&gt; 和 &lt;code&gt;AutowireCapableBeanFactory&lt;/code&gt;。但是从上图中我们可以发现最终的默认实现类是 &lt;code&gt;DefaultListableBeanFactory&lt;/code&gt;，他实现了所有的接口。那为何要定义这么多层次的接口呢？查阅这些接口的源码和说明发现，每个接口都有他使用的场合，它主要是为了区分在 &lt;code&gt;Spring&lt;/code&gt; 内部在操作过程中对象的传递和转化过程中，对对象的数据访问所做的限制。例如 &lt;code&gt;ListableBeanFactory&lt;/code&gt; 接口表示这些 &lt;code&gt;Bean&lt;/code&gt; 是可列表的，而 &lt;code&gt;HierarchicalBeanFactory&lt;/code&gt; 表示的是这些 &lt;code&gt;Bean&lt;/code&gt; 是有继承关系的，也就是每个 &lt;code&gt;Bean&lt;/code&gt; 有可能有父 &lt;code&gt;Bean&lt;/code&gt;。&lt;code&gt;AutowireCapableBeanFactory&lt;/code&gt; 接口定义 &lt;code&gt;Bean&lt;/code&gt; 的自动装配规则。这四个接口共同定义了 &lt;code&gt;Bean&lt;/code&gt; 的集合、&lt;code&gt;Bean&lt;/code&gt; 之间的关系、以及 &lt;code&gt;Bean&lt;/code&gt; 行为。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Bean&lt;/code&gt; 的定义主要有 &lt;code&gt;BeanDefinition&lt;/code&gt; 描述，如下图说明了这些类的层次关系：&lt;/p&gt;

&lt;p&gt;图 4. &lt;code&gt;Bean&lt;/code&gt; 定义的类层次关系图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/4.png&quot; alt=&quot;Bean 定义的类层次关系图&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Bean&lt;/code&gt; 的定义就是完整的描述了在 &lt;code&gt;Spring&lt;/code&gt; 的配置文件中你定义的 &lt;code&gt;&lt;bean&gt;&lt;/bean&gt;&lt;/code&gt; 节点中所有的信息，包括各种子节点。当 &lt;code&gt;Spring&lt;/code&gt; 成功解析你定义的一个 &lt;code&gt;&lt;bean&gt;&lt;/bean&gt;&lt;/code&gt; 节点后，在 &lt;code&gt;Spring&lt;/code&gt; 的内部他就被转化成 &lt;code&gt;BeanDefinition&lt;/code&gt; 对象。以后所有的操作都是对这个对象完成的。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Bean&lt;/code&gt; 的解析过程非常复杂，功能被分的很细，因为这里需要被扩展的地方很多，必须保证有足够的灵活性，以应对可能的变化。&lt;code&gt;Bean&lt;/code&gt; 的解析主要就是对 &lt;code&gt;Spring&lt;/code&gt; 配置文件的解析。这个解析过程主要通过下图中的类完成：&lt;/p&gt;

&lt;p&gt;图 5. &lt;code&gt;Bean&lt;/code&gt; 的解析类&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/5.png&quot; alt=&quot;Bean的解析类&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当然还有具体对 &lt;code&gt;tag&lt;/code&gt; 的解析这里并没有列出。&lt;/p&gt;

&lt;h4 id=&quot;context-&quot;&gt;&lt;strong&gt;1.2 Context 组件&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;Context&lt;/code&gt; 在 &lt;code&gt;Spring&lt;/code&gt; 的 &lt;code&gt;org.springframework.context&lt;/code&gt; 包下，前面已经讲解了 &lt;code&gt;Context&lt;/code&gt; 组件在 &lt;code&gt;Spring&lt;/code&gt; 中的作用，他实际上就是给 &lt;code&gt;Spring&lt;/code&gt; 提供一个运行时的环境，用以保存各个对象的状态。下面看一下这个环境是如何构建的。
&lt;code&gt;ApplicationContext&lt;/code&gt; 是 &lt;code&gt;Context&lt;/code&gt; 的顶级父类，他除了能标识一个应用环境的基本信息外，他还继承了五个接口，这五个接口主要是扩展了 &lt;code&gt;Context&lt;/code&gt; 的功能。下面是 &lt;code&gt;Context&lt;/code&gt; 的类结构图：&lt;/p&gt;

&lt;p&gt;图 6. &lt;code&gt;Context&lt;/code&gt; 相关的类结构图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/6.png&quot; alt=&quot;Context 相关的类结构图&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;
&lt;small&gt;&lt;a href=&quot;/assets/images/article_imgs/architecture/2015/05/09/6b.png&quot; target=&quot;_blank&quot;&gt;查看大图&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;从上图中可以看出 &lt;code&gt;ApplicationContext&lt;/code&gt; 继承了 &lt;code&gt;BeanFactory&lt;/code&gt;，这也说明了 &lt;code&gt;Spring&lt;/code&gt; 容器中运行的主体对象是 &lt;code&gt;Bean&lt;/code&gt;，另外 &lt;code&gt;ApplicationContext&lt;/code&gt; 继承了 &lt;code&gt;ResourceLoader&lt;/code&gt; 接口，使得 &lt;code&gt;ApplicationContext&lt;/code&gt; 可以访问到任何外部资源，这将在 &lt;code&gt;Core&lt;/code&gt; 中详细说明。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ApplicationContext&lt;/code&gt; 的子类主要包含两个方面：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;ConfigurableApplicationContext&lt;/code&gt; 表示该 &lt;code&gt;Context&lt;/code&gt; 是可修改的，也就是在构建 &lt;code&gt;Context&lt;/code&gt; 中用户可以动态添加或修改已有的配置信息，它下面又有多个子类，其中最经常使用的是可更新的 &lt;code&gt;Context&lt;/code&gt;，即 &lt;code&gt;AbstractRefreshableApplicationContext&lt;/code&gt; 类。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;WebApplicationContext&lt;/code&gt; 顾名思义，就是为 &lt;code&gt;web&lt;/code&gt; 准备的 &lt;code&gt;Context&lt;/code&gt; 他可以直接访问到 &lt;code&gt;ServletContext&lt;/code&gt;，通常情况下，这个接口使用的少。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;再往下分就是按照构建 &lt;code&gt;Context&lt;/code&gt; 的文件类型，接着就是访问 &lt;code&gt;Context&lt;/code&gt; 的方式。这样一级一级构成了完整的 &lt;code&gt;Context&lt;/code&gt; 等级层次。&lt;/p&gt;

&lt;p&gt;总体来说 &lt;code&gt;ApplicationContext&lt;/code&gt; 必须要完成以下几件事：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;标识一个应用环境&lt;/li&gt;
  &lt;li&gt;利用 BeanFactory 创建 Bean 对象&lt;/li&gt;
  &lt;li&gt;保存对象关系表&lt;/li&gt;
  &lt;li&gt;能够捕获各种事件&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;Context&lt;/code&gt; 作为 &lt;code&gt;Spring&lt;/code&gt; 的 &lt;code&gt;Ioc&lt;/code&gt; 容器，基本上整合了 &lt;code&gt;Spring&lt;/code&gt; 的大部分功能，或者说是大部分功能的基础。&lt;/p&gt;

&lt;h4 id=&quot;core-&quot;&gt;&lt;strong&gt;1.3 Core 组件&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;Core&lt;/code&gt; 组件作为 &lt;code&gt;Spring&lt;/code&gt; 的核心组件，他其中包含了很多的关键类，其中一个重要组成部分就是定义了资源的访问方式。这种把所有资源都抽象成一个接口的方式很值得在以后的设计中拿来学习。下面就重要看一下这个部分在 &lt;code&gt;Spring&lt;/code&gt; 的作用。&lt;/p&gt;

&lt;p&gt;下图是 Resource 相关的类结构图：&lt;/p&gt;

&lt;p&gt;图 7. Resource 相关的类结构图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/7.png&quot; alt=&quot;Resource 相关的类结构图&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;
&lt;small&gt;&lt;a href=&quot;/assets/images/article_imgs/architecture/2015/05/09/7b.png&quot; target=&quot;_blank&quot;&gt;查看大图&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;从上图可以看出 &lt;code&gt;Resource&lt;/code&gt; 接口封装了各种可能的资源类型，也就是对使用者来说屏蔽了文件类型的不同。对资源的提供者来说，如何把资源包装起来交给其他人用这也是一个问题，我们看到 &lt;code&gt;Resource&lt;/code&gt; 接口继承了 &lt;code&gt;InputStreamSource&lt;/code&gt; 接口，这个接口中有个 &lt;code&gt;getInputStream&lt;/code&gt; 方法，返回的是 &lt;code&gt;InputStream&lt;/code&gt; 类。这样所有的资源都被可以通过 &lt;code&gt;InputStream&lt;/code&gt; 这个类来获取，所以也屏蔽了资源的提供者。另外还有一个问题就是加载资源的问题，也就是资源的加载者要统一，从上图中可以看出这个任务是由 &lt;code&gt;ResourceLoader&lt;/code&gt; 接口完成，他屏蔽了所有的资源加载者的差异，只需要实现这个接口就可以加载所有的资源，他的默认实现是 &lt;code&gt;DefaultResourceLoader&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;下面看一下 &lt;code&gt;Context&lt;/code&gt; 和 &lt;code&gt;Resource&lt;/code&gt; 是如何建立关系的？首先看一下他们的类关系图：&lt;/p&gt;

&lt;p&gt;图 8. &lt;code&gt;Context&lt;/code&gt; 和 &lt;code&gt;Resource&lt;/code&gt; 的类关系图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/8.png&quot; alt=&quot;Context和Resource的类关系图&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从上图可以看出，&lt;code&gt;Context&lt;/code&gt; 是把资源的加载、解析和描述工作委托给了 &lt;code&gt;ResourcePatternResolver&lt;/code&gt; 类来完成，他相当于一个接头人，他把资源的加载、解析和资源的定义整合在一起便于其他组件使用。&lt;code&gt;Core&lt;/code&gt; 组件中还有很多类似的方式。&lt;/p&gt;

&lt;h3 id=&quot;ioc-&quot;&gt;&lt;strong&gt;2、Ioc 容器如何工作&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;前面介绍了 &lt;code&gt;Core&lt;/code&gt; 组件、&lt;code&gt;Bean&lt;/code&gt; 组件和 &lt;code&gt;Context&lt;/code&gt; 组件的结构与相互关系，下面这里从使用者角度看一下他们是如何运行的，以及我们如何让 &lt;code&gt;Spring&lt;/code&gt; 完成各种功能，&lt;code&gt;Spring&lt;/code&gt; 到底能有那些功能，这些功能是如何得来的，下面介绍。&lt;/p&gt;

&lt;h4 id=&quot;codebeanfactorycode-&quot;&gt;&lt;strong&gt;2.1 如何创建 &lt;code&gt;BeanFactory&lt;/code&gt; 工厂&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;正如图 2 描述的那样，&lt;code&gt;Ioc&lt;/code&gt; 容器实际上就是 &lt;code&gt;Context&lt;/code&gt; 组件结合其他两个组件共同构建了一个 &lt;code&gt;Bean&lt;/code&gt; 关系网，如何构建这个关系网？构建的入口就在 &lt;code&gt;AbstractApplicationContext&lt;/code&gt; 类的 &lt;code&gt;refresh&lt;/code&gt; 方法中。这个方法的代码如下：&lt;/p&gt;

&lt;p&gt;清单 1. &lt;code&gt;AbstractApplicationContext.refresh&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeansException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IllegalStateException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startupShutdownMonitor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;c1&quot;&gt;// Prepare this context for refreshing. &lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;prepareRefresh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
        &lt;span class=&quot;c1&quot;&gt;// Tell the subclass to refresh the internal bean factory. &lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ConfigurableListableBeanFactory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;btainFreshBeanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
        &lt;span class=&quot;c1&quot;&gt;// Prepare the bean factory for use in this context. &lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;prepareBeanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
            &lt;span class=&quot;c1&quot;&gt;// Allows post-processing of the bean factory in context&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;subclasses&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;postProcessBeanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Invoke factory processors registered as beans in the context.&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;invokeBeanFactoryPostProcessors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Register bean processors that intercept bean creation.&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;registerBeanPostProcessors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
            &lt;span class=&quot;c1&quot;&gt;// Initialize message source for this context. &lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;initMessageSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
            &lt;span class=&quot;c1&quot;&gt;// Initialize event multicaster for this context. &lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;initApplicationEventMulticaster&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
            &lt;span class=&quot;c1&quot;&gt;// Initialize other special beans in specific context subclasses. &lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;onRefresh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
            &lt;span class=&quot;c1&quot;&gt;// Check for listener beans and register them. &lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;registerListeners&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
            &lt;span class=&quot;c1&quot;&gt;// Instantiate all remaining (non-lazy-init) singletons. &lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;finishBeanFactoryInitialization&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
            &lt;span class=&quot;c1&quot;&gt;// Last step: publish corresponding event. &lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;finishRefresh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BeansException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
            &lt;span class=&quot;c1&quot;&gt;// Destroy already created singletons to avoid dangling resources. &lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;destroyBeans&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
            &lt;span class=&quot;c1&quot;&gt;// Reset &#39;active&#39; flag. &lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cancelRefresh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
            &lt;span class=&quot;c1&quot;&gt;// Propagate exception to caller. &lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这个方法就是构建整个 &lt;code&gt;Ioc&lt;/code&gt; 容器过程的完整的代码，了解了里面的每一行代码基本上就了解大部分 Spring 的原理和功能了。&lt;/p&gt;

&lt;p&gt;这段代码主要包含这样几个步骤：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;构建 &lt;code&gt;BeanFactory&lt;/code&gt;，以便于产生所需的“演员”&lt;/li&gt;
  &lt;li&gt;注册可能感兴趣的事件&lt;/li&gt;
  &lt;li&gt;创建 &lt;code&gt;Bean&lt;/code&gt; 实例对象&lt;/li&gt;
  &lt;li&gt;触发被监听的事件&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;下面就结合代码分析这几个过程。&lt;/p&gt;

&lt;p&gt;第二三句就是在创建和配置 &lt;code&gt;BeanFactory&lt;/code&gt;。这里是 &lt;code&gt;refresh&lt;/code&gt; 也就是刷新配置，前面介绍了 &lt;code&gt;Context&lt;/code&gt; 有可更新的子类，这里正是实现这个功能，当 &lt;code&gt;BeanFactory&lt;/code&gt; 已存在是就更新，如果没有就新创建。下面是更新 &lt;code&gt;BeanFactory&lt;/code&gt; 的方法代码：&lt;/p&gt;

&lt;p&gt;清单 2. &lt;code&gt;AbstractRefreshableApplicationContext. refreshBeanFactory&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;refreshBeanFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeansException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hasBeanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;destroyBeans&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;closeBeanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;DefaultListableBeanFactory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createBeanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSerializationId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;customizeBeanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;loadBeanDefinitions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
        &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;beanFactoryMonitor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;beanFactory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ApplicationContextException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;I/O error parsing bean definition source for &quot;&lt;/span&gt; 
            &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getDisplayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这个方法实现了 &lt;code&gt;AbstractApplicationContext&lt;/code&gt; 的抽象方法 &lt;code&gt;refreshBeanFactory&lt;/code&gt;，这段代码清楚的说明了 &lt;code&gt;BeanFactory&lt;/code&gt; 的创建过程。注意 &lt;code&gt;BeanFactory&lt;/code&gt; 对象的类型的变化，前面介绍了他有很多子类，在什么情况下使用不同的子类这非常关键。&lt;code&gt;BeanFactory&lt;/code&gt; 的原始对象是 &lt;code&gt;DefaultListableBeanFactory&lt;/code&gt;，这个非常关键，因为他设计到后面对这个对象的多种操作，下面看一下这个类的继承层次类图：&lt;/p&gt;

&lt;p&gt;图 9. &lt;code&gt;DefaultListableBeanFactory&lt;/code&gt; 类继承关系图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/9.png&quot; alt=&quot;DefaultListableBeanFactory 类继承关系图&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;
&lt;small&gt;&lt;a href=&quot;/assets/images/article_imgs/architecture/2015/05/09/9b.png&quot; target=&quot;_blank&quot;&gt;查看大图&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;从这个图中发现除了 &lt;code&gt;BeanFactory&lt;/code&gt; 相关的类外，还发现了与 &lt;code&gt;Bean&lt;/code&gt; 的 &lt;code&gt;register&lt;/code&gt; 相关。这在 &lt;code&gt;refreshBeanFactory&lt;/code&gt; 方法中有一行 &lt;code&gt;loadBeanDefinitions(beanFactory)&lt;/code&gt; 将找到答案，这个方法将开始加载、解析 &lt;code&gt;Bean&lt;/code&gt; 的定义，也就是把用户定义的数据结构转化为 &lt;code&gt;Ioc&lt;/code&gt; 容器中的特定数据结构。&lt;/p&gt;

&lt;p&gt;这个过程可以用下面时序图解释：&lt;/p&gt;

&lt;p&gt;图 10. 创建 &lt;code&gt;BeanFactory&lt;/code&gt; 时序图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/10.png&quot; alt=&quot;创建BeanFactory 时序图&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;
&lt;small&gt;&lt;a href=&quot;/assets/images/article_imgs/architecture/2015/05/09/10b.png&quot; target=&quot;_blank&quot;&gt;查看大图&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Bean&lt;/code&gt; 的解析和登记流程时序图如下：&lt;/p&gt;

&lt;p&gt;图 11. 解析和登记 &lt;code&gt;Bean&lt;/code&gt; 对象时序图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/11.png&quot; alt=&quot;解析和登记Bean对象时序图&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;
&lt;small&gt;&lt;a href=&quot;/assets/images/article_imgs/architecture/2015/05/09/11b.png&quot; target=&quot;_blank&quot;&gt;查看大图&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;创建好 &lt;code&gt;BeanFactory&lt;/code&gt; 后，接下去添加一些 &lt;code&gt;Spring&lt;/code&gt; 本身需要的一些工具类，这个操作在 &lt;code&gt;AbstractApplicationContext&lt;/code&gt; 的 &lt;code&gt;prepareBeanFactory&lt;/code&gt; 方法完成。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;AbstractApplicationContext&lt;/code&gt; 中接下来的三行代码对 &lt;code&gt;Spring&lt;/code&gt; 的功能扩展性起了至关重要的作用。前两行主要是让你现在可以对已经构建的 &lt;code&gt;BeanFactory&lt;/code&gt; 的配置做修改，后面一行就是让你可以对以后再创建 &lt;code&gt;Bean&lt;/code&gt; 的实例对象时添加一些自定义的操作。所以他们都是扩展了 &lt;code&gt;Spring&lt;/code&gt; 的功能，所以我们要学习使用 &lt;code&gt;Spring&lt;/code&gt; 必须对这一部分搞清楚。&lt;/p&gt;

&lt;p&gt;其中在 &lt;code&gt;invokeBeanFactoryPostProcessors&lt;/code&gt; 方法中主要是获取实现 &lt;code&gt;BeanFactoryPostProcessor&lt;/code&gt; 接口的子类。并执行它的 &lt;code&gt;postProcessBeanFactory&lt;/code&gt; 方法，这个方法的声明如下：&lt;/p&gt;

&lt;p&gt;清单 3. &lt;code&gt;BeanFactoryPostProcessor.postProcessBeanFactory&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;postProcessBeanFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConfigurableListableBeanFactory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeansException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;它的参数是 &lt;code&gt;beanFactory&lt;/code&gt;，说明可以对 &lt;code&gt;beanFactory&lt;/code&gt; 做修改，这里注意这个 &lt;code&gt;beanFactory&lt;/code&gt; 是 &lt;code&gt;ConfigurableListableBeanFactory&lt;/code&gt; 类型的，这也印证了前面介绍的不同 &lt;code&gt;BeanFactory&lt;/code&gt; 所使用的场合不同，这里只能是可配置的&lt;code&gt;BeanFactory&lt;/code&gt;，防止一些数据被用户随意修改。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;registerBeanPostProcessors&lt;/code&gt; 方法也是可以获取用户定义的实现了&lt;code&gt;BeanPostProcessor&lt;/code&gt; 接口的子类，并执行把它们注册到 &lt;code&gt;BeanFactory&lt;/code&gt; 对象中的 &lt;code&gt;beanPostProcessors&lt;/code&gt; 变量中。&lt;code&gt;BeanPostProcessor&lt;/code&gt; 中声明了两个方法：&lt;code&gt;postProcessBeforeInitialization&lt;/code&gt;、&lt;code&gt;postProcessAfterInitialization&lt;/code&gt; 分别用于在 &lt;code&gt;Bean&lt;/code&gt; 对象初始化时执行。可以执行用户自定义的操作。&lt;/p&gt;

&lt;p&gt;后面的几行代码是初始化监听事件和对系统的其他监听者的注册，监听者必须是 &lt;code&gt;ApplicationListener&lt;/code&gt; 的子类。&lt;/p&gt;

&lt;h4 id=&quot;bean--bean-&quot;&gt;&lt;strong&gt;2.2 如何创建 Bean 实例并构建 Bean 的关系网？&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;下面就是 &lt;code&gt;Bean&lt;/code&gt; 的实例化代码，是从 &lt;code&gt;finishBeanFactoryInitialization&lt;/code&gt; 方法开始的。&lt;/p&gt;

&lt;p&gt;清单 4. &lt;code&gt;AbstractApplicationContext.finishBeanFactoryInitialization&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;finishBeanFactoryInitialization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ConfigurableListableBeanFactory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;c1&quot;&gt;// Stop using the temporary ClassLoader for type matching. &lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTempClassLoader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
    &lt;span class=&quot;c1&quot;&gt;// Allow for caching all bean definition metadata, not expecting further changes.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;freezeConfiguration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
    &lt;span class=&quot;c1&quot;&gt;// Instantiate all remaining (non-lazy-init) singletons. &lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;beanFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;preInstantiateSingletons&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;从上面代码中可以发现 &lt;code&gt;Bean&lt;/code&gt; 的实例化是在 &lt;code&gt;BeanFactory&lt;/code&gt; 中发生的。&lt;code&gt;preInstantiateSingletons&lt;/code&gt; 方法的代码如下：&lt;/p&gt;

&lt;p&gt;清单 5. &lt;code&gt;DefaultListableBeanFactory.preInstantiateSingletons&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;preInstantiateSingletons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeansException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isInfoEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Pre-instantiating singletons in &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;beanDefinitionMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beanName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;beanDefinitionNames&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;RootBeanDefinition&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getMergedLocalBeanDefinition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beanName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isAbstract&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isSingleton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; 
                &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isLazyInit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isFactoryBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beanName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
                    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FactoryBean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 
                        &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FactoryBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FACTORY_BEAN_PREFIX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beanName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
                    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isEagerInit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSecurityManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; 
                        &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SmartFactoryBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
                        &lt;span class=&quot;n&quot;&gt;isEagerInit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AccessController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doPrivileged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PrivilegedAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
                            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
                                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SmartFactoryBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEagerInit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
                            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
                        &lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAccessControlContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; 
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
                    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
                        &lt;span class=&quot;n&quot;&gt;isEagerInit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SmartFactoryBean&lt;/span&gt; 
                            &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SmartFactoryBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEagerInit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isEagerInit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
                        &lt;span class=&quot;n&quot;&gt;getBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beanName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
                    &lt;span class=&quot;n&quot;&gt;getBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beanName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这里出现了一个非常重要的 &lt;code&gt;Bean&lt;/code&gt; —— &lt;code&gt;FactoryBean&lt;/code&gt;，可以说 &lt;code&gt;Spring&lt;/code&gt; 一大半的扩展的功能都与这个 &lt;code&gt;Bean&lt;/code&gt; 有关，这是个特殊的 &lt;code&gt;Bean&lt;/code&gt; 他是个工厂 &lt;code&gt;Bean&lt;/code&gt;，可以产生 &lt;code&gt;Bean&lt;/code&gt; 的 &lt;code&gt;Bean&lt;/code&gt;，这里的产生 &lt;code&gt;Bean&lt;/code&gt; 是指 &lt;code&gt;Bean&lt;/code&gt; 的实例，如果一个类继承 &lt;code&gt;FactoryBean&lt;/code&gt; 用户可以自己定义产生实例对象的方法只要实现他的 &lt;code&gt;getObject&lt;/code&gt; 方法。然而在 &lt;code&gt;Spring&lt;/code&gt; 内部这个 &lt;code&gt;Bean&lt;/code&gt; 的实例对象是 &lt;code&gt;FactoryBean&lt;/code&gt;，通过调用这个对象的 &lt;code&gt;getObject&lt;/code&gt; 方法就能获取用户自定义产生的对象，从而为 &lt;code&gt;Spring&lt;/code&gt; 提供了很好的扩展性。&lt;code&gt;Spring&lt;/code&gt; 获取 &lt;code&gt;FactoryBean&lt;/code&gt; 本身的对象是在前面加上 &lt;code&gt;&amp;amp;&lt;/code&gt; 来完成的。&lt;/p&gt;

&lt;p&gt;如何创建 &lt;code&gt;Bean&lt;/code&gt; 的实例对象以及如何构建 &lt;code&gt;Bean&lt;/code&gt; 实例对象之间的关联关系式 &lt;code&gt;Spring&lt;/code&gt; 中的一个核心关键，下面是这个过程的流程图。&lt;/p&gt;

&lt;p&gt;图 12.&lt;code&gt;Bean&lt;/code&gt; 实例创建流程图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/12.gif&quot; alt=&quot;Bean实例创建流程图&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;
&lt;small&gt;&lt;a href=&quot;/assets/images/article_imgs/architecture/2015/05/09/12b.gif&quot; target=&quot;_blank&quot;&gt;查看大图&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;如果是普通的 &lt;code&gt;Bean&lt;/code&gt; 就直接创建他的实例，是通过调用 &lt;code&gt;getBean&lt;/code&gt; 方法。下面是创建 &lt;code&gt;Bean&lt;/code&gt; 实例的时序图：&lt;/p&gt;

&lt;p&gt;图 13.&lt;code&gt;Bean&lt;/code&gt; 实例创建时序图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/13.png&quot; alt=&quot;Bean实例创建流程图&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;
&lt;small&gt;&lt;a href=&quot;/assets/images/article_imgs/architecture/2015/05/09/13b.png&quot; target=&quot;_blank&quot;&gt;查看大图&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;还有一个非常重要的部分就是建立 &lt;code&gt;Bean&lt;/code&gt; 对象实例之间的关系，这也是 &lt;code&gt;Spring&lt;/code&gt; 框架的核心竞争力，何时、如何建立他们之间的关系请看下面的时序图：&lt;/p&gt;

&lt;p&gt;图 14.&lt;code&gt;Bean&lt;/code&gt; 对象关系建立&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/14.png&quot; alt=&quot;Bean对象关系建立&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;
&lt;small&gt;&lt;a href=&quot;/assets/images/article_imgs/architecture/2015/05/09/14b.png&quot; target=&quot;_blank&quot;&gt;查看大图&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;h4 id=&quot;codeioccode-&quot;&gt;&lt;strong&gt;2.3 &lt;code&gt;Ioc&lt;/code&gt; 容器的扩展点&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;现在还有一个问题就是如何让这些 &lt;code&gt;Bean&lt;/code&gt;对象有一定的扩展性，就是可以加入用户的一些操作。那么有哪些扩展点呢？ &lt;code&gt;Spring&lt;/code&gt; 又是如何调用到这些扩展点的？&lt;/p&gt;

&lt;p&gt;对 &lt;code&gt;Spring&lt;/code&gt; 的 &lt;code&gt;Ioc&lt;/code&gt; 容器来说，主要有这么几个。&lt;code&gt;BeanFactoryPostProcessor&lt;/code&gt;， &lt;code&gt;BeanPostProcessor&lt;/code&gt;。他们分别是在构建 &lt;code&gt;BeanFactory&lt;/code&gt; 和构建 &lt;code&gt;Bean&lt;/code&gt; 对象时调用。还有就是 &lt;code&gt;InitializingBean&lt;/code&gt; 和 &lt;code&gt;DisposableBean&lt;/code&gt; 他们分别是在 &lt;code&gt;Bean&lt;/code&gt; 实例创建和销毁时被调用。用户可以实现这些接口中定义的方法，&lt;code&gt;Spring&lt;/code&gt; 就会在适当的时候调用他们。还有一个是 &lt;code&gt;FactoryBean&lt;/code&gt; 他是个特殊的 &lt;code&gt;Bean&lt;/code&gt;，这个 &lt;code&gt;Bean&lt;/code&gt; 可以被用户更多的控制。&lt;/p&gt;

&lt;p&gt;这些扩展点通常也是我们使用 &lt;code&gt;Spring&lt;/code&gt; 来完成我们特定任务的地方，如何精通 &lt;code&gt;Spring&lt;/code&gt; 就看你有没有掌握好 &lt;code&gt;Spring&lt;/code&gt; 有哪些扩展点，并且如何使用他们，要知道如何使用他们就必须了解他们内在的机理。可以用下面一个比喻来解释。&lt;/p&gt;

&lt;p&gt;我们把 &lt;code&gt;Ioc&lt;/code&gt; 容器比作一个箱子，这个箱子里有若干个球的模子，可以用这些模子来造很多种不同的球，还有一个造这些球模的机器，这个机器可以产生球模。那么他们的对应关系就是 &lt;code&gt;BeanFactory&lt;/code&gt; 就是那个造球模的机器，球模就是 &lt;code&gt;Bean&lt;/code&gt;，而球模造出来的球就是 &lt;code&gt;Bean&lt;/code&gt; 的实例。那前面所说的几个扩展点又在什么地方呢？ &lt;code&gt;BeanFactoryPostProcessor&lt;/code&gt; 对应到当造球模被造出来时，你将有机会可以对其做出适当的修正，也就是他可以帮你修改球模。而 &lt;code&gt;InitializingBean&lt;/code&gt; 和 &lt;code&gt;DisposableBean&lt;/code&gt; 是在球模造球的开始和结束阶段，你可以完成一些预备和扫尾工作。&lt;code&gt;BeanPostProcessor&lt;/code&gt; 就可以让你对球模造出来的球做出适当的修正。最后还有一个 &lt;code&gt;FactoryBean&lt;/code&gt;，它可是一个神奇的球模。这个球模不是预先就定型了，而是由你来给他确定它的形状，既然你可以确定这个球模型的形状，当然他造出来的球肯定就是你想要的球了，这样在这个箱子里尼可以发现所有你想要的球&lt;/p&gt;

&lt;h4 id=&quot;codeioccode&quot;&gt;&lt;strong&gt;2.4 &lt;code&gt;Ioc&lt;/code&gt;容器如何为我所用&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;前面的介绍了 &lt;code&gt;Spring&lt;/code&gt; 容器的构建过程，那 &lt;code&gt;Spring&lt;/code&gt; 能为我们做什么，&lt;code&gt;Spring&lt;/code&gt; 的 &lt;code&gt;Ioc&lt;/code&gt; 容器又能做什么呢？我们使用 &lt;code&gt;Spring&lt;/code&gt; 必须要首先构建 &lt;code&gt;Ioc&lt;/code&gt; 容器，没有它 &lt;code&gt;Spring&lt;/code&gt; 无法工作，&lt;code&gt;ApplicatonContext.xml&lt;/code&gt; 就是 &lt;code&gt;Ioc&lt;/code&gt; 容器的默认配置文件，&lt;code&gt;Spring&lt;/code&gt; 的所有特性功能都是基于这个 &lt;code&gt;Ioc&lt;/code&gt; 容器工作的，比如后面要介绍的 &lt;code&gt;AOP&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ioc&lt;/code&gt; 它实际上就是为你构建了一个魔方，&lt;code&gt;Spring&lt;/code&gt; 为你搭好了骨骼架构，这个魔方到底能变出什么好的东西出来，这必须要有你的参与。那我们怎么参与？这就是前面说的要了解 &lt;code&gt;Spring&lt;/code&gt; 中那有些扩展点，我们通过实现那些扩展点来改变 &lt;code&gt;Spring&lt;/code&gt; 的通用行为。至于如何实现扩展点来得到我们想要的个性结果，&lt;code&gt;Spring&lt;/code&gt; 中有很多例子，其中 &lt;code&gt;AOP&lt;/code&gt; 的实现就是 &lt;code&gt;Spring&lt;/code&gt; 本身实现了其扩展点来达到了它想要的特性功能，可以拿来参考。&lt;/p&gt;

&lt;h3 id=&quot;spring--aop-&quot;&gt;&lt;strong&gt;3、Spring 中 AOP 特性详解&lt;/strong&gt;&lt;/h3&gt;

&lt;h4 id=&quot;section-2&quot;&gt;&lt;strong&gt;3.1 动态代理的实现原理&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;要了解 &lt;code&gt;Spring&lt;/code&gt; 的 &lt;code&gt;AOP&lt;/code&gt; 就必须先了解的动态代理的原理，因为 &lt;code&gt;AOP&lt;/code&gt; 就是基于动态代理实现的。动态代理还要从 &lt;code&gt;JDK&lt;/code&gt; 本身说起。&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;Jdk&lt;/code&gt; 的 &lt;code&gt;java.lang.reflect&lt;/code&gt; 包下有个 &lt;code&gt;Proxy&lt;/code&gt; 类，它正是构造代理类的入口。这个类的结构入下：&lt;/p&gt;

&lt;p&gt;图 15. &lt;code&gt;Proxy&lt;/code&gt; 类结构&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/15.png&quot; alt=&quot;Proxy类结构&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从上图发现最后面四个是公有方法。而最后一个方法 &lt;code&gt;newProxyInstance&lt;/code&gt; 就是创建代理对象的方法。这个方法的源码如下：&lt;/p&gt;

&lt;p&gt;清单 6. &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;newProxyInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClassLoader&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&amp;gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interfaces&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;InvocationHandler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IllegalArgumentException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NullPointerException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getProxyClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interfaces&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;Constructor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getConstructor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;constructorParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cons&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NoSuchMethodException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InternalError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IllegalAccessException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InternalError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InstantiationException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InternalError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InvocationTargetException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InternalError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这个方法需要三个参数：&lt;code&gt;ClassLoader&lt;/code&gt;，用于加载代理类的 &lt;code&gt;Loader&lt;/code&gt; 类，通常这个 &lt;code&gt;Loader&lt;/code&gt; 和被代理的类是同一个 &lt;code&gt;Loader&lt;/code&gt; 类。&lt;code&gt;Interfaces&lt;/code&gt;，是要被代理的那些那些接口。&lt;code&gt;InvocationHandler&lt;/code&gt;，就是用于执行除了被代理接口中方法之外的用户自定义的操作，他也是用户需要代理的最终目的。用户调用目标方法都被代理到 &lt;code&gt;InvocationHandler&lt;/code&gt; 类中定义的唯一方法 &lt;code&gt;invoke&lt;/code&gt; 中。这在后面再详解。&lt;/p&gt;

&lt;p&gt;下面还是看看&lt;code&gt;Proxy&lt;/code&gt;
如何产生代理类的过程，他构造出来的代理类到底是什么样子？下面揭晓啦。&lt;/p&gt;

&lt;p&gt;图 16. 创建代理对象时序图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/16.png&quot; alt=&quot;创建代理对象时序图&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其实从上图中可以发现正在构造代理类的是在 &lt;code&gt;ProxyGenerator&lt;/code&gt; 的 &lt;code&gt;generateProxyClass&lt;/code&gt; 的方法中。&lt;code&gt;ProxyGenerator&lt;/code&gt; 类在 &lt;code&gt;sun.misc&lt;/code&gt; 包下，感兴趣的话可以看看他的源码。&lt;/p&gt;

&lt;p&gt;假如有这样一个接口，如下：&lt;/p&gt;

&lt;p&gt;清单 7. &lt;code&gt;SimpleProxy&lt;/code&gt; 类&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleProxy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simpleMethod1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simpleMethod2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;代理来生成的类结构如下：&lt;/p&gt;

&lt;p&gt;清单 8. &lt;code&gt;$Proxy2&lt;/code&gt;类&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Proxy2&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Proxy&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SimpleProxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simpleMethod1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simpleMethod2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这个类中的方法里面将会是调用 &lt;code&gt;InvocationHandler&lt;/code&gt; 的 &lt;code&gt;invoke&lt;/code&gt; 方法，而每个方法也将对应一个属性变量，这个属性变量 &lt;code&gt;m&lt;/code&gt; 也将传给 &lt;code&gt;invoke&lt;/code&gt; 方法中的 &lt;code&gt;Method&lt;/code&gt; 参数。整个代理就是这样实现的。&lt;/p&gt;

&lt;h4 id=&quot;spring-aop-&quot;&gt;&lt;strong&gt;3.2 Spring AOP 如何实现&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;从前面代理的原理我们知道，代理的目的是调用目标方法时我们可以转而执行 &lt;code&gt;InvocationHandler&lt;/code&gt; 类的 &lt;code&gt;invoke&lt;/code&gt; 方法，所以如何在 &lt;code&gt;InvocationHandler&lt;/code&gt; 上做文章就是 &lt;code&gt;Spring&lt;/code&gt; 实现 &lt;code&gt;Aop&lt;/code&gt; 的关键所在。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Spring&lt;/code&gt; 的 &lt;code&gt;Aop&lt;/code&gt; 实现是遵守 &lt;code&gt;Aop&lt;/code&gt; 联盟的约定。同时 &lt;code&gt;Spring&lt;/code&gt; 又扩展了它，增加了如 &lt;code&gt;Pointcut&lt;/code&gt;、&lt;code&gt;Advisor&lt;/code&gt; 等一些接口使得更加灵活。&lt;/p&gt;

&lt;p&gt;下面是 Jdk 动态代理的类图：&lt;/p&gt;

&lt;p&gt;图 17. Jdk 动态代理的类图
&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/17.png&quot; alt=&quot;创建代理对象时序图&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上图清楚的显示了 &lt;code&gt;Spring&lt;/code&gt; 引用了 &lt;code&gt;Aop Alliance&lt;/code&gt; 定义的接口。姑且不讨论 &lt;code&gt;Spring&lt;/code&gt; 如何扩展 &lt;code&gt;Aop Alliance&lt;/code&gt;，先看看 &lt;code&gt;Spring&lt;/code&gt; 如何实现代理类的，要实现代理类在 &lt;code&gt;Spring&lt;/code&gt; 的配置文件中通常是这样定一个 &lt;code&gt;Bean&lt;/code&gt; 的，如下：&lt;/p&gt;

&lt;p&gt;清单 9. 配置代理类 &lt;code&gt;Bean&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testBeanSingleton&quot;&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.springframework.aop.framework.ProxyFactoryBean&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;proxyInterfaces&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
            org.springframework.aop.framework.PrototypeTargetTests$TestBean
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;target&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;ref&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;local=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testBeanTarget&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/ref&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;singleton&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;value&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;interceptorNames&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;list&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;testInterceptor&lt;span class=&quot;nt&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;testInterceptor2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/list&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;配置上看到要设置被代理的接口，和接口的实现类也就是目标类，以及拦截器也就在执行目标方法之前被调用，这里 &lt;code&gt;Spring&lt;/code&gt; 中定义的各种各样的拦截器，可以选择使用。
下面看看 &lt;code&gt;Spring&lt;/code&gt; 如何完成了代理以及是如何调用拦截器的。&lt;/p&gt;

&lt;p&gt;前面提到 &lt;code&gt;Spring Aop&lt;/code&gt; 也是实现其自身的扩展点来完成这个特性的，从这个代理类可以看出它正是继承了 &lt;code&gt;FactoryBean&lt;/code&gt; 的 &lt;code&gt;ProxyFactoryBean&lt;/code&gt;，&lt;code&gt;FactoryBean&lt;/code&gt; 之所以特别就在它可以让你自定义对象的创建方法。当然代理对象要通过 &lt;code&gt;Proxy&lt;/code&gt; 类来动态生成。&lt;/p&gt;

&lt;p&gt;下面是 &lt;code&gt;Spring&lt;/code&gt; 创建的代理对象的时序图：&lt;/p&gt;

&lt;p&gt;图 18.&lt;code&gt;Spring&lt;/code&gt; 代理对象的产生&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/18.png&quot; alt=&quot;Spring代理对象的产生&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Spring&lt;/code&gt; 创建了代理对象后，当你调用目标对象上的方法时，将都会被代理到 &lt;code&gt;InvocationHandler&lt;/code&gt; 类的 &lt;code&gt;invoke&lt;/code&gt; 方法中执行，这在前面已经解释。在这里 &lt;code&gt;JdkDynamicAopProxy&lt;/code&gt; 类实现了 &lt;code&gt;InvocationHandler&lt;/code&gt; 接口。&lt;/p&gt;

&lt;p&gt;下面再看看 &lt;code&gt;Spring&lt;/code&gt; 是如何调用拦截器的，下面是这个过程的时序图：&lt;/p&gt;

&lt;p&gt;图 19.&lt;code&gt;Spring&lt;/code&gt; 调用拦截器&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/19.png&quot; alt=&quot;Spring代理对象的产生&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;以上所说的都是 &lt;code&gt;Jdk&lt;/code&gt; 动态代理，&lt;code&gt;Spring&lt;/code&gt; 还支持一种 &lt;code&gt;CGLIB&lt;/code&gt; 类代理，感兴趣自己看吧。&lt;/p&gt;

&lt;h2 id=&quot;spring--1&quot;&gt;&lt;strong&gt;四、Spring 中设计模式分析&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Spring&lt;/code&gt; 中使用的设计模式也很多，比如工厂模式、单例模式、模版模式等，在《Webx框架的系统架构与设计模式》、《Tomcat的系统架构与模式设计分析》已经有介绍，这里就不赘述了。这里主要介绍代理模式和策略模式。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;&lt;strong&gt;1、代理模式&lt;/strong&gt;&lt;/h3&gt;

&lt;h4 id=&quot;section-4&quot;&gt;&lt;strong&gt;1.1 代理模式原理&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;代理模式就是给某一个对象创建一个代理对象，而由这个代理对象控制对原对象的引用，而创建这个代理对象就是可以在调用原对象是可以增加一些额外的操作。下面是代理模式的结构：&lt;/p&gt;

&lt;p&gt;图 20. 代理模式的结构&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/20.png&quot; alt=&quot;代理模式的结构&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;Subject&lt;/code&gt;：抽象主题，它是代理对象的真实对象要实现的接口，当然这可以是多个接口组成。&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ProxySubject&lt;/code&gt;：代理类除了实现抽象主题定义的接口外，还必须持有所代理对象的引用。&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;RealSubject&lt;/code&gt;：被代理的类，是目标对象。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;codespringcode-&quot;&gt;&lt;strong&gt;1.2 &lt;code&gt;Spring&lt;/code&gt; 中如何实现代理模式&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;Spring Aop&lt;/code&gt; 中 &lt;code&gt;Jdk&lt;/code&gt; 动态代理就是利用代理模式技术实现的。在 &lt;code&gt;Spring&lt;/code&gt; 中除了实现被代理对象的接口外，还会有 &lt;code&gt;org.springframework.aop.SpringProxy&lt;/code&gt; 和 &lt;code&gt;org.springframework.aop.framework.Advised&lt;/code&gt; 两个接口。&lt;code&gt;Spring&lt;/code&gt; 中使用代理模式的结构图如下：&lt;/p&gt;

&lt;p&gt;图 21. &lt;code&gt;Spring&lt;/code&gt; 中使用代理模式的结构图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/21.gif&quot; alt=&quot;Spring中使用代理模式的结构图&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$Proxy&lt;/code&gt; 就是创建的代理对象，而 &lt;code&gt;Subject&lt;/code&gt; 是抽象主题，代理对象是通过 &lt;code&gt;InvocationHandler&lt;/code&gt; 来持有对目标对象的引用的。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Spring&lt;/code&gt; 中一个真实的代理对象结构如下：&lt;/p&gt;

&lt;p&gt;清单 10 代理对象 &lt;code&gt;$Proxy4&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Proxy4&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Proxy&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;framework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PrototypeTargetTests&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;$TestBean&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SpringProxy&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;framework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Advised&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m23&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m18&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m26&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m28&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m14&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m27&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m22&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m19&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m15&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m17&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m21&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m13&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reflect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m24&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Advisor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aopalliance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Advice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sayhello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doSomething2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getProxiedInterfaces&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getTargetClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isProxyTargetClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Advisor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAdvisors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addAdvisor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Advisor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
        &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;framework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AopConfigException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addAdvisor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Advisor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;framework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AopConfigException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setTargetSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TargetSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TargetSource&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getTargetSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setPreFiltered&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isPreFiltered&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isInterfaceProxied&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;removeAdvisor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Advisor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;removeAdvisor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;framework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AopConfigException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;replaceAdvisor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Advisor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Advisor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;framework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AopConfigException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addAdvice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aopalliance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Advice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
        &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;framework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AopConfigException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addAdvice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aopalliance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Advice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
        &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;framework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AopConfigException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;removeAdvice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aopalliance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;aop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Advice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toProxyConfigString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isFrozen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setExposeProxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isExposeProxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;section-5&quot;&gt;&lt;strong&gt;2、策略模式&lt;/strong&gt;&lt;/h3&gt;

&lt;h4 id=&quot;section-6&quot;&gt;&lt;strong&gt;2.1 策略模式原理&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;策略模式顾名思义就是做某事的策略，这在编程上通常是指完成某个操作可能有多种方法，这些方法各有千秋，可能有不同的适应的场合，然而这些操作方法都有可能用到。各一个操作方法都当作一个实现策略，使用者可能根据需要选择合适的策略。
下面是策略模式的结构：&lt;/p&gt;

&lt;p&gt;图 22. 策略模式的结构&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/22.png&quot; alt=&quot;策略模式的结构&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;Context&lt;/code&gt;：使用不同策略的环境，它可以根据自身的条件选择不同的策略实现类来完成所要的操作。它持有一个策略实例的引用。创建具体策略对象的方法也可以由他完成。&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Strategy&lt;/code&gt;：抽象策略，定义每个策略都要实现的策略方法&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ConcreteStrategy&lt;/code&gt;：具体策略实现类，实现抽象策略中定义的策略方法&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;codespringcode--1&quot;&gt;&lt;strong&gt;2.2 &lt;code&gt;Spring&lt;/code&gt; 中策略模式的实现&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;Spring&lt;/code&gt; 中策略模式使用有多个地方，如 &lt;code&gt;Bean&lt;/code&gt; 定义对象的创建以及代理对象的创建等。这里主要看一下代理对象创建的策略模式的实现。&lt;/p&gt;

&lt;p&gt;前面已经了解 &lt;code&gt;Spring&lt;/code&gt; 的代理方式有两个 &lt;code&gt;Jdk&lt;/code&gt; 动态代理和 &lt;code&gt;CGLIB&lt;/code&gt; 代理。这两个代理方式的使用正是使用了策略模式。它的结构图如下所示：&lt;/p&gt;

&lt;p&gt;图 23. &lt;code&gt;Spring&lt;/code&gt; 中策略模式结构图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/architecture/2015/05/09/23.png&quot; alt=&quot;Spring中策略模式结构图&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在上面结构图中与标准的策略模式结构稍微有点不同，这里抽象策略是 &lt;code&gt;AopProxy&lt;/code&gt; 接口，&lt;code&gt;Cglib2AopProxy&lt;/code&gt; 和 &lt;code&gt;JdkDynamicAopProxy&lt;/code&gt; 分别代表两种策略的实现方式，&lt;code&gt;ProxyFactoryBean&lt;/code&gt; 就是代表 &lt;code&gt;Context&lt;/code&gt; 角色，它根据条件选择使用 &lt;code&gt;Jdk&lt;/code&gt; 代理方式还是 &lt;code&gt;CGLIB&lt;/code&gt; 方式，而另外三个类主要是来负责创建具体策略对象，&lt;code&gt;ProxyFactoryBean&lt;/code&gt; 是通过依赖的方法来关联具体策略对象的，它是通过调用策略对象的 &lt;code&gt;getProxy(ClassLoader classLoader)&lt;/code&gt; 方法来完成操作。&lt;/p&gt;

&lt;h2 id=&quot;section-7&quot;&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;本文通过从 &lt;code&gt;Spring&lt;/code&gt; 的几个核心组件入手，试图找出构建 &lt;code&gt;Spring&lt;/code&gt; 框架的骨骼架构，进而分析 &lt;code&gt;Spring&lt;/code&gt; 在设计的一些设计理念，是否从中找出一些好的设计思想，对我们以后程序设计能提供一些思路。接着再详细分析了 &lt;code&gt;Spring&lt;/code&gt; 中是如何实现这些理念的，以及在设计模式上是如何使用的。
通过分析 &lt;code&gt;Spring&lt;/code&gt; 给我一个很大的启示就是其这套设计理念其实对我们有很强的借鉴意义，它通过抽象复杂多变的对象，进一步做规范，然后根据它定义的这套规范设计出一个容器，容器中构建它们的复杂关系，其实现在有很多情况都可以用这种类似的处理方法。&lt;/p&gt;

&lt;p&gt;本文来源ibm开发者社区，并略作修改，原文地址：&lt;a href=&quot;http://www.ibm.com/developerworks/cn/java/j-lo-spring-principle/&quot;&gt;http://www.ibm.com/developerworks/cn/java/j-lo-spring-principle/&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sunfuchang.github.io/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/2015/05/09/spring-architecture-and-design</link>
                <guid>http://sunfuchang.github.io/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/2015/05/09/spring-architecture-and-design</guid>
                <pubDate>Sat, 09 May 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Linux Common Command</title>
                <description>
&lt;p&gt;Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。本文记录了Linux常用的一些命令，并不断完善中，以备查阅。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;一、基本操作&lt;/h2&gt;

&lt;p&gt;1、删除文件命令：&lt;/p&gt;
&lt;pre&gt;rm -rf目录循环删除目录&lt;/pre&gt;
&lt;p&gt;2、打开/关闭fpt命令：&lt;/p&gt;
&lt;pre&gt;service sftpd stop/start&lt;/pre&gt;
&lt;p&gt;3、ftp开启命令：&lt;/p&gt;
&lt;pre&gt;
   /etc/rc.d/init.d/xinetd stop
   /etc/rc.d/init.d/vsftpd start
   /etc/rc.d/init.d/xinetd start
&lt;/pre&gt;
&lt;p&gt;4、&lt;code&gt;svn&lt;/code&gt;开启命令：&lt;/p&gt;
&lt;pre&gt;svnserve -d -r /usr/local/svn/&lt;/pre&gt;
&lt;p&gt;5、&lt;code&gt;jetty&lt;/code&gt;启动：&lt;/p&gt;
&lt;pre&gt;
root@ubuntu-server1:/usr/local/jetty-mvn/jetty9/bin# ./jetty.sh start
      Starting Jetty: . . . OK Tue Sep 10 12:30:45 CST 2013
&lt;/pre&gt;
&lt;p&gt;6、解压文件到指定目录：&lt;/p&gt;
&lt;pre&gt;tar xxx.gz -C /usr/local/&lt;/pre&gt;
&lt;p&gt;7、查看权限命令
查看目录的相关权限可以采用命令ls -lD，或者直接用ls -la如:&lt;/p&gt;
&lt;pre&gt;ls -l www.jb51.net  //这里表示查看www.jb51.net目录&lt;/pre&gt;
&lt;p&gt;8、查看&lt;code&gt;linux&lt;/code&gt;机器是32位还是64位的方法：&lt;/p&gt;
&lt;pre&gt;file /sbin/init 或者 file /bin/ls&lt;/pre&gt;
&lt;p&gt;9、找不到网卡解决：&lt;/p&gt;
&lt;pre&gt;vi /etc/udev/rules.d/70-persistent-net.rules&lt;/pre&gt;
&lt;p&gt;将最新的&lt;code&gt;eth2&lt;/code&gt;网卡改为&lt;code&gt;eth0&lt;/code&gt;，并拷贝其ATTR(即最新的mac地址)值，然后编辑&lt;code&gt;eth0&lt;/code&gt;的配置文件，将&lt;code&gt;HWADDR&lt;/code&gt;改为该值，重启网络服务，问题解决。&lt;/p&gt;

&lt;p&gt;10、查看磁盘空间：&lt;/p&gt;
&lt;pre&gt;df -hl&lt;/pre&gt;

&lt;p&gt;11、查看系统用户和组：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;groups&lt;/code&gt;查看当前登录用户的组内成员  
&lt;code&gt;groups gliethttp&lt;/code&gt;查看&lt;code&gt;gliethttp&lt;/code&gt;用户所在的组,以及组内成员  
&lt;code&gt;whoami&lt;/code&gt;查看当前登录用户名 
&lt;code&gt;/etc/group&lt;/code&gt;文件包含所有组  
&lt;code&gt;/etc/shadow&lt;/code&gt;和&lt;code&gt;/etc/passwd&lt;/code&gt;系统存在的所有用户名
&lt;/pre&gt;

&lt;p&gt;12、设置环境变量：&lt;/p&gt;
&lt;pre&gt;vi /etc/profile&lt;/pre&gt;
&lt;p&gt;最后添加&lt;/p&gt;
&lt;pre&gt;export PATH=/usr/loca/mysql/bin:$PATH&lt;/pre&gt;

&lt;p&gt;保存退出执行：&lt;/p&gt;
&lt;pre&gt;source /etc/profile&lt;/pre&gt;
&lt;p&gt;然后查看：&lt;/p&gt;
&lt;pre&gt;echo $PATH&lt;/pre&gt;

&lt;p&gt;13、防火墙：&lt;br /&gt;
（1）、关闭/开启：&lt;/p&gt;
&lt;pre&gt;service iptables stop/start&lt;/pre&gt;
&lt;p&gt;（2）、添加端口过滤：&lt;/p&gt;
&lt;pre&gt;vi /etc/sysconfig/iptables&lt;/pre&gt;

&lt;h2 id=&quot;section-1&quot;&gt;二、修改权限命令&lt;/h2&gt;

&lt;pre&gt;
chmod 777 文件名
1.chmod 577 /home/stuser -R
2.umask -p 0200
3.chown XXXX YYYY (XXXX 为用户名 YYYY为文件名）
&lt;/pre&gt;

&lt;p&gt;权限列表&lt;/p&gt;
&lt;pre&gt;
-rw-------   (600) 只有所有者才有读和写的权限
-rw-r--r--   (644) 只有所有者才有读和写的权限，组群和其他人只有读的权限
-rwx------   (700) 只有所有者才有读，写，执行的权限
-rwxr-xr-x   (755) 只有所有者才有读，写，执行的权限，组群和其他人只有读和执行的权限
-rwx--x--x   (711) 只有所有者才有读，写，执行的权限，组群和其他人只有执行的权限
-rw-rw-rw-   (666) 每个人都有读写的权限
-rwxrwxrwx   (777) 每个人都有读写和执行的权限
&lt;/pre&gt;

&lt;h2 id=&quot;section-2&quot;&gt;三、查看系统信息命令&lt;/h2&gt;

&lt;pre&gt;
# uname -a # 查看内核/操作系统/CPU信息 
# head -n 1 /etc/issue # 查看操作系统版本 
# cat /proc/cpuinfo # 查看CPU信息 
# hostname # 查看计算机名 
# lspci -tv # 列出所有PCI设备 
# lsusb -tv # 列出所有USB设备 
# lsmod # 列出加载的内核模块 
# env # 查看环境变量资源 
# free -m # 查看内存使用量和交换区使用量 
# df -h # 查看各分区使用情况 
# du -sh &amp;lt;目录名&amp;gt; # 查看指定目录的大小 
# grep MemTotal /proc/meminfo # 查看内存总量 
# grep MemFree /proc/meminfo # 查看空闲内存量 
# uptime # 查看系统运行时间、用户数、负载 
# cat /proc/loadavg # 查看系统负载磁盘和分区 
# mount | column -t # 查看挂接的分区状态 
# fdisk -l # 查看所有分区 
# swapon -s # 查看所有交换分区 
# hdparm -i /dev/hda # 查看磁盘参数(仅适用于IDE设备) 
# dmesg | grep IDE # 查看启动时IDE设备检测状况网络 
# ifconfig # 查看所有网络接口的属性 
# iptables -L # 查看防火墙设置 
# route -n # 查看路由表 
# netstat -lntp # 查看所有监听端口 
# netstat -antp # 查看所有已经建立的连接 
# netstat -s # 查看网络统计信息进程 
# ps -ef # 查看所有进程 
# top # 实时显示进程状态用户 
# w # 查看活动用户 
# id &amp;lt;用户名&amp;gt; # 查看指定用户信息 
# last # 查看用户登录日志 
# cut -d: -f1 /etc/passwd # 查看系统所有用户 
# cut -d: -f1 /etc/group # 查看系统所有组 
# crontab -l # 查看当前用户的计划任务服务 
# chkconfig –list # 列出所有系统服务 
# chkconfig –list | grep on # 列出所有启动的系统服务程序 
# rpm -qa # 查看所有安装的软件包
&lt;/pre&gt;

&lt;h2 id=&quot;svn&quot;&gt;四、svn创建版本库配置&lt;/h2&gt;
&lt;pre&gt;
cd /home/svn　　
mkdir ityizhan
svnadmin create ityizhan
cd ityizhan/conf
vi passwd

[users]
ituser = itpassword
vi svnserve.conf
password-db = passwd
authz-db = authz
vi authz

[groups]
ityizhan = ituser
[ityizhan:/]
* =
@ityizhan = rw
&lt;/pre&gt;

&lt;h2 id=&quot;perl&quot;&gt;五、perl安装&lt;/h2&gt;

&lt;p&gt;1、在官方网站下载新版本的源码包：&lt;br /&gt;
&lt;a href=&quot;http://www.perl.org/get.html&quot;&gt;http://www.perl.org/get.html&lt;/a&gt;，版本自己选择，我下载的是&lt;em&gt;perl-5.12.2.tar.gz&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;2、解压&lt;code&gt;/usr/local/src&lt;/code&gt;下的&lt;em&gt;perl-5.12.2.tar.gz&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;# tar zxvf perl-5.12.2.tar.gz&lt;/pre&gt;

&lt;p&gt;3、建立文件目录，以供安装时使用&lt;/p&gt;
&lt;pre&gt;
  # mkdir /usr/local/perl
&lt;/pre&gt;

&lt;p&gt;4、设置源码&lt;br /&gt;
进入&lt;em&gt;perl-5.12.2.tar.gz&lt;/em&gt;的解压目录，执行：&lt;/p&gt;
&lt;pre&gt;
  # ./Configure --help
&lt;/pre&gt;
&lt;p&gt;提示如下: 查看过后，使用这个指令来设置源码：&lt;/p&gt;
&lt;pre&gt;
 # ./Configure -des -Dprefix=/usr/local/perl -Dusethreads -Uversiononly
&lt;/pre&gt;

&lt;p&gt;5、编译&lt;/p&gt;
&lt;pre&gt;
 # make  //这个过程会比较久，因为源码文件有那么大，我的这个有14M。
 # make install
&lt;/pre&gt;
&lt;p&gt;等待这个命令完成后，基本安装就完成了。&lt;/p&gt;

&lt;p&gt;6、替换掉旧的&lt;code&gt;perl&lt;/code&gt;命令&lt;/p&gt;
&lt;pre&gt;
 # cd /usr/bin
 # mv perl perl.old       //把原来的perl更名为perl.old，弃用。
 # ln ls /usr/local/perl/bin/perl /usr/bin/perl  //做一个软链接，使用新的perl
&lt;/pre&gt;

&lt;p&gt;7、完成&lt;/p&gt;
&lt;pre&gt;# perl -version&lt;/pre&gt;
&lt;p&gt;使用这个命令查看perl的版本，可以看到，已经更新到5.12.2版本了.&lt;/p&gt;

&lt;h2 id=&quot;glibc&quot;&gt;六、glibc的安装&lt;/h2&gt;

&lt;p&gt;有些软件可能要求系统的&lt;code&gt;Glibc&lt;/code&gt;高于某个版本才可以正常运行，如果您的&lt;code&gt;Glibc&lt;/code&gt;低于要求的版本，为了运行这些软件，您就不得不升级您的&lt;code&gt;Glibc&lt;/code&gt;了。比如：&lt;/p&gt;
&lt;pre&gt;
qq: error while loading shared libraries: requires glibc 2.5 or later dynamic linker
&lt;/pre&gt;

&lt;p&gt;您可以寻找已经编译好的&lt;code&gt;rpm&lt;/code&gt;包或者使用源代码的方式升级&lt;code&gt;Glibc&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&quot;rpmglibc&quot;&gt;RPM包方式安装glibc&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;RPM&lt;/code&gt;虽然比较容易安装，但就是依赖问题不好解决。给出一个下载地址：
&lt;a href=&quot;http://mirrors.jtlnet.com/centos/5.5/os/i386/CentOS/&quot;&gt;http://mirrors.jtlnet.com/centos/5.5/os/i386/CentOS/&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
$ rpm –ivh glibc-2.5-49.i386.rpm
&lt;/pre&gt;

&lt;p&gt;不过我用的是&lt;code&gt;CentOS&lt;/code&gt; 4.8，貌似不能兼容:&lt;/p&gt;
&lt;pre&gt;
error: Failed dependencies:
glibc-common = 2.5-49 is needed by glibc-2.5-49.i386
glibc &amp;gt; 2.3.4 conflicts with glibc-common-2.3.4-2.43.el4_8.3.i386
&lt;/pre&gt;

&lt;p&gt;安装完成后，可以查看是否已升级：&lt;/p&gt;
&lt;pre&gt;
$ ls -l /lib/libc.so.6
lrwxrwxrwx 1 root root 11 10-08 22:08 /lib/libc.so.6 -&amp;gt; libc-2.5.so
&lt;/pre&gt;

&lt;h3 id=&quot;glibc-1&quot;&gt;编译安装glibc&lt;/h3&gt;

&lt;p&gt;下载glibc&lt;/p&gt;
&lt;pre&gt;
[root@localhost test]# pwd
/test
[root@localhost test]# wget http://ftp.gnu.org/gnu/glibc/glibc-2.9.tar.bz2
&lt;/pre&gt;

&lt;p&gt;下载glibc-linuxthreads&lt;/p&gt;
&lt;pre&gt;
[root@localhost test]# wget http://ftp.gnu.org/gnu/glibc/glibc-linuxthreads-2.5.tar.bz2
&lt;/pre&gt;

&lt;p&gt;解压&lt;/p&gt;
&lt;pre&gt;
[root@localhost test]# tar -jvxf glibc-2.9.tar.bz2
[root@localhost test]# cd glibc-2.9
[root@localhost glibc-2.9]# tar -jvxf ../glibc-linuxthreads-2.5.tar.bz2
&lt;/pre&gt;

&lt;p&gt;配置&lt;/p&gt;
&lt;pre&gt;
[root@localhost glibc-2.9]# cd ..
[root@localhost test]# export CFLAGS=&quot;-g -O2 -march=i486&quot;
[root@localhost test]# mkdir glibc-build
[root@localhost test]# cd glibc-build
[root@localhost glibc-build]# ../glibc-2.9/configure --prefix=/usr --disable-profile --enable-add-ons --with-headers=/usr/include --with-binutils=/usr/bin
&lt;/pre&gt;

&lt;p&gt;安装&lt;/p&gt;
&lt;pre&gt;
[root@localhost glibc-build]# make
[root@localhost glibc-build]# make install
&lt;/pre&gt;

&lt;p&gt;安装编译过程中需要注意三点：&lt;br /&gt;
1、要将&lt;code&gt;glibc-linuxthreads&lt;/code&gt;解压到&lt;code&gt;glibc&lt;/code&gt;目录下。&lt;br /&gt;
2、不能在&lt;code&gt;glibc&lt;/code&gt;当前目录下运行&lt;code&gt;configure&lt;/code&gt;。&lt;br /&gt;
3、否则如果出现错误：error “glibc cannot be compiled without   optimization”，需要加上优化开关：&lt;/p&gt;
&lt;pre&gt;
[root@localhost test]# export CFLAGS=&quot;-g -O2 -march=i486&quot;
&lt;/pre&gt;

&lt;h2 id=&quot;centosdns&quot;&gt;七、CentOS修改DNS&lt;/h2&gt;

&lt;p&gt;1、&lt;code&gt;CentOS&lt;/code&gt;修改&lt;code&gt;DNS&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;修改对应网卡的&lt;code&gt;DNS&lt;/code&gt;的配置文件&lt;/p&gt;
&lt;pre&gt;
# vi /etc/resolv.conf 
&lt;/pre&gt;
&lt;p&gt;修改以下内容&lt;/p&gt;
&lt;pre&gt;
nameserver 8.8.8.8 #google域名服务器
nameserver 8.8.4.4 #google域名服务器
&lt;/pre&gt;

&lt;p&gt;2、&lt;code&gt;CentOS&lt;/code&gt;修改网关&lt;/p&gt;

&lt;p&gt;修改对应网卡的网关的配置文件&lt;/p&gt;
&lt;pre&gt;
[root@centos]# vi /etc/sysconfig/network
&lt;/pre&gt;

&lt;p&gt;修改以下内容&lt;/p&gt;
&lt;pre&gt;
NETWORKING=yes(表示系统是否使用网络，一般设置为yes。如果设为no，则不能使用网络，而且很多系统服务程序将无法启动)
HOSTNAME=centos(设置本机的主机名，这里设置的主机名要和/etc/hosts中设置的主机名对应)
GATEWAY=192.168.1.1(设置本机连接的网关的IP地址。例如，网关为10.0.0.2)
&lt;/pre&gt;

&lt;p&gt;3、&lt;code&gt;CentOS&lt;/code&gt;修改IP地址&lt;/p&gt;

&lt;p&gt;修改对应网卡的IP地址的配置文件&lt;/p&gt;
&lt;pre&gt;
# vi /etc/sysconfig/network-scripts/ifcfg-eth0
&lt;/pre&gt;

&lt;p&gt;修改以下内容&lt;/p&gt;
&lt;pre&gt;
DEVICE=eth0 #描述网卡对应的设备别名，例如ifcfg-eth0的文件中它为eth0
BOOTPROTO=static #设置网卡获得ip地址的方式，可能的选项为static，dhcp或bootp，分别对应静态指定的 ip地址，通过dhcp协议获得的ip地址，通过bootp协议获得的ip地址
BROADCAST=192.168.0.255 #对应的子网广播地址
HWADDR=00:07:E9:05:E8:B4 #对应的网卡物理地址
IPADDR=12.168.1.2 #如果设置网卡获得 ip地址的方式为静态指定，此字段就指定了网卡对应的ip地址
IPV6INIT=no
IPV6_AUTOCONF=no
NETMASK=255.255.255.0 #网卡对应的网络掩码
NETWORK=192.168.1.0 #网卡对应的网络地址
ONBOOT=yes #系统启动时是否设置此网络接口，设置为yes时，系统启动时激活此设备
&lt;/pre&gt;

&lt;p&gt;4、重新启动网络配置&lt;/p&gt;
&lt;pre&gt;
# service network restart 
或
# /etc/init.d/network restart
&lt;/pre&gt;

&lt;p&gt;修改 IP 地址，即时生效:&lt;/p&gt;
&lt;pre&gt;
# ifconfig eth0 192.168.0.2 netmask 255.255.255.0 
&lt;/pre&gt;
&lt;p&gt;启动生效，修改：&lt;/p&gt;
&lt;pre&gt;
/etc/sysconfig/network-scripts/ifcfg-eth0
&lt;/pre&gt;

&lt;p&gt;修改网关&lt;code&gt;Default Gateway&lt;/code&gt;，即时生效:&lt;/p&gt;
&lt;pre&gt;
# route add default gw 192.168.0.1 dev eth0 
&lt;/pre&gt;
&lt;p&gt;启动生效，修改：&lt;/p&gt;
&lt;pre&gt;
/etc/sysconfig/network
&lt;/pre&gt;

&lt;p&gt;修改&lt;code&gt;DNS&lt;/code&gt;，修改&lt;/p&gt;
&lt;pre&gt;
/etc/resolv.conf
&lt;/pre&gt;
&lt;p&gt;修改后可即时生效，启动同样有效。&lt;/p&gt;

&lt;p&gt;修改&lt;code&gt;host name&lt;/code&gt;，即时生效:&lt;/p&gt;
&lt;pre&gt;
# hostname centos1 
&lt;/pre&gt;
&lt;p&gt;启动生效，修改：&lt;/p&gt;
&lt;pre&gt;
/etc/sysconfig/network
&lt;/pre&gt;

&lt;p&gt;手动更改&lt;code&gt;centos&lt;/code&gt;为静态IP&lt;/p&gt;

&lt;p&gt;1，先搜索了一下，得到以下解释：&lt;/p&gt;
&lt;pre&gt;
IP IP地址
Netmark 子网掩码
Gateway 默认网关
HostName 主机名称
DomainName 域名
DNS DNS的IP
&lt;/pre&gt;

&lt;p&gt;2，需要修改的文件常有&lt;/p&gt;
&lt;pre&gt;
/etc/sysconfig/network
/etc/sysconfig/network-scripts/ifcfg-eth0
/etc/resolv.conf
/etc/hosts
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;出现’connect:Network is unreachable error’问题，VirtualBox采用的是Bridged Adapter的方式连接。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;通过修改&lt;/p&gt;
&lt;pre&gt;
/etc/sysconfig/network-scripts/ifcfg-eth0
&lt;/pre&gt;
&lt;p&gt;修改虚拟机的IP地址、network和netmask。
发现能ping同network和netmask，于是断定应该是虚拟机操作系统的路由配置问题，尝试直接修改系统文件：&lt;/p&gt;
&lt;pre&gt;
/etc/sysconfig /network-scripts/route-eth0
&lt;/pre&gt;
&lt;p&gt;添加&lt;/p&gt;
&lt;pre&gt;’defult via 192.168.0.1′（192.168.0.1是我的路由器的IP地址，可以根据自身情况修改）
&lt;/pre&gt;
&lt;p&gt;到&lt;code&gt;/etc/sysconfig/network-scripts/&lt;/code&gt;目录下发现压根儿没有&lt;code&gt;route-eth0&lt;/code&gt;这个文件，于是自己创建了一个，将&lt;code&gt;defult via 192.168.0.1&lt;/code&gt;添加到文件中。&lt;/p&gt;

&lt;p&gt;运行&lt;/p&gt;
&lt;pre&gt;/etc/init.d/network restart&lt;/pre&gt;
&lt;p&gt;重启network，一切ok！&lt;/p&gt;
</description>
                <link>http://sunfuchang.github.io/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/2015/05/07/linux-common-command</link>
                <guid>http://sunfuchang.github.io/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/2015/05/07/linux-common-command</guid>
                <pubDate>Thu, 07 May 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>High Performance Javascript Noblocking Load</title>
                <description>
&lt;p&gt;  &lt;code&gt;JavaScript&lt;/code&gt;在浏览器中的性能，可以说是前端开发者所要面对的最重要的可用性问题。&lt;/p&gt;

&lt;p&gt;  在Yahoo的Yslow23条规则当中，其中一条是将JS放在底部 。原因是，事实上，大多数浏览器使用单进程处理UI和更新&lt;code&gt;JavaScript&lt;/code&gt;运行等多个任务，而同一时间只能有一个任务被执行。&lt;code&gt;JavaScript&lt;/code&gt;运行了多长时间，那么在浏览器空闲下来响应用户交互之前的等待时间就有多长。&lt;br /&gt;
  从基本层面说,这意味着&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签的出现使整个页面因脚本解析、运行而出现等待。不论实际的&lt;code&gt;JavaScript&lt;/code&gt;代码是内联的还是包含在一个不相干的外部文件中,页面下载和解析过程必须停下,等待脚本 完成这些处理,然后才能继续。这是页面生命周期必不可少的部分,因为脚本可能在运行过程中修改页面 内容。典型的例子是&lt;code&gt;document.write()&lt;/code&gt;函数,例如:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Script Example&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
           &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;The date is &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toDateString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt; 
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;  当浏览器遇到一个&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签时,正如上面&lt;code&gt;HTML&lt;/code&gt;页面中那样,无法预知&lt;code&gt;JavaScript&lt;/code&gt;是否在&amp;lt;p&amp;gt;标签中添加内容。因此,浏览器停下来,运行此 &lt;code&gt;JavaScript&lt;/code&gt; 代码,然后再继续解析、翻译页面。同样的事情发生 在使用 src 属性加载 &lt;code&gt;JavaScript&lt;/code&gt; 的过程中。浏览器必须首先下载外部文件的代码,这要占用一些时间,然后解析并运行此代码。此过程中,页面解析和用户交互是被完全阻塞的。&lt;br /&gt;
  因为脚本阻塞其他页面资源的下载过程,所以推荐的办法是:将所有&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签放在尽可能接近&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;标签底部的位置,尽量减少对整个页面下载的影响。例如:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Script Example&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;styles.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Hello world!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;--&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Example&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;recommended&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;positioning&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file1.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt; 
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file2.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt; 
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file3.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;此代码展示了所推荐的&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签在&lt;code&gt;HTML&lt;/code&gt;文件中的位置。尽管脚本下载之间互相阻塞,但页面已经下载完成并且显示在用户面前了,进入页面的速度不会显得太慢。这就是上面提到的将JS放到底部。&lt;br /&gt;
  另外，Yahoo!为他的“Yahoo!用户接口(Yahoo! User Interface,YUI)”库创建一个“联合句柄”,这是通过他们的“内容投递网络(Content Delivery Network,CDN)”实现的。任何一个网站可以使用一个“联合句柄”&lt;code&gt;URL&lt;/code&gt;指出包含&lt;code&gt;YUI&lt;/code&gt;文件包中的哪些文件。例如,下面的&lt;code&gt;URL&lt;/code&gt;包含两个文件:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://yui.yahooapis.com/combo?2.7.0/build/yahoo/yahoo-min.js&amp;amp;2.7.0/build/event/event-min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;  此&lt;code&gt;URL&lt;/code&gt;调用2.7.0版本的&lt;code&gt;yahoo-min.js&lt;/code&gt;和&lt;code&gt;event-min.js&lt;/code&gt;文件。这些文件在服务器上是两个分离的文件,但是当服务器收到此&lt;code&gt;URL&lt;/code&gt;请求时,两个文件将被合并在一起返回给客户端。通过这种方法,就不再需要两个&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签(每个标签加载一个文件),一个&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签就可以加载他们。这是在&lt;code&gt;HTML&lt;/code&gt;页面包含多个外部&lt;code&gt;JavaScript&lt;/code&gt;的最佳方法。&lt;/p&gt;

&lt;h2 id=&quot;noblocking-scripts&quot;&gt;Noblocking Scripts非阻塞脚本&lt;/h2&gt;

&lt;p&gt;  上述是页面初始状态包含多个&lt;code&gt;JavaScript&lt;/code&gt;脚本加载的最佳方法。&lt;code&gt;JavaScript&lt;/code&gt;倾向于阻塞浏览器某些处理过程，如&lt;code&gt;http&lt;/code&gt;请求和界面刷新，这是开发者面临的最显著性能问题。保持&lt;code&gt;JavaScript&lt;/code&gt;文件短小，并限制&lt;code&gt;http&lt;/code&gt;请求的数量，只是创建反应迅速的网页应用第一步。&lt;br /&gt;
  但诸如大型网页有大量的Js代码，保持源码短小并不总是一种最佳选择。So，非阻塞脚本应运而生，我们需要的是向页面中逐步添加&lt;code&gt;JavaScript&lt;/code&gt;，某种程度上而言不会阻塞浏览器。&lt;br /&gt;
  而非阻塞脚本的关键在于，等页面完成加载之后，再加载&lt;code&gt;JavaScript&lt;/code&gt;源码，这意味着在&lt;code&gt;window&lt;/code&gt;的&lt;code&gt;load&lt;/code&gt;事件发出之后开始下载代码。&lt;/p&gt;

&lt;pre&gt;
相关解释：  
&amp;emsp;&amp;emsp;&lt;code&gt;window&lt;/code&gt;的&lt;code&gt;load&lt;/code&gt;事件只会在页面载入完毕后触发一次且仅一次。
&amp;emsp;&amp;emsp;&lt;code&gt;window.onload=function(){}&lt;/code&gt;必须等待网页中所有的内容加载完毕后(包括元素的所有关联文件，例如图片)才能执行，即&lt;code&gt;JavaScript&lt;/code&gt;此时才可以访问页面中的任何元素。
&lt;/pre&gt;

&lt;p&gt;  如下述几种方法：&lt;/p&gt;

&lt;p&gt;  &lt;strong&gt;1. Deferred Scripts延期脚本&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;  &lt;code&gt;Html4&lt;/code&gt;为&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签定义了一个扩展属性：&lt;code&gt;defer&lt;/code&gt;。&lt;br /&gt;
  这个&lt;code&gt;defer&lt;/code&gt;属性指明元素中所包含的脚本不打算修改&lt;code&gt;DOM&lt;/code&gt;，因此代码可以稍后执行。&lt;code&gt;defer&lt;/code&gt;属性只被Internet Explorer 4+和Firefox 3.5+支持，它不是一个理想的跨浏览器解决方案。在其他浏览器上，&lt;code&gt;defer&lt;/code&gt;属性将被忽略。所以，&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签会按照正常默认方式处理，即是会造成阻塞。如果得到各个主流浏览器的支持，这仍是一种有效的解决方式。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file1.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;defer&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;  一个带有&lt;code&gt;defer&lt;/code&gt;属性的&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签可以放置在文档的任何位置，它会在被解析时启动下载，直到&lt;code&gt;DOM&lt;/code&gt;加载完成（在&lt;code&gt;onload&lt;/code&gt;事件句柄被调用之前）。当一个&lt;code&gt;defer&lt;/code&gt;的&lt;code&gt;JavaScript&lt;/code&gt;文件被下载时，它不会阻塞浏览器的其他处理过程，所以这些文件可以与其他资源一起并行下载。
defer可以使用下述代码测试浏览器是否支持defer属性：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Script Defer Example&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;defer&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;defer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;script&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;load&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);};&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;  如果浏览器不支持&lt;code&gt;defer&lt;/code&gt;，那么弹出的对话框的顺序是“defer”，“script”，“load”。&lt;br /&gt;
  如果浏览器支持&lt;code&gt;defer&lt;/code&gt;，那么弹出的对话框的顺序是“script”，“load”，“defer”。&lt;br /&gt;
  根据大家评论的反馈，&lt;code&gt;HTML5&lt;/code&gt;新增了一个&lt;code&gt;async&lt;/code&gt;属性。在上述的基础上，对比一下&lt;code&gt;defer&lt;/code&gt;与&lt;code&gt;async&lt;/code&gt;的异同：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;相同之处：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;加载文件时不阻塞页面渲染&lt;/li&gt;
  &lt;li&gt;使用这两个属性的脚本中不能调用&lt;code&gt;document.write&lt;/code&gt;方法&lt;/li&gt;
  &lt;li&gt;有脚本的onload的事件回调&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;区别点：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;html的版本 html4.0中定义了defer；html5.0中定义了async&lt;/li&gt;
  &lt;li&gt;执行时刻&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;  每一个&lt;code&gt;async&lt;/code&gt;属性的脚本都在它下载结束之后立刻执行，同时会在&lt;code&gt;window&lt;/code&gt;的,&lt;code&gt;load&lt;/code&gt;事件之前执行。所以就有可能出现脚本执行顺序被打乱的情况；每一个,&lt;code&gt;defer&lt;/code&gt;属性的脚本都是在页面解析完毕之后，按照原本的顺序执行，同时会在&lt;code&gt;document&lt;/code&gt;的&lt;code&gt;DOMContentLoaded&lt;/code&gt;之前执行。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;浏览器&lt;/li&gt;
&lt;/ul&gt;

&lt;table class=&quot;table table-condensed&quot; style=&quot;width: 100%;&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
    &lt;th&gt;Feature&lt;/th&gt;
    &lt;th&gt;Chrome&lt;/th&gt;
    &lt;th&gt;Firefox (Gecko)&lt;/th&gt;
    &lt;th&gt;Internet Explorer&lt;/th&gt;
    &lt;th&gt;Opera&lt;/th&gt;
    &lt;th&gt;Safari&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Basic support&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;1.0 (1.7 or earlier)&lt;/td&gt;
&lt;td&gt;(Supported)&lt;/td&gt;
&lt;td&gt;(Supported)&lt;/td&gt;
&lt;td&gt;(Supported)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;async&lt;/code&gt;attribute&lt;/td&gt;
&lt;td&gt;(Supported)&lt;/td&gt;
&lt;td&gt;3.6 (1.9.2)&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;–&lt;/td&gt;
&lt;td&gt;(Supported)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;defer&lt;/code&gt;attribute&lt;/td&gt;
&lt;td&gt;(Supported)&lt;/td&gt;
&lt;td&gt;3.5 (1.9.1)&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;–&lt;/td&gt;
&lt;td&gt;(Supported)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;  &lt;strong&gt;2. Dynamic Script Elements 动态脚本元素&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;  &lt;code&gt;DOM&lt;/code&gt;允许我们使用&lt;code&gt;JavaScript&lt;/code&gt;动态创建&lt;code&gt;HTML&lt;/code&gt;的几乎所有文档内容，一个新的&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;元素可以非常容易的通过标准&lt;code&gt;DOM&lt;/code&gt;创建：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;document_createElement_x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;script&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;file1.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;  新的&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;元素加载&lt;code&gt;file1.js&lt;/code&gt;源文件。此文件当元素添加到页面后立刻开始下载。此技术的重点在于：无论在何处启动下载，文件的下载和运行都不会阻塞其他页面处理过程。&lt;br /&gt;
  当文件使用动态脚本节点下载时，返回的代码通常立即执行（除了Firefox和Opera，它们将等待此前的所有动态脚本节点执行完毕）。&lt;br /&gt;
  大多数情况下，我们希望调用一个函数就可以实现&lt;code&gt;JavaScript&lt;/code&gt;文件的动态下载。下面的函数封装实现了标准实现和IE实现：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadScript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;document_createElement_x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;script&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readyState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//IE&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onreadystatechange&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readyState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;loaded&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readyState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;complete&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
           &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onreadystatechange&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
           &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
     &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Others&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; 
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName_r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;head&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;loadScript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;file1.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//调用&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;File is loaded!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;  此函数接受两个参数：&lt;code&gt;JavaScript&lt;/code&gt;文件的Url和一个当&lt;code&gt;JavaScript&lt;/code&gt;接收完成时触发的回调函数。属性检查用于决定监视哪种事件。最后一步&lt;code&gt;src&lt;/code&gt;属性，并将&lt;code&gt;JavaScript&lt;/code&gt;文件添加到&lt;code&gt;head&lt;/code&gt;。&lt;br /&gt;
  动态脚本加载是非阻塞&lt;code&gt;JavaScript&lt;/code&gt;下载中最常用的模式，因为它可以跨浏览器，而且简单易用。&lt;/p&gt;

&lt;p&gt;  &lt;strong&gt;3. XMLHttpRequest Script Injection XHR脚本注入&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;  另一个以非阻塞方式获得脚本的方法是使用&lt;code&gt;XMLHttpRequest(XHR)&lt;/code&gt;对象将脚本注入到页面中。此技术首先创建一个&lt;code&gt;XHR&lt;/code&gt;对象，然后下载&lt;code&gt;JavaScript&lt;/code&gt;文件，接着用一个动态&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;元素将&lt;code&gt;JavaScript&lt;/code&gt;代码注入页面。看demo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;get&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;file1.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onreadystatechange&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readyState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;304&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 检查http状态码&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;document_createElement_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;script&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
        &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;responseText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;  此代码向服务器发送一个获取&lt;code&gt;file1.js&lt;/code&gt;的文件&lt;code&gt;get&lt;/code&gt;请求。&lt;code&gt;onreadystatechange&lt;/code&gt;事件处理函数检查&lt;code&gt;readyState&lt;/code&gt;是不是4，然后检查&lt;code&gt;http&lt;/code&gt;状态码是不是有效（200表示确定客户端请求已成功，2xx表示有效回应，304表示一个缓存响应）。如果收到一个有效响应，那么就创建一个新的&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;元素，将它的文本属性设置为从服务器接收到的&lt;code&gt;responseText&lt;/code&gt;字符串。这样做实际上会创建一个带有内联代码的&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;元素，一旦新的&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;元素被添加到文档，代码将被执行，并准备使用。&lt;br /&gt;
  此方法的优点是兼容性佳，且你可以下载不立即执行的&lt;code&gt;JavaScript&lt;/code&gt;代码。由于代码返回在&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签之外，它下载后不会自动执行，这使得你可以推迟执行。&lt;br /&gt;
  此方法的确定是受到浏览器同源限制，&lt;code&gt;JavaScript&lt;/code&gt;文件必须与页面放置在同一个域内，不能从CDN(内容分发网络Content Delivery Network)下载。正因为这个原因，大型网页通常不采用XHR脚本注入技术。&lt;/p&gt;

&lt;p&gt;  &lt;strong&gt;4. Recommended Noblocking Pattern 推荐的非阻塞模式&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;  推荐的向页面加载大量&lt;code&gt;JavaScript&lt;/code&gt;的方法分为两个步骤：
*  第一步，包含动态加载&lt;code&gt;JavaScript&lt;/code&gt;所需的代码，然后加载页面初始化所需的除了&lt;code&gt;JavaScript&lt;/code&gt;之外的部分。这部分代码尽量小，可能只包含&lt;code&gt;loadScript()&lt;/code&gt;函数，它的下载和运行非常迅速，不会对页面造成很大干扰。
*  第二步，当初始代码准备好之后，用它来加载其余的&lt;code&gt;JavaScript&lt;/code&gt;。&lt;br /&gt;
  例如：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;loader.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;loadScript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;the-rest.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; 
    &lt;span class=&quot;nx&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;将此代码放置在body的关闭标签&lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt;之前。这样做的好处是，首先，这样确保&lt;code&gt;JavaScript&lt;/code&gt;运行不会影响其他页面的其他部分显示。其次，当第二部分&lt;code&gt;JavaScript&lt;/code&gt;文件完成下载，所有应用程序所必须的&lt;code&gt;DOM&lt;/code&gt;已经创建完毕，并做好被访问的准备，避免使用额外的事件处理（如&lt;code&gt;window.onload&lt;/code&gt;）来得知页面是否已经准备好了。&lt;br /&gt;
  另一个选择是直接将&lt;code&gt;loadScript()&lt;/code&gt;函数嵌入在页面中，这可以减少一个&lt;code&gt;http&lt;/code&gt;请求的开销。例如：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadScript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;document_createElement_x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;script&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readyState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// IE &lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onreadystatechange&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readyState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;loaded&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readyState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;complete&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onreadystatechange&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
                &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Others &lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName_r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;head&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;loadScript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;the-rest.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;  一旦页面初始化代码下载完成，还可以使用&lt;code&gt;loadScript()&lt;/code&gt;函数加载页面所需的额外功能函数。&lt;br /&gt;
  介绍一个通用的工具，Yahoo! Search的Ryan Grove创建了&lt;code&gt;LazyLoad&lt;/code&gt;库（参见：&lt;a href=&quot;http://github.com/rgrove/lazyload/&quot;&gt;http://github.com/rgrove/lazyload/&lt;/a&gt;）。&lt;code&gt;LazyLoad&lt;/code&gt;是一个强大的&lt;code&gt;loadScript()&lt;/code&gt;函数。&lt;code&gt;LazyLoad&lt;/code&gt;精缩之后只有大约1.5KB。用法举例如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;lazyload-min.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;LazyLoad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;the-rest.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; 
        &lt;span class=&quot;nx&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary 总结&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;将所有&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签放置在页面底部，紧靠关闭标签&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;的上方。此方法可以保证页面在脚本运行之前完成解析。&lt;/li&gt;
  &lt;li&gt;将脚本成组打包。页面的&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签越少，页面的加载速度就越快，响应也更迅速。不论外部脚本文件还是内联代码都是如此。&lt;/li&gt;
  &lt;li&gt;有几种方法可以使用非阻塞方式下载&lt;code&gt;JavaScript&lt;/code&gt;：
  *  为&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签添加defer属性
  *  动态创建&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;元素，用它下载并执行代码
  *  用XHR对象下载代码，并注入到页面
 通过上述策略，可以极大提高那些使用&lt;code&gt;JavaScript&lt;/code&gt;代码的网页应用的实际性能。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考书籍《高性能Javascript》。&lt;br /&gt;
原文地址：&lt;a href=&quot;http://blog.sina.com.cn/s/blog_6c969b4a0102vnl2.html&quot;&gt;http://blog.sina.com.cn/s/blog_6c969b4a0102vnl2.html&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sunfuchang.github.io/%E7%BD%91%E7%BB%9C%E5%89%8D%E7%AB%AF/2015/05/06/high-performance-javascript-noblocking-load</link>
                <guid>http://sunfuchang.github.io/%E7%BD%91%E7%BB%9C%E5%89%8D%E7%AB%AF/2015/05/06/high-performance-javascript-noblocking-load</guid>
                <pubDate>Wed, 06 May 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Mybatis Dynamic Sql</title>
                <description>
&lt;p&gt;MyBatis的强大特性之一便是它的动态&lt;code&gt;SQL&lt;/code&gt;能力。如果你有使用JDBC或其他类似框架的经验，你就能体会到根据不同条件拼接&lt;code&gt;SQL&lt;/code&gt;字符串有多么痛苦。拼接的时候要确保不能忘了必要的空格，还要注意省掉列名列表最后的逗号。利用动态&lt;code&gt;SQL&lt;/code&gt;这一特性可以彻底摆脱这种痛苦。&lt;/p&gt;

&lt;p&gt;通常使用动态SQL不可能是独立的一部分,MyBatis当然使用一种强大的动态&lt;code&gt;SQL&lt;/code&gt;语言来改进这种情形,这种语言可以被用在任意映射的&lt;code&gt;SQL&lt;/code&gt;语句中。&lt;/p&gt;

&lt;p&gt;动态&lt;code&gt;SQL&lt;/code&gt;元素和使用&lt;code&gt;JSTL&lt;/code&gt;或其他相似的基于&lt;code&gt;XML&lt;/code&gt;的文本处理器相似。在MyBatis之前的版本中,有很多的元素需要来了解。MyBatis3大大提升了它们,现在用不到原先一半的元素就能工作了。MyBatis 采用功能强大的基于&lt;code&gt;OGNL&lt;/code&gt;的表达式来消除其他元素。&lt;/p&gt;

&lt;h2 id=&quot;if-choose-when-otherwise-trim-where-set-foreach-if&quot;&gt;一、if, choose (when, otherwise), trim (where, set), foreach, if&lt;/h2&gt;

&lt;p&gt;动态&lt;code&gt;SQL&lt;/code&gt;通常要做的事情是有条件地包含&lt;code&gt;where&lt;/code&gt; 子句的一部分。比如:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;findActiveBlogWithTitleLike&quot;&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;resultType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  SELECT * FROM BLOG 
  WHERE state = ‘ACTIVE’ 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title != null&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    AND title like #{title}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这条语句提供了一个可选的文本查找类型的功能。如果没有传入“title”，那么所有处于“ACTIVE”状态的BLOG都会返回；反之若传入了“title”，那么就会把相近“title”的BLOG返回（就这个例子而言，细心的读者会发现其中的参数值是可以包含一些掩码或通配符的）。&lt;/p&gt;

&lt;p&gt;如果想可选地通过“title”和“author”两个条件搜索该怎么办呢？首先，改变语句的名称让它更具实际意义；然后只要加入另一个条件即可。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;findActiveBlogLike&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resultType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  SELECT * FROM BLOG WHERE state = ‘ACTIVE’ 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title != null&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    AND title like #{title}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;author != null and author.name != null&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    AND author_name like #{author.name}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;choose-when-otherwise&quot;&gt;二、choose, when, otherwise&lt;/h2&gt;

&lt;p&gt;有些时候，我们不想用到所有的条件语句，而只想从中择其一二。针对这种情况，MyBatis 提供了&lt;code&gt;choose&lt;/code&gt;元素，它有点像&lt;code&gt;Java&lt;/code&gt;中的&lt;code&gt;switch&lt;/code&gt;语句。&lt;/p&gt;

&lt;p&gt;还是上面的例子，但是这次变为提供了“title”就按“title”查找，提供了“author”就按“author”查找，若两者都没有提供，就返回所有符合条件的BLOG（实际情况可能是由管理员策略地选出BLOG列表，而不是返回大量无意义的随机结果）。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;findActiveBlogLike&quot;&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;resultType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  SELECT * FROM BLOG WHERE state = ‘ACTIVE’
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;choose&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;when&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title != null&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      AND title like #{title}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/when&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;when&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;author != null and author.name != null&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      AND author_name like #{author.name}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/when&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;otherwise&amp;gt;&lt;/span&gt;
      AND featured = 1
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/otherwise&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/choose&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;trim-where-set&quot;&gt;三、trim, where, set&lt;/h2&gt;

&lt;p&gt;前面几个例子已经合宜地解决了一个臭名昭著的动态&lt;code&gt;SQL&lt;/code&gt;问题。现在考虑回到“if”示例，这次我们将“ACTIVE=1”也设置成动态的条件，看看会发生什么。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;findActiveBlogLike&quot;&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;resultType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  SELECT * FROM BLOG 
  WHERE 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;state != null&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    state = #{state}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title != null&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    AND title like #{title}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;author != null and author.name != null&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    AND author_name like #{author.name}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果这些条件没有一个能匹配上将会怎样？最终这条 SQL 会变成这样：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BLOG&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这会导致查询失败。如果仅仅第二个条件匹配又会怎样？这条 SQL 最终会是这样:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BLOG&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;someTitle&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这个查询也会失败。这个问题不能简单的用条件句式来解决，如果你也曾经被迫这样写过，那么你很可能从此以后都不想再这样去写。&lt;/p&gt;

&lt;p&gt;MyBatis有一个简单的处理，这在90%的情况下都会有用。而在不能使用的地方，你可以自定义处理方式来令其正常工作。一处简单的修改就能得到想要的效果:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;findActiveBlogLike&quot;&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;resultType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  SELECT * FROM BLOG 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;where&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;state != null&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
         state = #{state}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title != null&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        AND title like #{title}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;author != null and author.name != null&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        AND author_name like #{author.name}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/where&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;where&lt;/code&gt;元素知道只有在一个以上的&lt;code&gt;if&lt;/code&gt;条件有值的情况下才去插入“WHERE”子句。而且，若最后的内容是“AND”或“OR”开头的，&lt;code&gt;where&lt;/code&gt;元素也知道如何将他们去除。&lt;/p&gt;

&lt;p&gt;如果&lt;code&gt;where&lt;/code&gt;元素没有按正常套路出牌，我们还是可以通过自定义&lt;code&gt;trim&lt;/code&gt;元素来定制我们想要的功能。比如，和&lt;code&gt;where&lt;/code&gt;元素等价的自定义&lt;code&gt;trim&lt;/code&gt;元素为：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;trim&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prefix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WHERE&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prefixOverrides=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;AND |OR &quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  ... 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/trim&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;prefixOverrides&lt;/code&gt;属性会忽略通过管道分隔的文本序列（注意此例中的空格也是必要的）。它带来的结果就是所有在&lt;code&gt;prefixOverrides&lt;/code&gt;属性中指定的内容将被移除，并且插入&lt;code&gt;prefix&lt;/code&gt;属性中指定的内容。&lt;/p&gt;

&lt;p&gt;类似的用于动态更新语句的解决方案叫做&lt;code&gt;set&lt;/code&gt;。&lt;code&gt;set&lt;/code&gt;元素可以被用于动态包含需要更新的列，而舍去其他的。比如：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;update&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;updateAuthorIfNecessary&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  update Author
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;set&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;username != null&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;username=#{username},&lt;span class=&quot;nt&quot;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password != null&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;password=#{password},&lt;span class=&quot;nt&quot;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email != null&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;email=#{email},&lt;span class=&quot;nt&quot;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bio != null&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;bio=#{bio}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/set&amp;gt;&lt;/span&gt;
  where id=#{id}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/update&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这里，&lt;code&gt;set&lt;/code&gt;元素会动态前置&lt;code&gt;SET&lt;/code&gt;关键字，同时也会消除无关的逗号，因为用了条件语句之后很可能就会在生成的赋值语句的后面留下这些逗号。&lt;/p&gt;

&lt;p&gt;若你对等价的自定义&lt;code&gt;trim&lt;/code&gt;元素的样子感兴趣，那这就应该是它的真面目：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;trim&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prefix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SET&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;suffixOverrides=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  ...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/trim&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;注意这里我们忽略的是后缀中的值，而又一次附加了前缀中的值。&lt;/p&gt;

&lt;h2 id=&quot;foreach&quot;&gt;四、foreach&lt;/h2&gt;

&lt;p&gt;动态&lt;code&gt;SQL&lt;/code&gt;的另外一个常用的必要操作是需要对一个集合进行遍历，通常是在构建&lt;code&gt;IN&lt;/code&gt;条件语句的时候。比如：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;selectPostIn&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resultType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;domain.blog.Post&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  SELECT *
  FROM POST P
  WHERE ID in
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;foreach&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;item=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;index=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;index&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;collection=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;list&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;open=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;separator=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;,&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;close=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;)&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        #{item}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/foreach&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;foreach&lt;/code&gt;元素是非常强大的，它允许你指定一个集合，声明可以用在元素体内的集合项和索引变量。它也允许你指定开闭匹配的字符串以及在迭代之间放置分隔符。这个元素是很智能的，因此它不会偶然地附加多余的分隔符。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt; 你可以将一个&lt;code&gt;List&lt;/code&gt;实例或者数组作为参数对象传给MyBatis，当你这么做的时候，&lt;code&gt;MyBatis&lt;/code&gt;会自动将它包装在一个 Map 中并以名称为键。&lt;code&gt;List&lt;/code&gt;实例将会以“list”作为键，而数组实例的键将是“array”。&lt;/p&gt;

&lt;p&gt;到此我们已经完成了涉及&lt;code&gt;XML&lt;/code&gt;配置文件和&lt;code&gt;XML&lt;/code&gt;映射文件的讨论。下一部分将详细探讨&lt;code&gt;Java&lt;/code&gt;API，这样才能从已创建的映射中获取最大利益。&lt;/p&gt;

&lt;h2 id=&quot;bind&quot;&gt;五、bind&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;bind&lt;/code&gt;元素可以从&lt;code&gt;OGNL&lt;/code&gt;表达式中创建一个变量并将其绑定到上下文。比如：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;selectBlogsLike&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resultType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Blog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;bind&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pattern&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&#39;%&#39; + _parameter.getTitle() + &#39;%&#39;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  SELECT * FROM BLOG
  WHERE title LIKE #{pattern}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;multi-db-vendor-support&quot;&gt;六、Multi-db vendor support&lt;/h2&gt;

&lt;p&gt;一个配置了“_databaseId”变量的&lt;code&gt;databaseIdProvider&lt;/code&gt;对于动态代码来说是可用的，这样就可以根据不同的数据库厂商构建特定的语句。比如下面的例子：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;insert&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;insert&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;selectKey&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;keyProperty=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;resultType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;int&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;order=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;BEFORE&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_databaseId == &#39;oracle&#39;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      select seq_users.nextval from dual
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_databaseId == &#39;db2&#39;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      select nextval for seq_users from sysibm.sysdummy1&quot;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/if&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/selectKey&amp;gt;&lt;/span&gt;
  insert into users values (#{id}, #{name})
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/insert&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;pluggable-scripting-languages-for-dynamic-sql&quot;&gt;七、Pluggable Scripting Languages For Dynamic SQL&lt;/h2&gt;

&lt;p&gt;MyBatis从3.2开始支持可插拔的脚本语言，因此你可以在插入一种语言的驱动（language driver）之后来写基于这种语言的动态&lt;code&gt;SQL&lt;/code&gt;查询。&lt;/p&gt;

&lt;p&gt;可以通过实现下面接口的方式来插入一种语言：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LanguageDriver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ParameterHandler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createParameterHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MappedStatement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mappedStatement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameterObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BoundSql&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boundSql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;SqlSource&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createSqlSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XNode&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameterType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;SqlSource&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createSqlSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameterType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;一旦有了自定义的语言驱动，你就可以在&lt;code&gt;mybatis-config.xml&lt;/code&gt;文件中将它设置位默认语言：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;typeAliases&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;typeAlias&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.sample.MyLanguageDriver&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alias=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myLanguage&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/typeAliases&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;settings&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;setting&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;defaultScriptingLanguage&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myLanguage&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;除了设置默认语言，你也可以针对特殊的语句指定特定语言，这可以通过如下的&lt;code&gt;lang&lt;/code&gt;属性来完成：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;selectBlog&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myLanguage&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  SELECT * FROM BLOG
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;或者在你正在使用的映射中加上注解&lt;code&gt;@Lang&lt;/code&gt;来完成：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Mapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyLanguageDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Select&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SELECT * FROM BLOG&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Blog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectBlog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt; 可以将Apache Velocity作为动态语言来使用，更多细节请参考MyBatis-Velocity项目。&lt;/p&gt;

&lt;p&gt;你前面看到的所有&lt;code&gt;xml&lt;/code&gt;标签都是默认MyBatis语言提供的，它是由别名为&lt;code&gt;xml&lt;/code&gt;语言驱动器&lt;code&gt;org.apache.ibatis.scripting.xmltags.XmlLanguageDriver&lt;/code&gt;驱动的。&lt;/p&gt;
</description>
                <link>http://sunfuchang.github.io/%E6%8A%80%E6%9C%AF%E6%91%98%E5%BD%95/2015/05/05/mybatis-dynamic-sql</link>
                <guid>http://sunfuchang.github.io/%E6%8A%80%E6%9C%AF%E6%91%98%E5%BD%95/2015/05/05/mybatis-dynamic-sql</guid>
                <pubDate>Tue, 05 May 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Build Blog On Github</title>
                <description>
&lt;p&gt;最近在使用github的pages功能，结合jekyll在windowns平台上搭建个人博客系统，经过自己不断的探索和尝试，终于搭建成功，遂记录下来，以供参考和备用。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;前提&lt;/h2&gt;

&lt;p&gt;1、会用git&lt;br /&gt;
2、懂html和css&lt;br /&gt;
3、有较强的学习能力&lt;br /&gt;
具备以上能力，你就具备了在github上搭建个人博客的基本条件。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;最近研究了下github的pages功能，发现是一个比较理想的搭建个人博客的方案，主要因为，github的pages功能能够托管我们的站点，而且是免费的，既简单又节约成本，但是个人站点的页面都是静态的，也就是说你博客上的页面都是静态html。当然，github支持jekyll，我们可以集成jekyll来解析我们的静态站点，更加方便，而且功能更强大，写博客就可以直接使用markdown或者textile语法。jekyll官方帮助文档：&lt;br /&gt;
&lt;a href=&quot;https://help.github.com/categories/github-pages-basics/&quot;&gt;https://help.github.com/categories/github-pages-basics/&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;github的page分为两种：个人/组织站点和项目站点，一般来说，较好的托管于github的开源框架都有帮助页面，例如mybatis的网站为：&lt;a href=&quot;http://mybatis.github.io/mybatis-3/&quot;&gt;http://mybatis.github.io/mybatis-3/&lt;/a&gt;，如果用来搭建个人站点，推荐用个人站点的方式，大概步骤如下：&lt;/p&gt;

&lt;h2 id=&quot;github&quot;&gt;一、注册github账号&lt;/h2&gt;
&lt;p&gt;注意你的用户名，因为注册后的站点的域名必须遵循github规定，格式为：username.github.io，所以最好取一个你喜欢的github用户名。注册什么的就不多说了，会上网的都明白。&lt;/p&gt;

&lt;h2 id=&quot;git&quot;&gt;二、安装git&lt;/h2&gt;
&lt;p&gt;最好下载有命令行的git，推荐git官方版本，下载地址：&lt;a href=&quot;http://git-scm.com/download/&quot;&gt;http://git-scm.com/download/&lt;/a&gt;，我的操作系统是win7，安装步骤也非常简单，不多说，安装完成后，在git bash或者cmd中输入&lt;em&gt;git –version&lt;/em&gt;，如果能正确打印出git版本信息，这说明安装成功。&lt;/p&gt;

&lt;h2 id=&quot;jekyllbootstrap&quot;&gt;三、使用jekyllbootstrap项目作为模板，创建个人站点&lt;/h2&gt;
&lt;p&gt;当然，你也可以直接迁出别人的博客，修改样式和内容，从而构建自己的博客，前提是你必须安装了git。&lt;/p&gt;

&lt;p&gt;1、创建版本库&lt;/p&gt;

&lt;p&gt;登录github，创建一个以&lt;em&gt;username.git.io&lt;/em&gt;为名称的版本库，username为你的git用户名，不是邮箱，例如，我的为：&lt;a href=&quot;sunfuchang.github.io&quot;&gt;sunfuchang.github.io&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;2、基于jekyllbootstrap迁出你的版本库代码到本地&lt;/p&gt;
&lt;pre&gt;
git clone https://github.com/plusjade/jekyll-bootstrap.git USERNAME.github.com
cd USERNAME.github.com
git remote set-url origin git@github.com:USERNAME/USERNAME.github.com.git
git push origin master
&lt;/pre&gt;

&lt;p&gt;3、查看你的站点&lt;/p&gt;

&lt;p&gt;代码push到github上后，稍等片刻，你就可以访问你的默认站点了，地址为：http://username.github.io。
当然，此时的站点是jekyllboostrap默认的，你需要修改为你想要的内容，比如修改模板、修改站点配置等等……&lt;/p&gt;

&lt;p&gt;为了能够在本地浏览站点，方便调试、预览，我们还需要安装jekyll——静态页面解析工具。&lt;/p&gt;

&lt;h2 id=&quot;jekyll&quot;&gt;四、安装jekyll&lt;/h2&gt;
&lt;p&gt;由于我的操作系统是win7 64位旗舰版，在windows上安装比较复杂，而且步骤繁多，请跟随我一步一步安装，稍有不慎，可能导致各种错误，所以定要仔细，详细安装教程见：&lt;br /&gt;
&lt;a href=&quot;http://sunfuchang.github.io/technology/2015/05/04/install-jekyll-on-windows/&quot;&gt;http://sunfuchang.github.io/technology/2015/05/04/install-jekyll-on-windows/&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;jekyll-1&quot;&gt;五、使用jekyll搭建个人博客&lt;/h2&gt;
&lt;p&gt;jekyll安装完成后，如果在git bash或者cmd中，输入ruby -v，jekyll -v，gem -v，都能正确显示版本信息，说明jekyll安装成功，接下来就可以使用jekyll编译、预览你的站点了，详细教程稍后补上。&lt;/p&gt;

&lt;p&gt;总结，以上内容是基于jekyllbootstrap项目为模板来搭建自己的站点，仅仅讲述了整体的步骤，具体教程稍后补上。当然，你可以直接clone我已经搭建好的站点，然后修修改改，就可以直接构建为你的站点了：&lt;a href=&quot;http://sunfuchang.github.io&quot;&gt;http://sunfuchang.github.io&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;参考网站：&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://help.github.com/categories/github-pages-basics/&quot;&gt;https://help.github.com/categories/github-pages-basics/&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://jekyllbootstrap.com/usage/jekyll-quick-start.html&quot;&gt;http://jekyllbootstrap.com/usage/jekyll-quick-start.html&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://jekyllrb.com/docs/home/&quot;&gt;http://jekyllrb.com/docs/home/&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://jekyll-windows.juthilo.com/2-jekyll-gem/&quot;&gt;http://jekyll-windows.juthilo.com/2-jekyll-gem/&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://ruby.taobao.org/&quot;&gt;http://ruby.taobao.org/&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sunfuchang.github.io/%E6%8A%80%E6%9C%AF%E6%91%98%E5%BD%95/2015/05/05/build-blog-on-github</link>
                <guid>http://sunfuchang.github.io/%E6%8A%80%E6%9C%AF%E6%91%98%E5%BD%95/2015/05/05/build-blog-on-github</guid>
                <pubDate>Tue, 05 May 2015 00:00:00 +0800</pubDate>
        </item>

        <item>
                <title>Install Jekyll On Windows</title>
                <description>
&lt;p&gt;上一篇讲了在github上构建个人站点的基本步骤，现在来详细说下win7上怎么安装jekyll。&lt;/p&gt;

&lt;h2 id=&quot;windowsruby&quot;&gt;1、安装windows版本你的ruby：&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://rubyinstaller.org/downloads/&quot;&gt;http://rubyinstaller.org/downloads/&lt;/a&gt;&lt;br /&gt;
根据操作系统下载对应的版本，这里我下载的是2.0.0 64位版本。&lt;/p&gt;

&lt;h2 id=&quot;rubypath&quot;&gt;2、安装ruby，记住勾上添加到执行目录到path选项：&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/article_imgs/technology/2015/05/04/1.png&quot; alt=&quot;图1&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;
安装完成后，确定ruby是否正确安装：&lt;br /&gt;
&lt;img src=&quot;/assets/images/article_imgs/technology/2015/05/04/2.png&quot; alt=&quot;图2&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;
看到如图信息，则说明安装完成。&lt;/p&gt;

&lt;h2 id=&quot;devkit&quot;&gt;3、下载DevKit：&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://rubyinstaller.org/downloads/&quot;&gt;http://rubyinstaller.org/downloads/&lt;/a&gt;&lt;br /&gt;
这里我下载的64位的版本：&lt;em&gt;DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;devkit-1&quot;&gt;4、安装DevKit：&lt;/h2&gt;
&lt;p&gt;点击下载的exe程序，解压到&lt;em&gt;D:DevKit&lt;/em&gt;目录
## 5、配置ruby使用DevKit：&lt;/p&gt;
&lt;pre&gt;cd D:\DevKit&lt;/pre&gt;

&lt;p&gt;执行&lt;em&gt;ruby dk.rb init&lt;/em&gt;命令：&lt;br /&gt;
&lt;img src=&quot;/assets/images/article_imgs/technology/2015/05/04/3.png&quot; alt=&quot;图3&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;
如图所示，提示配置&lt;em&gt;config.yml&lt;/em&gt;文件，暂时不理睬，稍后说明解决办法。&lt;br /&gt;
执行&lt;em&gt;ruby dk.rb install&lt;/em&gt;命令：&lt;br /&gt;
&lt;img src=&quot;/assets/images/article_imgs/technology/2015/05/04/4.png&quot; alt=&quot;图4&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;
看到报错，原因是64位操作系统需要配置ruby安装的绝对路径，打开&lt;em&gt;config.yml&lt;/em&gt;文件，最后添加你的ruby安装位置，如图：&lt;br /&gt;
&lt;img src=&quot;/assets/images/article_imgs/technology/2015/05/04/5.png&quot; alt=&quot;图5&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;
注意斜杠，最好按照规范使用左斜杠。&lt;br /&gt;
再次执行安装命令，可以看到安装成功提示：&lt;br /&gt;
&lt;img src=&quot;/assets/images/article_imgs/technology/2015/05/04/6.png&quot; alt=&quot;图6&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;
## 6、安装jekyll：
执行&lt;em&gt;gem install jekyll&lt;/em&gt;命令，出现一个跟字符相关的错误：&lt;/p&gt;
&lt;pre&gt;ERROR:  While executing gem ... (ArgumentError) invalid byte sequence in UTF-8&lt;/pre&gt;
&lt;p&gt;网上查了下，大概是ruby版本的问题，下载安装ruby2.0版本即可，只是2.1版本为什么有这个问题，我还没搞懂，知情的朋友请告知，多谢指教。 &lt;br /&gt;
再次执行如下命令：&lt;br /&gt;
&lt;img src=&quot;/assets/images/article_imgs/technology/2015/05/04/7.png&quot; alt=&quot;图7&quot; align=&quot;center&quot; /&gt;&lt;br /&gt;
可以看到，又出现了一个跟权限有关的错误信息，解决方式如下：&lt;br /&gt;
打开&lt;a href=&quot;http://ruby.taobao.org/&quot;&gt;http://ruby.taobao.org/&lt;/a&gt;，可以看到如下信息：&lt;/p&gt;
&lt;pre&gt;
$ gem sources --remove https://rubygems.org/  
$ gem sources -a https://ruby.taobao.org/  
$ gem sources -l  
*** CURRENT SOURCES ***   
# 请确保只有 ruby.taobao.org  
$ gem install rails
&lt;/pre&gt;

&lt;p&gt;执行对应的命令：&lt;br /&gt;
&lt;img src=&quot;/assets/images/article_imgs/technology/2015/05/04/8.png&quot; alt=&quot;图8&quot; align=&quot;center&quot; /&gt; &lt;br /&gt;
等待rails安装完成，会显示如下信息：&lt;br /&gt;
&lt;img src=&quot;/assets/images/article_imgs/technology/2015/05/04/9.png&quot; alt=&quot;图9&quot; align=&quot;center&quot; /&gt; &lt;br /&gt;
然后安装jekyll：&lt;br /&gt;
&lt;img src=&quot;/assets/images/article_imgs/technology/2015/05/04/10.png&quot; alt=&quot;图10&quot; align=&quot;center&quot; /&gt; &lt;br /&gt;
看到如图所示的信息，说明jekyll安装成功。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;参考文档：&lt;/strong&gt;&lt;a href=&quot;http://jekyll-windows.juthilo.com/2-jekyll-gem/&quot;&gt;http://jekyll-windows.juthilo.com/2-jekyll-gem/&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://sunfuchang.github.io/%E6%8A%80%E6%9C%AF%E6%91%98%E5%BD%95/2015/05/04/install-jekyll-on-windows</link>
                <guid>http://sunfuchang.github.io/%E6%8A%80%E6%9C%AF%E6%91%98%E5%BD%95/2015/05/04/install-jekyll-on-windows</guid>
                <pubDate>Mon, 04 May 2015 00:00:00 +0800</pubDate>
        </item>


</channel>
</rss>
